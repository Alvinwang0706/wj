
/**
 * ProductInfoWebServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.0  Built on : May 17, 2011 (04:19:43 IST)
 */
package com.sinosoft.webservice.productInfo;



        /*
        *  ProductInfoWebServiceStub java implementation
        */


public class ProductInfoWebServiceStub extends org.apache.axis2.client.Stub
{
    protected org.apache.axis2.description.AxisOperation[] _operations;

    //hashmaps to keep the fault mapping
    private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
    private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
    private java.util.HashMap faultMessageMap = new java.util.HashMap();

    private static int counter = 0;

    private static synchronized java.lang.String getUniqueSuffix(){
        // reset the counter if it is greater than 99999
        if (counter > 99999){
            counter = 0;
        }
        counter = counter + 1;
        return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
    }


    private void populateAxisService() throws org.apache.axis2.AxisFault {

        //creating the Service with a unique name
        _service = new org.apache.axis2.description.AxisService("ProductInfoWebService" + getUniqueSuffix());
        addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];

        __operation = new org.apache.axis2.description.OutInAxisOperation();


        __operation.setName(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com", "getProductInfo"));
        _service.addOperation(__operation);




        _operations[0]=__operation;


    }

    //populates the faults
    private void populateFaults(){



    }

    /**
     *Constructor that takes in a configContext
     */

    public ProductInfoWebServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
                                     java.lang.String targetEndpoint)
            throws org.apache.axis2.AxisFault {
        this(configurationContext,targetEndpoint,false);
    }


    /**
     * Constructor that takes in a configContext  and useseperate listner
     */
    public ProductInfoWebServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
                                     java.lang.String targetEndpoint, boolean useSeparateListener)
            throws org.apache.axis2.AxisFault {
        //To populate AxisService
        populateAxisService();
        populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);


        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);

        //Set the soap version
        _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);


    }

    /**
     * Default Constructor
     */
    public ProductInfoWebServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {

        this(configurationContext,"http://localhost:8081/product/services/ProductInfoWebService.ProductInfoWebServiceHttpSoap12Endpoint/" );

    }

    /**
     * Default Constructor
     */
    public ProductInfoWebServiceStub() throws org.apache.axis2.AxisFault {

        this("http://localhost:8081/product/services/ProductInfoWebService.ProductInfoWebServiceHttpSoap12Endpoint/" );

    }

    /**
     * Constructor taking the target endpoint
     */
    public ProductInfoWebServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }




    /**
     * Auto generated method signature
     *
     * @see com.sinosoft.webservice.productInfo.ProductInfoWebService#getProductInfo
     * @param getProductInfo0

     */



    public  com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse getProductInfo(

            com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo getProductInfo0)


            throws java.rmi.RemoteException

    {
        org.apache.axis2.context.MessageContext _messageContext = null;
        try{
            org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
            _operationClient.getOptions().setAction("urn:getProductInfo");
            _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);



            addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");


            // create a message context
            _messageContext = new org.apache.axis2.context.MessageContext();



            // create SOAP envelope with that payload
            org.apache.axiom.soap.SOAPEnvelope env = null;


            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                    getProductInfo0,
                    optimizeContent(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                            "getProductInfo")), new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                            "getProductInfo"));

            //adding SOAP soap_headers
            _serviceClient.addHeadersToEnvelope(env);
            // set the message context with that soap envelope
            _messageContext.setEnvelope(env);

            // add the message contxt to the operation client
            _operationClient.addMessageContext(_messageContext);

            //execute the operation client
            _operationClient.execute(true);


            org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                    org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
            org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();


            java.lang.Object object = fromOM(
                    _returnEnv.getBody().getFirstElement() ,
                    com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse.class,
                    getEnvelopeNamespaces(_returnEnv));


            return (com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse)object;

        }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});


                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
        } finally {
            if (_messageContext.getTransportOut() != null) {
                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
            }
        }
    }

    /**
     * Auto generated method signature for Asynchronous Invocations
     *
     * @see com.sinosoft.webservice.productInfo.ProductInfoWebService#startgetProductInfo
     * @param getProductInfo0

     */
    public  void startgetProductInfo(

            com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo getProductInfo0,

            final com.sinosoft.webservice.productInfo.ProductInfoWebServiceCallbackHandler callback)

            throws java.rmi.RemoteException{

        org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
        _operationClient.getOptions().setAction("urn:getProductInfo");
        _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);



        addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");



        // create SOAP envelope with that payload
        org.apache.axiom.soap.SOAPEnvelope env=null;
        final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();


        //Style is Doc.


        env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                getProductInfo0,
                optimizeContent(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                        "getProductInfo")), new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                        "getProductInfo"));

        // adding SOAP soap_headers
        _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);



        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                try {
                    org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                    java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                            com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse.class,
                            getEnvelopeNamespaces(resultEnv));
                    callback.receiveResultgetProductInfo(
                            (com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse)object);

                } catch (org.apache.axis2.AxisFault e) {
                    callback.receiveErrorgetProductInfo(e);
                }
            }

            public void onError(java.lang.Exception error) {
                if (error instanceof org.apache.axis2.AxisFault) {
                    org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
                    org.apache.axiom.om.OMElement faultElt = f.getDetail();
                    if (faultElt!=null){
                        if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"))){
                            //make the fault by reflection
                            try{
                                java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"));
                                java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                                java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
                                //message class
                                java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getProductInfo"));
                                java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                                java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                                java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                        new java.lang.Class[]{messageClass});
                                m.invoke(ex,new java.lang.Object[]{messageObject});


                                callback.receiveErrorgetProductInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                            } catch(java.lang.ClassCastException e){
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (java.lang.ClassNotFoundException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (java.lang.NoSuchMethodException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (java.lang.reflect.InvocationTargetException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (java.lang.IllegalAccessException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (java.lang.InstantiationException e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            } catch (org.apache.axis2.AxisFault e) {
                                // we cannot intantiate the class - throw the original Axis fault
                                callback.receiveErrorgetProductInfo(f);
                            }
                        } else {
                            callback.receiveErrorgetProductInfo(f);
                        }
                    } else {
                        callback.receiveErrorgetProductInfo(f);
                    }
                } else {
                    callback.receiveErrorgetProductInfo(error);
                }
            }

            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                onError(fault);
            }

            public void onComplete() {
                try {
                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                } catch (org.apache.axis2.AxisFault axisFault) {
                    callback.receiveErrorgetProductInfo(axisFault);
                }
            }
        });


        org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
            _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
            _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

        //execute the operation client
        _operationClient.execute(false);

    }



    /**
     *  A utility method that copies the namepaces from the SOAPEnvelope
     */
    private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
        return returnMap;
    }



    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {


        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;
            }
        }
        return false;
    }
    //http://localhost:8081/product/services/ProductInfoWebService.ProductInfoWebServiceHttpSoap12Endpoint/
    public static class GetProductInfo
            implements org.apache.axis2.databinding.ADBBean{

        public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://service.webService.ebusiness.sinosoft.com",
                "getProductInfo",
                "ns3");



        /**
         * field for ProductInfoRequest
         */


        protected ProductInfoRequest localProductInfoRequest ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localProductInfoRequestTracker = false ;

        public boolean isProductInfoRequestSpecified(){
            return localProductInfoRequestTracker;
        }



        /**
         * Auto generated getter method
         * @return ProductInfoRequest
         */
        public  ProductInfoRequest getProductInfoRequest(){
            return localProductInfoRequest;
        }



        /**
         * Auto generated setter method
         * @param param ProductInfoRequest
         */
        public void setProductInfoRequest(ProductInfoRequest param){
            localProductInfoRequestTracker = true;

            this.localProductInfoRequest=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
            return factory.createOMElement(dataSource,MY_QNAME);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://service.webService.ebusiness.sinosoft.com");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":getProductInfo",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "getProductInfo",
                            xmlWriter);
                }


            }
            if (localProductInfoRequestTracker){
                if (localProductInfoRequest==null){

                    writeStartElement(null, "http://service.webService.ebusiness.sinosoft.com", "productInfoRequest", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localProductInfoRequest.serialize(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com","productInfoRequest"),
                            xmlWriter);
                }
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://service.webService.ebusiness.sinosoft.com")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localProductInfoRequestTracker){
                elementList.add(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                        "productInfoRequest"));


                elementList.add(localProductInfoRequest==null?null:
                        localProductInfoRequest);
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static GetProductInfo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                GetProductInfo object =
                        new GetProductInfo();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"getProductInfo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetProductInfo)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com","productInfoRequest").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setProductInfoRequest(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setProductInfoRequest(ProductInfoRequest.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMSupportKindsPeopleList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMSupportKindsPeopleList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for DutyFactorID
         */


        protected java.lang.String localDutyFactorID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorIDTracker = false ;

        public boolean isDutyFactorIDSpecified(){
            return localDutyFactorIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorID(){
            return localDutyFactorID;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorID
         */
        public void setDutyFactorID(java.lang.String param){
            localDutyFactorIDTracker = true;

            this.localDutyFactorID=param;


        }


        /**
         * field for IsDisplay
         */


        protected java.lang.String localIsDisplay ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDisplayTracker = false ;

        public boolean isIsDisplaySpecified(){
            return localIsDisplayTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDisplay(){
            return localIsDisplay;
        }



        /**
         * Auto generated setter method
         * @param param IsDisplay
         */
        public void setIsDisplay(java.lang.String param){
            localIsDisplayTracker = true;

            this.localIsDisplay=param;


        }


        /**
         * field for PeopleTypeName
         */


        protected java.lang.String localPeopleTypeName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPeopleTypeNameTracker = false ;

        public boolean isPeopleTypeNameSpecified(){
            return localPeopleTypeNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPeopleTypeName(){
            return localPeopleTypeName;
        }



        /**
         * Auto generated setter method
         * @param param PeopleTypeName
         */
        public void setPeopleTypeName(java.lang.String param){
            localPeopleTypeNameTracker = true;

            this.localPeopleTypeName=param;


        }


        /**
         * field for PeopleTypeOrder
         */


        protected int localPeopleTypeOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPeopleTypeOrderTracker = false ;

        public boolean isPeopleTypeOrderSpecified(){
            return localPeopleTypeOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getPeopleTypeOrder(){
            return localPeopleTypeOrder;
        }



        /**
         * Auto generated setter method
         * @param param PeopleTypeOrder
         */
        public void setPeopleTypeOrder(int param){

            // setting primitive attribute tracker to true
            localPeopleTypeOrderTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localPeopleTypeOrder=param;


        }


        /**
         * field for SupportKindsPeopleListID
         */


        protected java.lang.String localSupportKindsPeopleListID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupportKindsPeopleListIDTracker = false ;

        public boolean isSupportKindsPeopleListIDSpecified(){
            return localSupportKindsPeopleListIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupportKindsPeopleListID(){
            return localSupportKindsPeopleListID;
        }



        /**
         * Auto generated setter method
         * @param param SupportKindsPeopleListID
         */
        public void setSupportKindsPeopleListID(java.lang.String param){
            localSupportKindsPeopleListIDTracker = true;

            this.localSupportKindsPeopleListID=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMSupportKindsPeopleList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMSupportKindsPeopleList",
                            xmlWriter);
                }


            }
            if (localDutyFactorIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorID", xmlWriter);


                if (localDutyFactorID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorID);

                }

                xmlWriter.writeEndElement();
            } if (localIsDisplayTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDisplay", xmlWriter);


                if (localIsDisplay==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDisplay);

                }

                xmlWriter.writeEndElement();
            } if (localPeopleTypeNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "peopleTypeName", xmlWriter);


                if (localPeopleTypeName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPeopleTypeName);

                }

                xmlWriter.writeEndElement();
            } if (localPeopleTypeOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "peopleTypeOrder", xmlWriter);

                if (localPeopleTypeOrder==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("peopleTypeOrder cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeopleTypeOrder));
                }

                xmlWriter.writeEndElement();
            } if (localSupportKindsPeopleListIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supportKindsPeopleListID", xmlWriter);


                if (localSupportKindsPeopleListID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupportKindsPeopleListID);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localDutyFactorIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorID"));

                elementList.add(localDutyFactorID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorID));
            } if (localIsDisplayTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDisplay"));

                elementList.add(localIsDisplay==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDisplay));
            } if (localPeopleTypeNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "peopleTypeName"));

                elementList.add(localPeopleTypeName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeopleTypeName));
            } if (localPeopleTypeOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "peopleTypeOrder"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeopleTypeOrder));
            } if (localSupportKindsPeopleListIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "supportKindsPeopleListID"));

                elementList.add(localSupportKindsPeopleListID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupportKindsPeopleListID));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMSupportKindsPeopleList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMSupportKindsPeopleList object =
                        new FEMSupportKindsPeopleList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMSupportKindsPeopleList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMSupportKindsPeopleList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDisplay").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDisplay(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","peopleTypeName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPeopleTypeName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","peopleTypeOrder").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setPeopleTypeOrder(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setPeopleTypeOrder(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","supportKindsPeopleListID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupportKindsPeopleListID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FCDoc
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FCDoc
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for AddType
         */


        protected java.lang.String localAddType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAddTypeTracker = false ;

        public boolean isAddTypeSpecified(){
            return localAddTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAddType(){
            return localAddType;
        }



        /**
         * Auto generated setter method
         * @param param AddType
         */
        public void setAddType(java.lang.String param){
            localAddTypeTracker = true;

            this.localAddType=param;


        }


        /**
         * field for AssiNo
         */


        protected java.lang.String localAssiNo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAssiNoTracker = false ;

        public boolean isAssiNoSpecified(){
            return localAssiNoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAssiNo(){
            return localAssiNo;
        }



        /**
         * Auto generated setter method
         * @param param AssiNo
         */
        public void setAssiNo(java.lang.String param){
            localAssiNoTracker = true;

            this.localAssiNo=param;


        }


        /**
         * field for CurrNode
         */


        protected java.lang.String localCurrNode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCurrNodeTracker = false ;

        public boolean isCurrNodeSpecified(){
            return localCurrNodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCurrNode(){
            return localCurrNode;
        }



        /**
         * Auto generated setter method
         * @param param CurrNode
         */
        public void setCurrNode(java.lang.String param){
            localCurrNodeTracker = true;

            this.localCurrNode=param;


        }


        /**
         * field for DocCode
         */


        protected java.lang.String localDocCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDocCodeTracker = false ;

        public boolean isDocCodeSpecified(){
            return localDocCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDocCode(){
            return localDocCode;
        }



        /**
         * Auto generated setter method
         * @param param DocCode
         */
        public void setDocCode(java.lang.String param){
            localDocCodeTracker = true;

            this.localDocCode=param;


        }


        /**
         * field for DocName
         */


        protected java.lang.String localDocName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDocNameTracker = false ;

        public boolean isDocNameSpecified(){
            return localDocNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDocName(){
            return localDocName;
        }



        /**
         * Auto generated setter method
         * @param param DocName
         */
        public void setDocName(java.lang.String param){
            localDocNameTracker = true;

            this.localDocName=param;


        }


        /**
         * field for DocPath
         */


        protected java.lang.String localDocPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDocPathTracker = false ;

        public boolean isDocPathSpecified(){
            return localDocPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDocPath(){
            return localDocPath;
        }



        /**
         * Auto generated setter method
         * @param param DocPath
         */
        public void setDocPath(java.lang.String param){
            localDocPathTracker = true;

            this.localDocPath=param;


        }


        /**
         * field for DocTypeCode
         */


        protected java.lang.String localDocTypeCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDocTypeCodeTracker = false ;

        public boolean isDocTypeCodeSpecified(){
            return localDocTypeCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDocTypeCode(){
            return localDocTypeCode;
        }



        /**
         * Auto generated setter method
         * @param param DocTypeCode
         */
        public void setDocTypeCode(java.lang.String param){
            localDocTypeCodeTracker = true;

            this.localDocTypeCode=param;


        }


        /**
         * field for DocVer
         */


        protected int localDocVer ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDocVerTracker = false ;

        public boolean isDocVerSpecified(){
            return localDocVerTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getDocVer(){
            return localDocVer;
        }



        /**
         * Auto generated setter method
         * @param param DocVer
         */
        public void setDocVer(int param){

            // setting primitive attribute tracker to true
            localDocVerTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localDocVer=param;


        }


        /**
         * field for ExamDesc
         */


        protected java.lang.String localExamDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamDescTracker = false ;

        public boolean isExamDescSpecified(){
            return localExamDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamDesc(){
            return localExamDesc;
        }



        /**
         * Auto generated setter method
         * @param param ExamDesc
         */
        public void setExamDesc(java.lang.String param){
            localExamDescTracker = true;

            this.localExamDesc=param;


        }


        /**
         * field for ExamFlag
         */


        protected java.lang.String localExamFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamFlagTracker = false ;

        public boolean isExamFlagSpecified(){
            return localExamFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamFlag(){
            return localExamFlag;
        }



        /**
         * Auto generated setter method
         * @param param ExamFlag
         */
        public void setExamFlag(java.lang.String param){
            localExamFlagTracker = true;

            this.localExamFlag=param;


        }


        /**
         * field for ExamMan
         */


        protected java.lang.String localExamMan ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamManTracker = false ;

        public boolean isExamManSpecified(){
            return localExamManTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamMan(){
            return localExamMan;
        }



        /**
         * Auto generated setter method
         * @param param ExamMan
         */
        public void setExamMan(java.lang.String param){
            localExamManTracker = true;

            this.localExamMan=param;


        }


        /**
         * field for ExamOrgan
         */


        protected java.lang.String localExamOrgan ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamOrganTracker = false ;

        public boolean isExamOrganSpecified(){
            return localExamOrganTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamOrgan(){
            return localExamOrgan;
        }



        /**
         * Auto generated setter method
         * @param param ExamOrgan
         */
        public void setExamOrgan(java.lang.String param){
            localExamOrganTracker = true;

            this.localExamOrgan=param;


        }


        /**
         * field for ExamStat
         */


        protected java.lang.String localExamStat ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamStatTracker = false ;

        public boolean isExamStatSpecified(){
            return localExamStatTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamStat(){
            return localExamStat;
        }



        /**
         * Auto generated setter method
         * @param param ExamStat
         */
        public void setExamStat(java.lang.String param){
            localExamStatTracker = true;

            this.localExamStat=param;


        }


        /**
         * field for ExamString
         */


        protected java.lang.String localExamString ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localExamStringTracker = false ;

        public boolean isExamStringSpecified(){
            return localExamStringTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getExamString(){
            return localExamString;
        }



        /**
         * Auto generated setter method
         * @param param ExamString
         */
        public void setExamString(java.lang.String param){
            localExamStringTracker = true;

            this.localExamString=param;


        }


        /**
         * field for FileNo
         */


        protected java.lang.String localFileNo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFileNoTracker = false ;

        public boolean isFileNoSpecified(){
            return localFileNoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFileNo(){
            return localFileNo;
        }



        /**
         * Auto generated setter method
         * @param param FileNo
         */
        public void setFileNo(java.lang.String param){
            localFileNoTracker = true;

            this.localFileNo=param;


        }


        /**
         * field for FileType
         */


        protected java.lang.String localFileType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFileTypeTracker = false ;

        public boolean isFileTypeSpecified(){
            return localFileTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFileType(){
            return localFileType;
        }



        /**
         * Auto generated setter method
         * @param param FileType
         */
        public void setFileType(java.lang.String param){
            localFileTypeTracker = true;

            this.localFileType=param;


        }


        /**
         * field for HisEaxmDesc
         */


        protected java.lang.String localHisEaxmDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localHisEaxmDescTracker = false ;

        public boolean isHisEaxmDescSpecified(){
            return localHisEaxmDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getHisEaxmDesc(){
            return localHisEaxmDesc;
        }



        /**
         * Auto generated setter method
         * @param param HisEaxmDesc
         */
        public void setHisEaxmDesc(java.lang.String param){
            localHisEaxmDescTracker = true;

            this.localHisEaxmDesc=param;


        }


        /**
         * field for MakeString
         */


        protected java.lang.String localMakeString ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeStringTracker = false ;

        public boolean isMakeStringSpecified(){
            return localMakeStringTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeString(){
            return localMakeString;
        }



        /**
         * Auto generated setter method
         * @param param MakeString
         */
        public void setMakeString(java.lang.String param){
            localMakeStringTracker = true;

            this.localMakeString=param;


        }


        /**
         * field for MakeTime
         */


        protected java.lang.String localMakeTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeTimeTracker = false ;

        public boolean isMakeTimeSpecified(){
            return localMakeTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeTime(){
            return localMakeTime;
        }



        /**
         * Auto generated setter method
         * @param param MakeTime
         */
        public void setMakeTime(java.lang.String param){
            localMakeTimeTracker = true;

            this.localMakeTime=param;


        }


        /**
         * field for ModifyString
         */


        protected java.lang.String localModifyString ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyStringTracker = false ;

        public boolean isModifyStringSpecified(){
            return localModifyStringTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyString(){
            return localModifyString;
        }



        /**
         * Auto generated setter method
         * @param param ModifyString
         */
        public void setModifyString(java.lang.String param){
            localModifyStringTracker = true;

            this.localModifyString=param;


        }


        /**
         * field for ModifyTime
         */


        protected java.lang.String localModifyTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyTimeTracker = false ;

        public boolean isModifyTimeSpecified(){
            return localModifyTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyTime(){
            return localModifyTime;
        }



        /**
         * Auto generated setter method
         * @param param ModifyTime
         */
        public void setModifyTime(java.lang.String param){
            localModifyTimeTracker = true;

            this.localModifyTime=param;


        }


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for ParentNode
         */


        protected java.lang.String localParentNode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localParentNodeTracker = false ;

        public boolean isParentNodeSpecified(){
            return localParentNodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getParentNode(){
            return localParentNode;
        }



        /**
         * Auto generated setter method
         * @param param ParentNode
         */
        public void setParentNode(java.lang.String param){
            localParentNodeTracker = true;

            this.localParentNode=param;


        }


        /**
         * field for ProjCode
         */


        protected java.lang.String localProjCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localProjCodeTracker = false ;

        public boolean isProjCodeSpecified(){
            return localProjCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getProjCode(){
            return localProjCode;
        }



        /**
         * Auto generated setter method
         * @param param ProjCode
         */
        public void setProjCode(java.lang.String param){
            localProjCodeTracker = true;

            this.localProjCode=param;


        }


        /**
         * field for ShortRemark
         */


        protected java.lang.String localShortRemark ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShortRemarkTracker = false ;

        public boolean isShortRemarkSpecified(){
            return localShortRemarkTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShortRemark(){
            return localShortRemark;
        }



        /**
         * Auto generated setter method
         * @param param ShortRemark
         */
        public void setShortRemark(java.lang.String param){
            localShortRemarkTracker = true;

            this.localShortRemark=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FCDoc",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FCDoc",
                            xmlWriter);
                }


            }
            if (localAddTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "addType", xmlWriter);


                if (localAddType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAddType);

                }

                xmlWriter.writeEndElement();
            } if (localAssiNoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "assiNo", xmlWriter);


                if (localAssiNo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAssiNo);

                }

                xmlWriter.writeEndElement();
            } if (localCurrNodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "currNode", xmlWriter);


                if (localCurrNode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCurrNode);

                }

                xmlWriter.writeEndElement();
            } if (localDocCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "docCode", xmlWriter);


                if (localDocCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDocCode);

                }

                xmlWriter.writeEndElement();
            } if (localDocNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "docName", xmlWriter);


                if (localDocName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDocName);

                }

                xmlWriter.writeEndElement();
            } if (localDocPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "docPath", xmlWriter);


                if (localDocPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDocPath);

                }

                xmlWriter.writeEndElement();
            } if (localDocTypeCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "docTypeCode", xmlWriter);


                if (localDocTypeCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDocTypeCode);

                }

                xmlWriter.writeEndElement();
            } if (localDocVerTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "docVer", xmlWriter);

                if (localDocVer==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("docVer cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocVer));
                }

                xmlWriter.writeEndElement();
            } if (localExamDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examDesc", xmlWriter);


                if (localExamDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamDesc);

                }

                xmlWriter.writeEndElement();
            } if (localExamFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examFlag", xmlWriter);


                if (localExamFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamFlag);

                }

                xmlWriter.writeEndElement();
            } if (localExamManTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examMan", xmlWriter);


                if (localExamMan==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamMan);

                }

                xmlWriter.writeEndElement();
            } if (localExamOrganTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examOrgan", xmlWriter);


                if (localExamOrgan==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamOrgan);

                }

                xmlWriter.writeEndElement();
            } if (localExamStatTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examStat", xmlWriter);


                if (localExamStat==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamStat);

                }

                xmlWriter.writeEndElement();
            } if (localExamStringTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "examString", xmlWriter);


                if (localExamString==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localExamString);

                }

                xmlWriter.writeEndElement();
            } if (localFileNoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "fileNo", xmlWriter);


                if (localFileNo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFileNo);

                }

                xmlWriter.writeEndElement();
            } if (localFileTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "fileType", xmlWriter);


                if (localFileType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFileType);

                }

                xmlWriter.writeEndElement();
            } if (localHisEaxmDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "hisEaxmDesc", xmlWriter);


                if (localHisEaxmDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localHisEaxmDesc);

                }

                xmlWriter.writeEndElement();
            } if (localMakeStringTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeString", xmlWriter);


                if (localMakeString==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeString);

                }

                xmlWriter.writeEndElement();
            } if (localMakeTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeTime", xmlWriter);


                if (localMakeTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeTime);

                }

                xmlWriter.writeEndElement();
            } if (localModifyStringTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyString", xmlWriter);


                if (localModifyString==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyString);

                }

                xmlWriter.writeEndElement();
            } if (localModifyTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyTime", xmlWriter);


                if (localModifyTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyTime);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localParentNodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "parentNode", xmlWriter);


                if (localParentNode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localParentNode);

                }

                xmlWriter.writeEndElement();
            } if (localProjCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "projCode", xmlWriter);


                if (localProjCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localProjCode);

                }

                xmlWriter.writeEndElement();
            } if (localShortRemarkTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "shortRemark", xmlWriter);


                if (localShortRemark==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShortRemark);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localAddTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "addType"));

                elementList.add(localAddType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddType));
            } if (localAssiNoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "assiNo"));

                elementList.add(localAssiNo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssiNo));
            } if (localCurrNodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "currNode"));

                elementList.add(localCurrNode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrNode));
            } if (localDocCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "docCode"));

                elementList.add(localDocCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocCode));
            } if (localDocNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "docName"));

                elementList.add(localDocName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocName));
            } if (localDocPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "docPath"));

                elementList.add(localDocPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocPath));
            } if (localDocTypeCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "docTypeCode"));

                elementList.add(localDocTypeCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocTypeCode));
            } if (localDocVerTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "docVer"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocVer));
            } if (localExamDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examDesc"));

                elementList.add(localExamDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamDesc));
            } if (localExamFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examFlag"));

                elementList.add(localExamFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamFlag));
            } if (localExamManTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examMan"));

                elementList.add(localExamMan==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamMan));
            } if (localExamOrganTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examOrgan"));

                elementList.add(localExamOrgan==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamOrgan));
            } if (localExamStatTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examStat"));

                elementList.add(localExamStat==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamStat));
            } if (localExamStringTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "examString"));

                elementList.add(localExamString==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExamString));
            } if (localFileNoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "fileNo"));

                elementList.add(localFileNo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFileNo));
            } if (localFileTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "fileType"));

                elementList.add(localFileType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFileType));
            } if (localHisEaxmDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "hisEaxmDesc"));

                elementList.add(localHisEaxmDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHisEaxmDesc));
            } if (localMakeStringTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeString"));

                elementList.add(localMakeString==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeString));
            } if (localMakeTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeTime"));

                elementList.add(localMakeTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeTime));
            } if (localModifyStringTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyString"));

                elementList.add(localModifyString==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyString));
            } if (localModifyTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyTime"));

                elementList.add(localModifyTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyTime));
            } if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localParentNodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "parentNode"));

                elementList.add(localParentNode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParentNode));
            } if (localProjCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "projCode"));

                elementList.add(localProjCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProjCode));
            } if (localShortRemarkTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "shortRemark"));

                elementList.add(localShortRemark==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShortRemark));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FCDoc parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FCDoc object =
                        new FCDoc();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FCDoc".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FCDoc)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","addType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAddType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","assiNo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAssiNo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","currNode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCurrNode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","docCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDocCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","docName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDocName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","docPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDocPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","docTypeCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDocTypeCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","docVer").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setDocVer(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setDocVer(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examMan").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamMan(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examOrgan").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamOrgan(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examStat").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamStat(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","examString").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setExamString(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","fileNo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFileNo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","fileType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFileType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","hisEaxmDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setHisEaxmDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeString").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeString(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyString").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyString(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","parentNode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setParentNode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","projCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setProjCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","shortRemark").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShortRemark(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FMDutyRelation
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMDutyRelation
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for DutyCode
         */


        protected java.lang.String localDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyCodeTracker = false ;

        public boolean isDutyCodeSpecified(){
            return localDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyCode(){
            return localDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param DutyCode
         */
        public void setDutyCode(java.lang.String param){
            localDutyCodeTracker = true;

            this.localDutyCode=param;


        }


        /**
         * field for DutyRelationID
         */


        protected java.lang.String localDutyRelationID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyRelationIDTracker = false ;

        public boolean isDutyRelationIDSpecified(){
            return localDutyRelationIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyRelationID(){
            return localDutyRelationID;
        }



        /**
         * Auto generated setter method
         * @param param DutyRelationID
         */
        public void setDutyRelationID(java.lang.String param){
            localDutyRelationIDTracker = true;

            this.localDutyRelationID=param;


        }


        /**
         * field for RelaDutyCode
         */


        protected java.lang.String localRelaDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelaDutyCodeTracker = false ;

        public boolean isRelaDutyCodeSpecified(){
            return localRelaDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelaDutyCode(){
            return localRelaDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param RelaDutyCode
         */
        public void setRelaDutyCode(java.lang.String param){
            localRelaDutyCodeTracker = true;

            this.localRelaDutyCode=param;


        }


        /**
         * field for Relationship
         */


        protected java.lang.String localRelationship ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelationshipTracker = false ;

        public boolean isRelationshipSpecified(){
            return localRelationshipTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelationship(){
            return localRelationship;
        }



        /**
         * Auto generated setter method
         * @param param Relationship
         */
        public void setRelationship(java.lang.String param){
            localRelationshipTracker = true;

            this.localRelationship=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for SupplierCode
         */


        protected java.lang.String localSupplierCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupplierCodeTracker = false ;

        public boolean isSupplierCodeSpecified(){
            return localSupplierCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupplierCode(){
            return localSupplierCode;
        }



        /**
         * Auto generated setter method
         * @param param SupplierCode
         */
        public void setSupplierCode(java.lang.String param){
            localSupplierCodeTracker = true;

            this.localSupplierCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FMDutyRelation",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FMDutyRelation",
                            xmlWriter);
                }


            }
            if (localDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyCode", xmlWriter);


                if (localDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyCode);

                }

                xmlWriter.writeEndElement();
            } if (localDutyRelationIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyRelationID", xmlWriter);


                if (localDutyRelationID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyRelationID);

                }

                xmlWriter.writeEndElement();
            } if (localRelaDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relaDutyCode", xmlWriter);


                if (localRelaDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelaDutyCode);

                }

                xmlWriter.writeEndElement();
            } if (localRelationshipTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relationship", xmlWriter);


                if (localRelationship==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelationship);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localSupplierCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supplierCode", xmlWriter);


                if (localSupplierCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupplierCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyCode"));

                elementList.add(localDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyCode));
            } if (localDutyRelationIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyRelationID"));

                elementList.add(localDutyRelationID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyRelationID));
            } if (localRelaDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relaDutyCode"));

                elementList.add(localRelaDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelaDutyCode));
            } if (localRelationshipTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relationship"));

                elementList.add(localRelationship==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationship));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localSupplierCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "supplierCode"));

                elementList.add(localSupplierCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FMDutyRelation parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FMDutyRelation object =
                        new FMDutyRelation();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FMDutyRelation".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMDutyRelation)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyRelationID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyRelationID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relaDutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelaDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relationship").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelationship(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","supplierCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupplierCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class TransCheckInfo
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = TransCheckInfo
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for OperatorKey
         */


        protected java.lang.String localOperatorKey ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorKeyTracker = false ;

        public boolean isOperatorKeySpecified(){
            return localOperatorKeyTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperatorKey(){
            return localOperatorKey;
        }



        /**
         * Auto generated setter method
         * @param param OperatorKey
         */
        public void setOperatorKey(java.lang.String param){
            localOperatorKeyTracker = true;

            this.localOperatorKey=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":TransCheckInfo",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "TransCheckInfo",
                            xmlWriter);
                }


            }
            if (localOperatorTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorKeyTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operatorKey", xmlWriter);


                if (localOperatorKey==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperatorKey);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localOperatorKeyTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "operatorKey"));

                elementList.add(localOperatorKey==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorKey));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static TransCheckInfo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                TransCheckInfo object =
                        new TransCheckInfo();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"TransCheckInfo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (TransCheckInfo)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","operatorKey").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperatorKey(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FMRisk
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMRisk
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for CPayFlag
         */


        protected java.lang.String localCPayFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCPayFlagTracker = false ;

        public boolean isCPayFlagSpecified(){
            return localCPayFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCPayFlag(){
            return localCPayFlag;
        }



        /**
         * Auto generated setter method
         * @param param CPayFlag
         */
        public void setCPayFlag(java.lang.String param){
            localCPayFlagTracker = true;

            this.localCPayFlag=param;


        }


        /**
         * field for ERiskDesc
         */


        protected java.lang.String localERiskDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskDescTracker = false ;

        public boolean isERiskDescSpecified(){
            return localERiskDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskDesc(){
            return localERiskDesc;
        }



        /**
         * Auto generated setter method
         * @param param ERiskDesc
         */
        public void setERiskDesc(java.lang.String param){
            localERiskDescTracker = true;

            this.localERiskDesc=param;


        }


        /**
         * field for ERiskFeatures
         */


        protected java.lang.String localERiskFeatures ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskFeaturesTracker = false ;

        public boolean isERiskFeaturesSpecified(){
            return localERiskFeaturesTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskFeatures(){
            return localERiskFeatures;
        }



        /**
         * Auto generated setter method
         * @param param ERiskFeatures
         */
        public void setERiskFeatures(java.lang.String param){
            localERiskFeaturesTracker = true;

            this.localERiskFeatures=param;


        }


        /**
         * field for ERiskID
         */


        protected java.lang.String localERiskID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskIDTracker = false ;

        public boolean isERiskIDSpecified(){
            return localERiskIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskID(){
            return localERiskID;
        }



        /**
         * Auto generated setter method
         * @param param ERiskID
         */
        public void setERiskID(java.lang.String param){
            localERiskIDTracker = true;

            this.localERiskID=param;


        }


        /**
         * field for ERiskPicRealPath
         */


        protected java.lang.String localERiskPicRealPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskPicRealPathTracker = false ;

        public boolean isERiskPicRealPathSpecified(){
            return localERiskPicRealPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskPicRealPath(){
            return localERiskPicRealPath;
        }



        /**
         * Auto generated setter method
         * @param param ERiskPicRealPath
         */
        public void setERiskPicRealPath(java.lang.String param){
            localERiskPicRealPathTracker = true;

            this.localERiskPicRealPath=param;


        }


        /**
         * field for ERiskPicRelaPath
         */


        protected java.lang.String localERiskPicRelaPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskPicRelaPathTracker = false ;

        public boolean isERiskPicRelaPathSpecified(){
            return localERiskPicRelaPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskPicRelaPath(){
            return localERiskPicRelaPath;
        }



        /**
         * Auto generated setter method
         * @param param ERiskPicRelaPath
         */
        public void setERiskPicRelaPath(java.lang.String param){
            localERiskPicRelaPathTracker = true;

            this.localERiskPicRelaPath=param;


        }


        /**
         * field for ERiskType
         */


        protected java.lang.String localERiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskTypeTracker = false ;

        public boolean isERiskTypeSpecified(){
            return localERiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskType(){
            return localERiskType;
        }



        /**
         * Auto generated setter method
         * @param param ERiskType
         */
        public void setERiskType(java.lang.String param){
            localERiskTypeTracker = true;

            this.localERiskType=param;


        }


        /**
         * field for FCDoc
         * This was an Array!
         */


        protected FCDoc[] localFCDoc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFCDocTracker = false ;

        public boolean isFCDocSpecified(){
            return localFCDocTracker;
        }



        /**
         * Auto generated getter method
         * @return FCDoc[]
         */
        public  FCDoc[] getFCDoc(){
            return localFCDoc;
        }






        /**
         * validate the array for FCDoc
         */
        protected void validateFCDoc(FCDoc[] param){

        }


        /**
         * Auto generated setter method
         * @param param FCDoc
         */
        public void setFCDoc(FCDoc[] param){

            validateFCDoc(param);

            localFCDocTracker = true;

            this.localFCDoc=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FCDoc
         */
        public void addFCDoc(FCDoc param){
            if (localFCDoc == null){
                localFCDoc = new FCDoc[]{};
            }


            //update the setting tracker
            localFCDocTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFCDoc);
            list.add(param);
            this.localFCDoc =
                    (FCDoc[])list.toArray(
                            new FCDoc[list.size()]);

        }


        /**
         * field for FEMRiskBrightSpotList
         * This was an Array!
         */


        protected FEMRiskBrightSpotList[] localFEMRiskBrightSpotList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskBrightSpotListTracker = false ;

        public boolean isFEMRiskBrightSpotListSpecified(){
            return localFEMRiskBrightSpotListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskBrightSpotList[]
         */
        public  FEMRiskBrightSpotList[] getFEMRiskBrightSpotList(){
            return localFEMRiskBrightSpotList;
        }






        /**
         * validate the array for FEMRiskBrightSpotList
         */
        protected void validateFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskBrightSpotList
         */
        public void setFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

            validateFEMRiskBrightSpotList(param);

            localFEMRiskBrightSpotListTracker = true;

            this.localFEMRiskBrightSpotList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskBrightSpotList
         */
        public void addFEMRiskBrightSpotList(FEMRiskBrightSpotList param){
            if (localFEMRiskBrightSpotList == null){
                localFEMRiskBrightSpotList = new FEMRiskBrightSpotList[]{};
            }


            //update the setting tracker
            localFEMRiskBrightSpotListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskBrightSpotList);
            list.add(param);
            this.localFEMRiskBrightSpotList =
                    (FEMRiskBrightSpotList[])list.toArray(
                            new FEMRiskBrightSpotList[list.size()]);

        }


        /**
         * field for FEMRiskFactorRela
         * This was an Array!
         */


        protected FEMRiskFactorRela[] localFEMRiskFactorRela ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskFactorRelaTracker = false ;

        public boolean isFEMRiskFactorRelaSpecified(){
            return localFEMRiskFactorRelaTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskFactorRela[]
         */
        public  FEMRiskFactorRela[] getFEMRiskFactorRela(){
            return localFEMRiskFactorRela;
        }






        /**
         * validate the array for FEMRiskFactorRela
         */
        protected void validateFEMRiskFactorRela(FEMRiskFactorRela[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskFactorRela
         */
        public void setFEMRiskFactorRela(FEMRiskFactorRela[] param){

            validateFEMRiskFactorRela(param);

            localFEMRiskFactorRelaTracker = true;

            this.localFEMRiskFactorRela=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskFactorRela
         */
        public void addFEMRiskFactorRela(FEMRiskFactorRela param){
            if (localFEMRiskFactorRela == null){
                localFEMRiskFactorRela = new FEMRiskFactorRela[]{};
            }


            //update the setting tracker
            localFEMRiskFactorRelaTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskFactorRela);
            list.add(param);
            this.localFEMRiskFactorRela =
                    (FEMRiskFactorRela[])list.toArray(
                            new FEMRiskFactorRela[list.size()]);

        }


        /**
         * field for FEMRiskSaleArea
         * This was an Array!
         */


        protected FEMRiskSaleArea[] localFEMRiskSaleArea ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskSaleAreaTracker = false ;

        public boolean isFEMRiskSaleAreaSpecified(){
            return localFEMRiskSaleAreaTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskSaleArea[]
         */
        public  FEMRiskSaleArea[] getFEMRiskSaleArea(){
            return localFEMRiskSaleArea;
        }






        /**
         * validate the array for FEMRiskSaleArea
         */
        protected void validateFEMRiskSaleArea(FEMRiskSaleArea[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskSaleArea
         */
        public void setFEMRiskSaleArea(FEMRiskSaleArea[] param){

            validateFEMRiskSaleArea(param);

            localFEMRiskSaleAreaTracker = true;

            this.localFEMRiskSaleArea=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskSaleArea
         */
        public void addFEMRiskSaleArea(FEMRiskSaleArea param){
            if (localFEMRiskSaleArea == null){
                localFEMRiskSaleArea = new FEMRiskSaleArea[]{};
            }


            //update the setting tracker
            localFEMRiskSaleAreaTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskSaleArea);
            list.add(param);
            this.localFEMRiskSaleArea =
                    (FEMRiskSaleArea[])list.toArray(
                            new FEMRiskSaleArea[list.size()]);

        }


        /**
         * field for FEMRiskType
         * This was an Array!
         */


        protected FEMRiskType[] localFEMRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskTypeTracker = false ;

        public boolean isFEMRiskTypeSpecified(){
            return localFEMRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskType[]
         */
        public  FEMRiskType[] getFEMRiskType(){
            return localFEMRiskType;
        }






        /**
         * validate the array for FEMRiskType
         */
        protected void validateFEMRiskType(FEMRiskType[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskType
         */
        public void setFEMRiskType(FEMRiskType[] param){

            validateFEMRiskType(param);

            localFEMRiskTypeTracker = true;

            this.localFEMRiskType=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskType
         */
        public void addFEMRiskType(FEMRiskType param){
            if (localFEMRiskType == null){
                localFEMRiskType = new FEMRiskType[]{};
            }


            //update the setting tracker
            localFEMRiskTypeTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskType);
            list.add(param);
            this.localFEMRiskType =
                    (FEMRiskType[])list.toArray(
                            new FEMRiskType[list.size()]);

        }


        /**
         * field for FERiskAppFactor
         * This was an Array!
         */


        protected FERiskAppFactor[] localFERiskAppFactor ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFERiskAppFactorTracker = false ;

        public boolean isFERiskAppFactorSpecified(){
            return localFERiskAppFactorTracker;
        }



        /**
         * Auto generated getter method
         * @return FERiskAppFactor[]
         */
        public  FERiskAppFactor[] getFERiskAppFactor(){
            return localFERiskAppFactor;
        }






        /**
         * validate the array for FERiskAppFactor
         */
        protected void validateFERiskAppFactor(FERiskAppFactor[] param){

        }


        /**
         * Auto generated setter method
         * @param param FERiskAppFactor
         */
        public void setFERiskAppFactor(FERiskAppFactor[] param){

            validateFERiskAppFactor(param);

            localFERiskAppFactorTracker = true;

            this.localFERiskAppFactor=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FERiskAppFactor
         */
        public void addFERiskAppFactor(FERiskAppFactor param){
            if (localFERiskAppFactor == null){
                localFERiskAppFactor = new FERiskAppFactor[]{};
            }


            //update the setting tracker
            localFERiskAppFactorTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFERiskAppFactor);
            list.add(param);
            this.localFERiskAppFactor =
                    (FERiskAppFactor[])list.toArray(
                            new FERiskAppFactor[list.size()]);

        }


        /**
         * field for FEUIInfo
         * This was an Array!
         */


        protected FEUIInfo[] localFEUIInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEUIInfoTracker = false ;

        public boolean isFEUIInfoSpecified(){
            return localFEUIInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return FEUIInfo[]
         */
        public  FEUIInfo[] getFEUIInfo(){
            return localFEUIInfo;
        }






        /**
         * validate the array for FEUIInfo
         */
        protected void validateFEUIInfo(FEUIInfo[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEUIInfo
         */
        public void setFEUIInfo(FEUIInfo[] param){

            validateFEUIInfo(param);

            localFEUIInfoTracker = true;

            this.localFEUIInfo=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEUIInfo
         */
        public void addFEUIInfo(FEUIInfo param){
            if (localFEUIInfo == null){
                localFEUIInfo = new FEUIInfo[]{};
            }


            //update the setting tracker
            localFEUIInfoTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEUIInfo);
            list.add(param);
            this.localFEUIInfo =
                    (FEUIInfo[])list.toArray(
                            new FEUIInfo[list.size()]);

        }


        /**
         * field for FMDuty
         * This was an Array!
         */


        protected FMDuty[] localFMDuty ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFMDutyTracker = false ;

        public boolean isFMDutySpecified(){
            return localFMDutyTracker;
        }



        /**
         * Auto generated getter method
         * @return FMDuty[]
         */
        public  FMDuty[] getFMDuty(){
            return localFMDuty;
        }






        /**
         * validate the array for FMDuty
         */
        protected void validateFMDuty(FMDuty[] param){

        }


        /**
         * Auto generated setter method
         * @param param FMDuty
         */
        public void setFMDuty(FMDuty[] param){

            validateFMDuty(param);

            localFMDutyTracker = true;

            this.localFMDuty=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FMDuty
         */
        public void addFMDuty(FMDuty param){
            if (localFMDuty == null){
                localFMDuty = new FMDuty[]{};
            }


            //update the setting tracker
            localFMDutyTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFMDuty);
            list.add(param);
            this.localFMDuty =
                    (FMDuty[])list.toArray(
                            new FMDuty[list.size()]);

        }


        /**
         * field for FMDutyRelation
         * This was an Array!
         */


        protected FMDutyRelation[] localFMDutyRelation ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFMDutyRelationTracker = false ;

        public boolean isFMDutyRelationSpecified(){
            return localFMDutyRelationTracker;
        }



        /**
         * Auto generated getter method
         * @return FMDutyRelation[]
         */
        public  FMDutyRelation[] getFMDutyRelation(){
            return localFMDutyRelation;
        }






        /**
         * validate the array for FMDutyRelation
         */
        protected void validateFMDutyRelation(FMDutyRelation[] param){

        }


        /**
         * Auto generated setter method
         * @param param FMDutyRelation
         */
        public void setFMDutyRelation(FMDutyRelation[] param){

            validateFMDutyRelation(param);

            localFMDutyRelationTracker = true;

            this.localFMDutyRelation=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FMDutyRelation
         */
        public void addFMDutyRelation(FMDutyRelation param){
            if (localFMDutyRelation == null){
                localFMDutyRelation = new FMDutyRelation[]{};
            }


            //update the setting tracker
            localFMDutyRelationTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFMDutyRelation);
            list.add(param);
            this.localFMDutyRelation =
                    (FMDutyRelation[])list.toArray(
                            new FMDutyRelation[list.size()]);

        }


        /**
         * field for UWFlag
         */


        protected java.lang.String localUWFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUWFlagTracker = false ;

        public boolean isUWFlagSpecified(){
            return localUWFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUWFlag(){
            return localUWFlag;
        }



        /**
         * Auto generated setter method
         * @param param UWFlag
         */
        public void setUWFlag(java.lang.String param){
            localUWFlagTracker = true;

            this.localUWFlag=param;


        }


        /**
         * field for AccreditFlag
         */


        protected java.lang.String localAccreditFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAccreditFlagTracker = false ;

        public boolean isAccreditFlagSpecified(){
            return localAccreditFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAccreditFlag(){
            return localAccreditFlag;
        }



        /**
         * Auto generated setter method
         * @param param AccreditFlag
         */
        public void setAccreditFlag(java.lang.String param){
            localAccreditFlagTracker = true;

            this.localAccreditFlag=param;


        }


        /**
         * field for AdaptPeopleInfo
         */


        protected java.lang.String localAdaptPeopleInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAdaptPeopleInfoTracker = false ;

        public boolean isAdaptPeopleInfoSpecified(){
            return localAdaptPeopleInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAdaptPeopleInfo(){
            return localAdaptPeopleInfo;
        }



        /**
         * Auto generated setter method
         * @param param AdaptPeopleInfo
         */
        public void setAdaptPeopleInfo(java.lang.String param){
            localAdaptPeopleInfoTracker = true;

            this.localAdaptPeopleInfo=param;


        }


        /**
         * field for AutoRelatedClause
         */


        protected java.lang.String localAutoRelatedClause ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAutoRelatedClauseTracker = false ;

        public boolean isAutoRelatedClauseSpecified(){
            return localAutoRelatedClauseTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAutoRelatedClause(){
            return localAutoRelatedClause;
        }



        /**
         * Auto generated setter method
         * @param param AutoRelatedClause
         */
        public void setAutoRelatedClause(java.lang.String param){
            localAutoRelatedClauseTracker = true;

            this.localAutoRelatedClause=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp10
         */


        protected java.lang.String localBackUp10 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp10Tracker = false ;

        public boolean isBackUp10Specified(){
            return localBackUp10Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp10(){
            return localBackUp10;
        }



        /**
         * Auto generated setter method
         * @param param BackUp10
         */
        public void setBackUp10(java.lang.String param){
            localBackUp10Tracker = true;

            this.localBackUp10=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for BackUp3
         */


        protected java.lang.String localBackUp3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp3Tracker = false ;

        public boolean isBackUp3Specified(){
            return localBackUp3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp3(){
            return localBackUp3;
        }



        /**
         * Auto generated setter method
         * @param param BackUp3
         */
        public void setBackUp3(java.lang.String param){
            localBackUp3Tracker = true;

            this.localBackUp3=param;


        }


        /**
         * field for BackUp4
         */


        protected java.lang.String localBackUp4 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp4Tracker = false ;

        public boolean isBackUp4Specified(){
            return localBackUp4Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp4(){
            return localBackUp4;
        }



        /**
         * Auto generated setter method
         * @param param BackUp4
         */
        public void setBackUp4(java.lang.String param){
            localBackUp4Tracker = true;

            this.localBackUp4=param;


        }


        /**
         * field for BackUp5
         */


        protected java.lang.String localBackUp5 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp5Tracker = false ;

        public boolean isBackUp5Specified(){
            return localBackUp5Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp5(){
            return localBackUp5;
        }



        /**
         * Auto generated setter method
         * @param param BackUp5
         */
        public void setBackUp5(java.lang.String param){
            localBackUp5Tracker = true;

            this.localBackUp5=param;


        }


        /**
         * field for BackUp6
         */


        protected java.lang.String localBackUp6 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp6Tracker = false ;

        public boolean isBackUp6Specified(){
            return localBackUp6Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp6(){
            return localBackUp6;
        }



        /**
         * Auto generated setter method
         * @param param BackUp6
         */
        public void setBackUp6(java.lang.String param){
            localBackUp6Tracker = true;

            this.localBackUp6=param;


        }


        /**
         * field for BackUp7
         */


        protected java.lang.String localBackUp7 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp7Tracker = false ;

        public boolean isBackUp7Specified(){
            return localBackUp7Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp7(){
            return localBackUp7;
        }



        /**
         * Auto generated setter method
         * @param param BackUp7
         */
        public void setBackUp7(java.lang.String param){
            localBackUp7Tracker = true;

            this.localBackUp7=param;


        }


        /**
         * field for BackUp8
         */


        protected java.lang.String localBackUp8 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp8Tracker = false ;

        public boolean isBackUp8Specified(){
            return localBackUp8Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp8(){
            return localBackUp8;
        }



        /**
         * Auto generated setter method
         * @param param BackUp8
         */
        public void setBackUp8(java.lang.String param){
            localBackUp8Tracker = true;

            this.localBackUp8=param;


        }


        /**
         * field for BackUp9
         */


        protected java.lang.String localBackUp9 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp9Tracker = false ;

        public boolean isBackUp9Specified(){
            return localBackUp9Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp9(){
            return localBackUp9;
        }



        /**
         * Auto generated setter method
         * @param param BackUp9
         */
        public void setBackUp9(java.lang.String param){
            localBackUp9Tracker = true;

            this.localBackUp9=param;


        }


        /**
         * field for BelongFlag
         */


        protected java.lang.String localBelongFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBelongFlagTracker = false ;

        public boolean isBelongFlagSpecified(){
            return localBelongFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBelongFlag(){
            return localBelongFlag;
        }



        /**
         * Auto generated setter method
         * @param param BelongFlag
         */
        public void setBelongFlag(java.lang.String param){
            localBelongFlagTracker = true;

            this.localBelongFlag=param;


        }


        /**
         * field for BrkKindCode
         */


        protected java.lang.String localBrkKindCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrkKindCodeTracker = false ;

        public boolean isBrkKindCodeSpecified(){
            return localBrkKindCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBrkKindCode(){
            return localBrkKindCode;
        }



        /**
         * Auto generated setter method
         * @param param BrkKindCode
         */
        public void setBrkKindCode(java.lang.String param){
            localBrkKindCodeTracker = true;

            this.localBrkKindCode=param;


        }


        /**
         * field for BrkRiskCode
         */


        protected java.lang.String localBrkRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrkRiskCodeTracker = false ;

        public boolean isBrkRiskCodeSpecified(){
            return localBrkRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBrkRiskCode(){
            return localBrkRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param BrkRiskCode
         */
        public void setBrkRiskCode(java.lang.String param){
            localBrkRiskCodeTracker = true;

            this.localBrkRiskCode=param;


        }


        /**
         * field for CardFlag
         */


        protected java.lang.String localCardFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCardFlagTracker = false ;

        public boolean isCardFlagSpecified(){
            return localCardFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCardFlag(){
            return localCardFlag;
        }



        /**
         * Auto generated setter method
         * @param param CardFlag
         */
        public void setCardFlag(java.lang.String param){
            localCardFlagTracker = true;

            this.localCardFlag=param;


        }


        /**
         * field for ChoDutyFlag
         */


        protected java.lang.String localChoDutyFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localChoDutyFlagTracker = false ;

        public boolean isChoDutyFlagSpecified(){
            return localChoDutyFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getChoDutyFlag(){
            return localChoDutyFlag;
        }



        /**
         * Auto generated setter method
         * @param param ChoDutyFlag
         */
        public void setChoDutyFlag(java.lang.String param){
            localChoDutyFlagTracker = true;

            this.localChoDutyFlag=param;


        }


        /**
         * field for ClaimAppRealPath
         */


        protected java.lang.String localClaimAppRealPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localClaimAppRealPathTracker = false ;

        public boolean isClaimAppRealPathSpecified(){
            return localClaimAppRealPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getClaimAppRealPath(){
            return localClaimAppRealPath;
        }



        /**
         * Auto generated setter method
         * @param param ClaimAppRealPath
         */
        public void setClaimAppRealPath(java.lang.String param){
            localClaimAppRealPathTracker = true;

            this.localClaimAppRealPath=param;


        }


        /**
         * field for ClaimAppRelaPath
         */


        protected java.lang.String localClaimAppRelaPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localClaimAppRelaPathTracker = false ;

        public boolean isClaimAppRelaPathSpecified(){
            return localClaimAppRelaPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getClaimAppRelaPath(){
            return localClaimAppRelaPath;
        }



        /**
         * Auto generated setter method
         * @param param ClaimAppRelaPath
         */
        public void setClaimAppRelaPath(java.lang.String param){
            localClaimAppRelaPathTracker = true;

            this.localClaimAppRelaPath=param;


        }


        /**
         * field for ClauseRealPath
         */


        protected java.lang.String localClauseRealPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localClauseRealPathTracker = false ;

        public boolean isClauseRealPathSpecified(){
            return localClauseRealPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getClauseRealPath(){
            return localClauseRealPath;
        }



        /**
         * Auto generated setter method
         * @param param ClauseRealPath
         */
        public void setClauseRealPath(java.lang.String param){
            localClauseRealPathTracker = true;

            this.localClauseRealPath=param;


        }


        /**
         * field for ClauseRelaPath
         */


        protected java.lang.String localClauseRelaPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localClauseRelaPathTracker = false ;

        public boolean isClauseRelaPathSpecified(){
            return localClauseRelaPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getClauseRelaPath(){
            return localClauseRelaPath;
        }



        /**
         * Auto generated setter method
         * @param param ClauseRelaPath
         */
        public void setClauseRelaPath(java.lang.String param){
            localClauseRelaPathTracker = true;

            this.localClauseRelaPath=param;


        }


        /**
         * field for CommCalcKind
         */


        protected java.lang.String localCommCalcKind ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCommCalcKindTracker = false ;

        public boolean isCommCalcKindSpecified(){
            return localCommCalcKindTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCommCalcKind(){
            return localCommCalcKind;
        }



        /**
         * Auto generated setter method
         * @param param CommCalcKind
         */
        public void setCommCalcKind(java.lang.String param){
            localCommCalcKindTracker = true;

            this.localCommCalcKind=param;


        }


        /**
         * field for DeadlineDesc
         */


        protected java.lang.String localDeadlineDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDeadlineDescTracker = false ;

        public boolean isDeadlineDescSpecified(){
            return localDeadlineDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDeadlineDesc(){
            return localDeadlineDesc;
        }



        /**
         * Auto generated setter method
         * @param param DeadlineDesc
         */
        public void setDeadlineDesc(java.lang.String param){
            localDeadlineDescTracker = true;

            this.localDeadlineDesc=param;


        }


        /**
         * field for DestRate
         */


        protected java.lang.String localDestRate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDestRateTracker = false ;

        public boolean isDestRateSpecified(){
            return localDestRateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDestRate(){
            return localDestRate;
        }



        /**
         * Auto generated setter method
         * @param param DestRate
         */
        public void setDestRate(java.lang.String param){
            localDestRateTracker = true;

            this.localDestRate=param;


        }


        /**
         * field for DiscountPrice
         */


        protected java.lang.String localDiscountPrice ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDiscountPriceTracker = false ;

        public boolean isDiscountPriceSpecified(){
            return localDiscountPriceTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDiscountPrice(){
            return localDiscountPrice;
        }



        /**
         * Auto generated setter method
         * @param param DiscountPrice
         */
        public void setDiscountPrice(java.lang.String param){
            localDiscountPriceTracker = true;

            this.localDiscountPrice=param;


        }


        /**
         * field for EdorFlag
         */


        protected java.lang.String localEdorFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localEdorFlagTracker = false ;

        public boolean isEdorFlagSpecified(){
            return localEdorFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getEdorFlag(){
            return localEdorFlag;
        }



        /**
         * Auto generated setter method
         * @param param EdorFlag
         */
        public void setEdorFlag(java.lang.String param){
            localEdorFlagTracker = true;

            this.localEdorFlag=param;


        }


        /**
         * field for EndDate
         */


        protected java.lang.String localEndDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localEndDateTracker = false ;

        public boolean isEndDateSpecified(){
            return localEndDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getEndDate(){
            return localEndDate;
        }



        /**
         * Auto generated setter method
         * @param param EndDate
         */
        public void setEndDate(java.lang.String param){
            localEndDateTracker = true;

            this.localEndDate=param;


        }


        /**
         * field for FeeRate
         */


        protected double localFeeRate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFeeRateTracker = false ;

        public boolean isFeeRateSpecified(){
            return localFeeRateTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getFeeRate(){
            return localFeeRate;
        }



        /**
         * Auto generated setter method
         * @param param FeeRate
         */
        public void setFeeRate(double param){

            // setting primitive attribute tracker to true
            localFeeRateTracker =
                    !java.lang.Double.isNaN(param);

            this.localFeeRate=param;


        }


        /**
         * field for GetFlag
         */


        protected java.lang.String localGetFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localGetFlagTracker = false ;

        public boolean isGetFlagSpecified(){
            return localGetFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getGetFlag(){
            return localGetFlag;
        }



        /**
         * Auto generated setter method
         * @param param GetFlag
         */
        public void setGetFlag(java.lang.String param){
            localGetFlagTracker = true;

            this.localGetFlag=param;


        }


        /**
         * field for Hot
         */


        protected java.lang.String localHot ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localHotTracker = false ;

        public boolean isHotSpecified(){
            return localHotTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getHot(){
            return localHot;
        }



        /**
         * Auto generated setter method
         * @param param Hot
         */
        public void setHot(java.lang.String param){
            localHotTracker = true;

            this.localHot=param;


        }


        /**
         * field for InitPrem
         */


        protected java.lang.String localInitPrem ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localInitPremTracker = false ;

        public boolean isInitPremSpecified(){
            return localInitPremTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getInitPrem(){
            return localInitPrem;
        }



        /**
         * Auto generated setter method
         * @param param InitPrem
         */
        public void setInitPrem(java.lang.String param){
            localInitPremTracker = true;

            this.localInitPrem=param;


        }


        /**
         * field for InsuAccFlag
         */


        protected java.lang.String localInsuAccFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localInsuAccFlagTracker = false ;

        public boolean isInsuAccFlagSpecified(){
            return localInsuAccFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getInsuAccFlag(){
            return localInsuAccFlag;
        }



        /**
         * Auto generated setter method
         * @param param InsuAccFlag
         */
        public void setInsuAccFlag(java.lang.String param){
            localInsuAccFlagTracker = true;

            this.localInsuAccFlag=param;


        }


        /**
         * field for IsBankFlag
         */


        protected java.lang.String localIsBankFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsBankFlagTracker = false ;

        public boolean isIsBankFlagSpecified(){
            return localIsBankFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsBankFlag(){
            return localIsBankFlag;
        }



        /**
         * Auto generated setter method
         * @param param IsBankFlag
         */
        public void setIsBankFlag(java.lang.String param){
            localIsBankFlagTracker = true;

            this.localIsBankFlag=param;


        }


        /**
         * field for IsCommend
         */


        protected java.lang.String localIsCommend ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsCommendTracker = false ;

        public boolean isIsCommendSpecified(){
            return localIsCommendTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsCommend(){
            return localIsCommend;
        }



        /**
         * Auto generated setter method
         * @param param IsCommend
         */
        public void setIsCommend(java.lang.String param){
            localIsCommendTracker = true;

            this.localIsCommend=param;


        }


        /**
         * field for IsDutyChange
         */


        protected java.lang.String localIsDutyChange ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDutyChangeTracker = false ;

        public boolean isIsDutyChangeSpecified(){
            return localIsDutyChangeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDutyChange(){
            return localIsDutyChange;
        }



        /**
         * Auto generated setter method
         * @param param IsDutyChange
         */
        public void setIsDutyChange(java.lang.String param){
            localIsDutyChangeTracker = true;

            this.localIsDutyChange=param;


        }


        /**
         * field for IsPublish
         */


        protected java.lang.String localIsPublish ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsPublishTracker = false ;

        public boolean isIsPublishSpecified(){
            return localIsPublishTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsPublish(){
            return localIsPublish;
        }



        /**
         * Auto generated setter method
         * @param param IsPublish
         */
        public void setIsPublish(java.lang.String param){
            localIsPublishTracker = true;

            this.localIsPublish=param;


        }


        /**
         * field for IsTop
         */


        protected java.lang.String localIsTop ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsTopTracker = false ;

        public boolean isIsTopSpecified(){
            return localIsTopTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsTop(){
            return localIsTop;
        }



        /**
         * Auto generated setter method
         * @param param IsTop
         */
        public void setIsTop(java.lang.String param){
            localIsTopTracker = true;

            this.localIsTop=param;


        }


        /**
         * field for KeyWord
         */


        protected java.lang.String localKeyWord ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localKeyWordTracker = false ;

        public boolean isKeyWordSpecified(){
            return localKeyWordTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getKeyWord(){
            return localKeyWord;
        }



        /**
         * Auto generated setter method
         * @param param KeyWord
         */
        public void setKeyWord(java.lang.String param){
            localKeyWordTracker = true;

            this.localKeyWord=param;


        }


        /**
         * field for MainFlag
         */


        protected java.lang.String localMainFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMainFlagTracker = false ;

        public boolean isMainFlagSpecified(){
            return localMainFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMainFlag(){
            return localMainFlag;
        }



        /**
         * Auto generated setter method
         * @param param MainFlag
         */
        public void setMainFlag(java.lang.String param){
            localMainFlagTracker = true;

            this.localMainFlag=param;


        }


        /**
         * field for MainRiskFlag
         */


        protected java.lang.String localMainRiskFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMainRiskFlagTracker = false ;

        public boolean isMainRiskFlagSpecified(){
            return localMainRiskFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMainRiskFlag(){
            return localMainRiskFlag;
        }



        /**
         * Auto generated setter method
         * @param param MainRiskFlag
         */
        public void setMainRiskFlag(java.lang.String param){
            localMainRiskFlagTracker = true;

            this.localMainRiskFlag=param;


        }


        /**
         * field for MakeDate
         */


        protected java.lang.String localMakeDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeDateTracker = false ;

        public boolean isMakeDateSpecified(){
            return localMakeDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeDate(){
            return localMakeDate;
        }



        /**
         * Auto generated setter method
         * @param param MakeDate
         */
        public void setMakeDate(java.lang.String param){
            localMakeDateTracker = true;

            this.localMakeDate=param;


        }


        /**
         * field for MakeTime
         */


        protected java.lang.String localMakeTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeTimeTracker = false ;

        public boolean isMakeTimeSpecified(){
            return localMakeTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeTime(){
            return localMakeTime;
        }



        /**
         * Auto generated setter method
         * @param param MakeTime
         */
        public void setMakeTime(java.lang.String param){
            localMakeTimeTracker = true;

            this.localMakeTime=param;


        }


        /**
         * field for MaxBasePrem
         */


        protected java.lang.String localMaxBasePrem ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxBasePremTracker = false ;

        public boolean isMaxBasePremSpecified(){
            return localMaxBasePremTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxBasePrem(){
            return localMaxBasePrem;
        }



        /**
         * Auto generated setter method
         * @param param MaxBasePrem
         */
        public void setMaxBasePrem(java.lang.String param){
            localMaxBasePremTracker = true;

            this.localMaxBasePrem=param;


        }


        /**
         * field for MaxInsurePeriod
         */


        protected java.lang.String localMaxInsurePeriod ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxInsurePeriodTracker = false ;

        public boolean isMaxInsurePeriodSpecified(){
            return localMaxInsurePeriodTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxInsurePeriod(){
            return localMaxInsurePeriod;
        }



        /**
         * Auto generated setter method
         * @param param MaxInsurePeriod
         */
        public void setMaxInsurePeriod(java.lang.String param){
            localMaxInsurePeriodTracker = true;

            this.localMaxInsurePeriod=param;


        }


        /**
         * field for MaxInsureUnit
         */


        protected java.lang.String localMaxInsureUnit ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxInsureUnitTracker = false ;

        public boolean isMaxInsureUnitSpecified(){
            return localMaxInsureUnitTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxInsureUnit(){
            return localMaxInsureUnit;
        }



        /**
         * Auto generated setter method
         * @param param MaxInsureUnit
         */
        public void setMaxInsureUnit(java.lang.String param){
            localMaxInsureUnitTracker = true;

            this.localMaxInsureUnit=param;


        }


        /**
         * field for MaxRnewAge
         */


        protected java.lang.String localMaxRnewAge ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxRnewAgeTracker = false ;

        public boolean isMaxRnewAgeSpecified(){
            return localMaxRnewAgeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxRnewAge(){
            return localMaxRnewAge;
        }



        /**
         * Auto generated setter method
         * @param param MaxRnewAge
         */
        public void setMaxRnewAge(java.lang.String param){
            localMaxRnewAgeTracker = true;

            this.localMaxRnewAge=param;


        }


        /**
         * field for MinInsurePeriod
         */


        protected java.lang.String localMinInsurePeriod ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMinInsurePeriodTracker = false ;

        public boolean isMinInsurePeriodSpecified(){
            return localMinInsurePeriodTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMinInsurePeriod(){
            return localMinInsurePeriod;
        }



        /**
         * Auto generated setter method
         * @param param MinInsurePeriod
         */
        public void setMinInsurePeriod(java.lang.String param){
            localMinInsurePeriodTracker = true;

            this.localMinInsurePeriod=param;


        }


        /**
         * field for MinInsureUnit
         */


        protected java.lang.String localMinInsureUnit ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMinInsureUnitTracker = false ;

        public boolean isMinInsureUnitSpecified(){
            return localMinInsureUnitTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMinInsureUnit(){
            return localMinInsureUnit;
        }



        /**
         * Auto generated setter method
         * @param param MinInsureUnit
         */
        public void setMinInsureUnit(java.lang.String param){
            localMinInsureUnitTracker = true;

            this.localMinInsureUnit=param;


        }


        /**
         * field for ModifyDate
         */


        protected java.lang.String localModifyDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyDateTracker = false ;

        public boolean isModifyDateSpecified(){
            return localModifyDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyDate(){
            return localModifyDate;
        }



        /**
         * Auto generated setter method
         * @param param ModifyDate
         */
        public void setModifyDate(java.lang.String param){
            localModifyDateTracker = true;

            this.localModifyDate=param;


        }


        /**
         * field for ModifyTime
         */


        protected java.lang.String localModifyTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyTimeTracker = false ;

        public boolean isModifyTimeSpecified(){
            return localModifyTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyTime(){
            return localModifyTime;
        }



        /**
         * Auto generated setter method
         * @param param ModifyTime
         */
        public void setModifyTime(java.lang.String param){
            localModifyTimeTracker = true;

            this.localModifyTime=param;


        }


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for OptionalClause
         */


        protected java.lang.String localOptionalClause ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOptionalClauseTracker = false ;

        public boolean isOptionalClauseSpecified(){
            return localOptionalClauseTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOptionalClause(){
            return localOptionalClause;
        }



        /**
         * Auto generated setter method
         * @param param OptionalClause
         */
        public void setOptionalClause(java.lang.String param){
            localOptionalClauseTracker = true;

            this.localOptionalClause=param;


        }


        /**
         * field for OrigRiskCode
         */


        protected java.lang.String localOrigRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOrigRiskCodeTracker = false ;

        public boolean isOrigRiskCodeSpecified(){
            return localOrigRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOrigRiskCode(){
            return localOrigRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param OrigRiskCode
         */
        public void setOrigRiskCode(java.lang.String param){
            localOrigRiskCodeTracker = true;

            this.localOrigRiskCode=param;


        }


        /**
         * field for OutRiskCode
         */


        protected java.lang.String localOutRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOutRiskCodeTracker = false ;

        public boolean isOutRiskCodeSpecified(){
            return localOutRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOutRiskCode(){
            return localOutRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param OutRiskCode
         */
        public void setOutRiskCode(java.lang.String param){
            localOutRiskCodeTracker = true;

            this.localOutRiskCode=param;


        }


        /**
         * field for OwnRiskFlag
         */


        protected java.lang.String localOwnRiskFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOwnRiskFlagTracker = false ;

        public boolean isOwnRiskFlagSpecified(){
            return localOwnRiskFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOwnRiskFlag(){
            return localOwnRiskFlag;
        }



        /**
         * Auto generated setter method
         * @param param OwnRiskFlag
         */
        public void setOwnRiskFlag(java.lang.String param){
            localOwnRiskFlagTracker = true;

            this.localOwnRiskFlag=param;


        }


        /**
         * field for PayPeriodMode
         */


        protected java.lang.String localPayPeriodMode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayPeriodModeTracker = false ;

        public boolean isPayPeriodModeSpecified(){
            return localPayPeriodModeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayPeriodMode(){
            return localPayPeriodMode;
        }



        /**
         * Auto generated setter method
         * @param param PayPeriodMode
         */
        public void setPayPeriodMode(java.lang.String param){
            localPayPeriodModeTracker = true;

            this.localPayPeriodMode=param;


        }


        /**
         * field for Popular
         */


        protected java.lang.String localPopular ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPopularTracker = false ;

        public boolean isPopularSpecified(){
            return localPopularTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPopular(){
            return localPopular;
        }



        /**
         * Auto generated setter method
         * @param param Popular
         */
        public void setPopular(java.lang.String param){
            localPopularTracker = true;

            this.localPopular=param;


        }


        /**
         * field for PubAmntFlag
         */


        protected java.lang.String localPubAmntFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPubAmntFlagTracker = false ;

        public boolean isPubAmntFlagSpecified(){
            return localPubAmntFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPubAmntFlag(){
            return localPubAmntFlag;
        }



        /**
         * Auto generated setter method
         * @param param PubAmntFlag
         */
        public void setPubAmntFlag(java.lang.String param){
            localPubAmntFlagTracker = true;

            this.localPubAmntFlag=param;


        }


        /**
         * field for PublishDate
         */


        protected java.lang.String localPublishDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPublishDateTracker = false ;

        public boolean isPublishDateSpecified(){
            return localPublishDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPublishDate(){
            return localPublishDate;
        }



        /**
         * Auto generated setter method
         * @param param PublishDate
         */
        public void setPublishDate(java.lang.String param){
            localPublishDateTracker = true;

            this.localPublishDate=param;


        }


        /**
         * field for Remark
         */


        protected java.lang.String localRemark ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRemarkTracker = false ;

        public boolean isRemarkSpecified(){
            return localRemarkTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRemark(){
            return localRemark;
        }



        /**
         * Auto generated setter method
         * @param param Remark
         */
        public void setRemark(java.lang.String param){
            localRemarkTracker = true;

            this.localRemark=param;


        }


        /**
         * field for RenewCommType
         */


        protected java.lang.String localRenewCommType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRenewCommTypeTracker = false ;

        public boolean isRenewCommTypeSpecified(){
            return localRenewCommTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRenewCommType(){
            return localRenewCommType;
        }



        /**
         * Auto generated setter method
         * @param param RenewCommType
         */
        public void setRenewCommType(java.lang.String param){
            localRenewCommTypeTracker = true;

            this.localRenewCommType=param;


        }


        /**
         * field for RenewFlag
         */


        protected java.lang.String localRenewFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRenewFlagTracker = false ;

        public boolean isRenewFlagSpecified(){
            return localRenewFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRenewFlag(){
            return localRenewFlag;
        }



        /**
         * Auto generated setter method
         * @param param RenewFlag
         */
        public void setRenewFlag(java.lang.String param){
            localRenewFlagTracker = true;

            this.localRenewFlag=param;


        }


        /**
         * field for RinsFlag
         */


        protected java.lang.String localRinsFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRinsFlagTracker = false ;

        public boolean isRinsFlagSpecified(){
            return localRinsFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRinsFlag(){
            return localRinsFlag;
        }



        /**
         * Auto generated setter method
         * @param param RinsFlag
         */
        public void setRinsFlag(java.lang.String param){
            localRinsFlagTracker = true;

            this.localRinsFlag=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for RiskKind
         */


        protected java.lang.String localRiskKind ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKindTracker = false ;

        public boolean isRiskKindSpecified(){
            return localRiskKindTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind(){
            return localRiskKind;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind
         */
        public void setRiskKind(java.lang.String param){
            localRiskKindTracker = true;

            this.localRiskKind=param;


        }


        /**
         * field for RiskKind2
         */


        protected java.lang.String localRiskKind2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKind2Tracker = false ;

        public boolean isRiskKind2Specified(){
            return localRiskKind2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind2(){
            return localRiskKind2;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind2
         */
        public void setRiskKind2(java.lang.String param){
            localRiskKind2Tracker = true;

            this.localRiskKind2=param;


        }


        /**
         * field for RiskKind3
         */


        protected java.lang.String localRiskKind3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKind3Tracker = false ;

        public boolean isRiskKind3Specified(){
            return localRiskKind3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind3(){
            return localRiskKind3;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind3
         */
        public void setRiskKind3(java.lang.String param){
            localRiskKind3Tracker = true;

            this.localRiskKind3=param;


        }


        /**
         * field for RiskName
         */


        protected java.lang.String localRiskName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskNameTracker = false ;

        public boolean isRiskNameSpecified(){
            return localRiskNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskName(){
            return localRiskName;
        }



        /**
         * Auto generated setter method
         * @param param RiskName
         */
        public void setRiskName(java.lang.String param){
            localRiskNameTracker = true;

            this.localRiskName=param;


        }


        /**
         * field for RiskNameEn
         */


        protected java.lang.String localRiskNameEn ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskNameEnTracker = false ;

        public boolean isRiskNameEnSpecified(){
            return localRiskNameEnTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskNameEn(){
            return localRiskNameEn;
        }



        /**
         * Auto generated setter method
         * @param param RiskNameEn
         */
        public void setRiskNameEn(java.lang.String param){
            localRiskNameEnTracker = true;

            this.localRiskNameEn=param;


        }


        /**
         * field for RiskPeriod
         */


        protected java.lang.String localRiskPeriod ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskPeriodTracker = false ;

        public boolean isRiskPeriodSpecified(){
            return localRiskPeriodTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskPeriod(){
            return localRiskPeriod;
        }



        /**
         * Auto generated setter method
         * @param param RiskPeriod
         */
        public void setRiskPeriod(java.lang.String param){
            localRiskPeriodTracker = true;

            this.localRiskPeriod=param;


        }


        /**
         * field for RiskProp
         */


        protected java.lang.String localRiskProp ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskPropTracker = false ;

        public boolean isRiskPropSpecified(){
            return localRiskPropTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskProp(){
            return localRiskProp;
        }



        /**
         * Auto generated setter method
         * @param param RiskProp
         */
        public void setRiskProp(java.lang.String param){
            localRiskPropTracker = true;

            this.localRiskProp=param;


        }


        /**
         * field for RiskShortName
         */


        protected java.lang.String localRiskShortName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskShortNameTracker = false ;

        public boolean isRiskShortNameSpecified(){
            return localRiskShortNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskShortName(){
            return localRiskShortName;
        }



        /**
         * Auto generated setter method
         * @param param RiskShortName
         */
        public void setRiskShortName(java.lang.String param){
            localRiskShortNameTracker = true;

            this.localRiskShortName=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }


        /**
         * field for RiskYearMode
         */


        protected java.lang.String localRiskYearMode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskYearModeTracker = false ;

        public boolean isRiskYearModeSpecified(){
            return localRiskYearModeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskYearMode(){
            return localRiskYearMode;
        }



        /**
         * Auto generated setter method
         * @param param RiskYearMode
         */
        public void setRiskYearMode(java.lang.String param){
            localRiskYearModeTracker = true;

            this.localRiskYearMode=param;


        }


        /**
         * field for RnewFlag
         */


        protected java.lang.String localRnewFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRnewFlagTracker = false ;

        public boolean isRnewFlagSpecified(){
            return localRnewFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRnewFlag(){
            return localRnewFlag;
        }



        /**
         * Auto generated setter method
         * @param param RnewFlag
         */
        public void setRnewFlag(java.lang.String param){
            localRnewFlagTracker = true;

            this.localRnewFlag=param;


        }


        /**
         * field for SalesVolume
         */


        protected java.lang.String localSalesVolume ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSalesVolumeTracker = false ;

        public boolean isSalesVolumeSpecified(){
            return localSalesVolumeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSalesVolume(){
            return localSalesVolume;
        }



        /**
         * Auto generated setter method
         * @param param SalesVolume
         */
        public void setSalesVolume(java.lang.String param){
            localSalesVolumeTracker = true;

            this.localSalesVolume=param;


        }


        /**
         * field for SendBenefitNum
         */


        protected java.lang.String localSendBenefitNum ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSendBenefitNumTracker = false ;

        public boolean isSendBenefitNumSpecified(){
            return localSendBenefitNumTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSendBenefitNum(){
            return localSendBenefitNum;
        }



        /**
         * Auto generated setter method
         * @param param SendBenefitNum
         */
        public void setSendBenefitNum(java.lang.String param){
            localSendBenefitNumTracker = true;

            this.localSendBenefitNum=param;


        }


        /**
         * field for SendBenefitType
         */


        protected java.lang.String localSendBenefitType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSendBenefitTypeTracker = false ;

        public boolean isSendBenefitTypeSpecified(){
            return localSendBenefitTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSendBenefitType(){
            return localSendBenefitType;
        }



        /**
         * Auto generated setter method
         * @param param SendBenefitType
         */
        public void setSendBenefitType(java.lang.String param){
            localSendBenefitTypeTracker = true;

            this.localSendBenefitType=param;


        }


        /**
         * field for SpecialFlag
         */


        protected java.lang.String localSpecialFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSpecialFlagTracker = false ;

        public boolean isSpecialFlagSpecified(){
            return localSpecialFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSpecialFlag(){
            return localSpecialFlag;
        }



        /**
         * Auto generated setter method
         * @param param SpecialFlag
         */
        public void setSpecialFlag(java.lang.String param){
            localSpecialFlagTracker = true;

            this.localSpecialFlag=param;


        }


        /**
         * field for StartDate
         */


        protected java.lang.String localStartDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localStartDateTracker = false ;

        public boolean isStartDateSpecified(){
            return localStartDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getStartDate(){
            return localStartDate;
        }



        /**
         * Auto generated setter method
         * @param param StartDate
         */
        public void setStartDate(java.lang.String param){
            localStartDateTracker = true;

            this.localStartDate=param;


        }


        /**
         * field for Status
         */


        protected java.lang.String localStatus ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localStatusTracker = false ;

        public boolean isStatusSpecified(){
            return localStatusTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getStatus(){
            return localStatus;
        }



        /**
         * Auto generated setter method
         * @param param Status
         */
        public void setStatus(java.lang.String param){
            localStatusTracker = true;

            this.localStatus=param;


        }


        /**
         * field for SubFlag
         */


        protected java.lang.String localSubFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSubFlagTracker = false ;

        public boolean isSubFlagSpecified(){
            return localSubFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSubFlag(){
            return localSubFlag;
        }



        /**
         * Auto generated setter method
         * @param param SubFlag
         */
        public void setSubFlag(java.lang.String param){
            localSubFlagTracker = true;

            this.localSubFlag=param;


        }


        /**
         * field for SubRiskVer
         */


        protected java.lang.String localSubRiskVer ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSubRiskVerTracker = false ;

        public boolean isSubRiskVerSpecified(){
            return localSubRiskVerTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSubRiskVer(){
            return localSubRiskVer;
        }



        /**
         * Auto generated setter method
         * @param param SubRiskVer
         */
        public void setSubRiskVer(java.lang.String param){
            localSubRiskVerTracker = true;

            this.localSubRiskVer=param;


        }


        /**
         * field for SupplierCode
         */


        protected java.lang.String localSupplierCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupplierCodeTracker = false ;

        public boolean isSupplierCodeSpecified(){
            return localSupplierCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupplierCode(){
            return localSupplierCode;
        }



        /**
         * Auto generated setter method
         * @param param SupplierCode
         */
        public void setSupplierCode(java.lang.String param){
            localSupplierCodeTracker = true;

            this.localSupplierCode=param;


        }


        /**
         * field for SynchroFlag
         */


        protected java.lang.String localSynchroFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSynchroFlagTracker = false ;

        public boolean isSynchroFlagSpecified(){
            return localSynchroFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSynchroFlag(){
            return localSynchroFlag;
        }



        /**
         * Auto generated setter method
         * @param param SynchroFlag
         */
        public void setSynchroFlag(java.lang.String param){
            localSynchroFlagTracker = true;

            this.localSynchroFlag=param;


        }


        /**
         * field for TemplateCode
         */


        protected java.lang.String localTemplateCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localTemplateCodeTracker = false ;

        public boolean isTemplateCodeSpecified(){
            return localTemplateCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getTemplateCode(){
            return localTemplateCode;
        }



        /**
         * Auto generated setter method
         * @param param TemplateCode
         */
        public void setTemplateCode(java.lang.String param){
            localTemplateCodeTracker = true;

            this.localTemplateCode=param;


        }


        /**
         * field for TemplateFlag
         */


        protected java.lang.String localTemplateFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localTemplateFlagTracker = false ;

        public boolean isTemplateFlagSpecified(){
            return localTemplateFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getTemplateFlag(){
            return localTemplateFlag;
        }



        /**
         * Auto generated setter method
         * @param param TemplateFlag
         */
        public void setTemplateFlag(java.lang.String param){
            localTemplateFlagTracker = true;

            this.localTemplateFlag=param;


        }


        /**
         * field for Version
         */


        protected java.lang.String localVersion ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localVersionTracker = false ;

        public boolean isVersionSpecified(){
            return localVersionTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getVersion(){
            return localVersion;
        }



        /**
         * Auto generated setter method
         * @param param Version
         */
        public void setVersion(java.lang.String param){
            localVersionTracker = true;

            this.localVersion=param;


        }


        /**
         * field for VideoRealPath
         */


        protected java.lang.String localVideoRealPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localVideoRealPathTracker = false ;

        public boolean isVideoRealPathSpecified(){
            return localVideoRealPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getVideoRealPath(){
            return localVideoRealPath;
        }



        /**
         * Auto generated setter method
         * @param param VideoRealPath
         */
        public void setVideoRealPath(java.lang.String param){
            localVideoRealPathTracker = true;

            this.localVideoRealPath=param;


        }


        /**
         * field for VideoRelaPath
         */


        protected java.lang.String localVideoRelaPath ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localVideoRelaPathTracker = false ;

        public boolean isVideoRelaPathSpecified(){
            return localVideoRelaPathTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getVideoRelaPath(){
            return localVideoRelaPath;
        }



        /**
         * Auto generated setter method
         * @param param VideoRelaPath
         */
        public void setVideoRelaPath(java.lang.String param){
            localVideoRelaPathTracker = true;

            this.localVideoRelaPath=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FMRisk",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FMRisk",
                            xmlWriter);
                }


            }
            if (localCPayFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "CPayFlag", xmlWriter);


                if (localCPayFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCPayFlag);

                }

                xmlWriter.writeEndElement();
            } if (localERiskDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskDesc", xmlWriter);


                if (localERiskDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskDesc);

                }

                xmlWriter.writeEndElement();
            } if (localERiskFeaturesTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskFeatures", xmlWriter);


                if (localERiskFeatures==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskFeatures);

                }

                xmlWriter.writeEndElement();
            } if (localERiskIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskID", xmlWriter);


                if (localERiskID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskID);

                }

                xmlWriter.writeEndElement();
            } if (localERiskPicRealPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskPicRealPath", xmlWriter);


                if (localERiskPicRealPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskPicRealPath);

                }

                xmlWriter.writeEndElement();
            } if (localERiskPicRelaPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskPicRelaPath", xmlWriter);


                if (localERiskPicRelaPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskPicRelaPath);

                }

                xmlWriter.writeEndElement();
            } if (localERiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskType", xmlWriter);


                if (localERiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskType);

                }

                xmlWriter.writeEndElement();
            } if (localFCDocTracker){
                if (localFCDoc!=null){
                    for (int i = 0;i < localFCDoc.length;i++){
                        if (localFCDoc[i] != null){
                            localFCDoc[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FCDoc"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FCDoc", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FCDoc", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null){
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){
                        if (localFEMRiskBrightSpotList[i] != null){
                            localFEMRiskBrightSpotList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMRiskFactorRelaTracker){
                if (localFEMRiskFactorRela!=null){
                    for (int i = 0;i < localFEMRiskFactorRela.length;i++){
                        if (localFEMRiskFactorRela[i] != null){
                            localFEMRiskFactorRela[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorRela"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskFactorRela", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskFactorRela", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMRiskSaleAreaTracker){
                if (localFEMRiskSaleArea!=null){
                    for (int i = 0;i < localFEMRiskSaleArea.length;i++){
                        if (localFEMRiskSaleArea[i] != null){
                            localFEMRiskSaleArea[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskSaleArea"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskSaleArea", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskSaleArea", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMRiskTypeTracker){
                if (localFEMRiskType!=null){
                    for (int i = 0;i < localFEMRiskType.length;i++){
                        if (localFEMRiskType[i] != null){
                            localFEMRiskType[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskType"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskType", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskType", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFERiskAppFactorTracker){
                if (localFERiskAppFactor!=null){
                    for (int i = 0;i < localFERiskAppFactor.length;i++){
                        if (localFERiskAppFactor[i] != null){
                            localFERiskAppFactor[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FERiskAppFactor"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FERiskAppFactor", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FERiskAppFactor", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEUIInfoTracker){
                if (localFEUIInfo!=null){
                    for (int i = 0;i < localFEUIInfo.length;i++){
                        if (localFEUIInfo[i] != null){
                            localFEUIInfo[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfo"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEUIInfo", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEUIInfo", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFMDutyTracker){
                if (localFMDuty!=null){
                    for (int i = 0;i < localFMDuty.length;i++){
                        if (localFMDuty[i] != null){
                            localFMDuty[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDuty"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMDuty", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMDuty", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFMDutyRelationTracker){
                if (localFMDutyRelation!=null){
                    for (int i = 0;i < localFMDutyRelation.length;i++){
                        if (localFMDutyRelation[i] != null){
                            localFMDutyRelation[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDutyRelation"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMDutyRelation", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMDutyRelation", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localUWFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UWFlag", xmlWriter);


                if (localUWFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUWFlag);

                }

                xmlWriter.writeEndElement();
            } if (localAccreditFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "accreditFlag", xmlWriter);


                if (localAccreditFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAccreditFlag);

                }

                xmlWriter.writeEndElement();
            } if (localAdaptPeopleInfoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "adaptPeopleInfo", xmlWriter);


                if (localAdaptPeopleInfo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAdaptPeopleInfo);

                }

                xmlWriter.writeEndElement();
            } if (localAutoRelatedClauseTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "autoRelatedClause", xmlWriter);


                if (localAutoRelatedClause==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAutoRelatedClause);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp10Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp10", xmlWriter);


                if (localBackUp10==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp10);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp3", xmlWriter);


                if (localBackUp3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp4Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp4", xmlWriter);


                if (localBackUp4==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp4);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp5Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp5", xmlWriter);


                if (localBackUp5==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp5);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp6Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp6", xmlWriter);


                if (localBackUp6==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp6);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp7Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp7", xmlWriter);


                if (localBackUp7==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp7);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp8Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp8", xmlWriter);


                if (localBackUp8==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp8);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp9Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp9", xmlWriter);


                if (localBackUp9==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp9);

                }

                xmlWriter.writeEndElement();
            } if (localBelongFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "belongFlag", xmlWriter);


                if (localBelongFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBelongFlag);

                }

                xmlWriter.writeEndElement();
            } if (localBrkKindCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brkKindCode", xmlWriter);


                if (localBrkKindCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBrkKindCode);

                }

                xmlWriter.writeEndElement();
            } if (localBrkRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brkRiskCode", xmlWriter);


                if (localBrkRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBrkRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localCardFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "cardFlag", xmlWriter);


                if (localCardFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCardFlag);

                }

                xmlWriter.writeEndElement();
            } if (localChoDutyFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "choDutyFlag", xmlWriter);


                if (localChoDutyFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localChoDutyFlag);

                }

                xmlWriter.writeEndElement();
            } if (localClaimAppRealPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "claimAppRealPath", xmlWriter);


                if (localClaimAppRealPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localClaimAppRealPath);

                }

                xmlWriter.writeEndElement();
            } if (localClaimAppRelaPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "claimAppRelaPath", xmlWriter);


                if (localClaimAppRelaPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localClaimAppRelaPath);

                }

                xmlWriter.writeEndElement();
            } if (localClauseRealPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "clauseRealPath", xmlWriter);


                if (localClauseRealPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localClauseRealPath);

                }

                xmlWriter.writeEndElement();
            } if (localClauseRelaPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "clauseRelaPath", xmlWriter);


                if (localClauseRelaPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localClauseRelaPath);

                }

                xmlWriter.writeEndElement();
            } if (localCommCalcKindTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "commCalcKind", xmlWriter);


                if (localCommCalcKind==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCommCalcKind);

                }

                xmlWriter.writeEndElement();
            } if (localDeadlineDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "deadlineDesc", xmlWriter);


                if (localDeadlineDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDeadlineDesc);

                }

                xmlWriter.writeEndElement();
            } if (localDestRateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "destRate", xmlWriter);


                if (localDestRate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDestRate);

                }

                xmlWriter.writeEndElement();
            } if (localDiscountPriceTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "discountPrice", xmlWriter);


                if (localDiscountPrice==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDiscountPrice);

                }

                xmlWriter.writeEndElement();
            } if (localEdorFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "edorFlag", xmlWriter);


                if (localEdorFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localEdorFlag);

                }

                xmlWriter.writeEndElement();
            } if (localEndDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "endDate", xmlWriter);


                if (localEndDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localEndDate);

                }

                xmlWriter.writeEndElement();
            } if (localFeeRateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "feeRate", xmlWriter);

                if (java.lang.Double.isNaN(localFeeRate)) {

                    throw new org.apache.axis2.databinding.ADBException("feeRate cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFeeRate));
                }

                xmlWriter.writeEndElement();
            } if (localGetFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "getFlag", xmlWriter);


                if (localGetFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localGetFlag);

                }

                xmlWriter.writeEndElement();
            } if (localHotTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "hot", xmlWriter);


                if (localHot==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localHot);

                }

                xmlWriter.writeEndElement();
            } if (localInitPremTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "initPrem", xmlWriter);


                if (localInitPrem==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localInitPrem);

                }

                xmlWriter.writeEndElement();
            } if (localInsuAccFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "insuAccFlag", xmlWriter);


                if (localInsuAccFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localInsuAccFlag);

                }

                xmlWriter.writeEndElement();
            } if (localIsBankFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isBankFlag", xmlWriter);


                if (localIsBankFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsBankFlag);

                }

                xmlWriter.writeEndElement();
            } if (localIsCommendTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isCommend", xmlWriter);


                if (localIsCommend==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsCommend);

                }

                xmlWriter.writeEndElement();
            } if (localIsDutyChangeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDutyChange", xmlWriter);


                if (localIsDutyChange==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDutyChange);

                }

                xmlWriter.writeEndElement();
            } if (localIsPublishTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isPublish", xmlWriter);


                if (localIsPublish==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsPublish);

                }

                xmlWriter.writeEndElement();
            } if (localIsTopTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isTop", xmlWriter);


                if (localIsTop==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsTop);

                }

                xmlWriter.writeEndElement();
            } if (localKeyWordTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "keyWord", xmlWriter);


                if (localKeyWord==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localKeyWord);

                }

                xmlWriter.writeEndElement();
            } if (localMainFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "mainFlag", xmlWriter);


                if (localMainFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMainFlag);

                }

                xmlWriter.writeEndElement();
            } if (localMainRiskFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "mainRiskFlag", xmlWriter);


                if (localMainRiskFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMainRiskFlag);

                }

                xmlWriter.writeEndElement();
            } if (localMakeDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeDate", xmlWriter);


                if (localMakeDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeDate);

                }

                xmlWriter.writeEndElement();
            } if (localMakeTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeTime", xmlWriter);


                if (localMakeTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeTime);

                }

                xmlWriter.writeEndElement();
            } if (localMaxBasePremTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxBasePrem", xmlWriter);


                if (localMaxBasePrem==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxBasePrem);

                }

                xmlWriter.writeEndElement();
            } if (localMaxInsurePeriodTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxInsurePeriod", xmlWriter);


                if (localMaxInsurePeriod==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxInsurePeriod);

                }

                xmlWriter.writeEndElement();
            } if (localMaxInsureUnitTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxInsureUnit", xmlWriter);


                if (localMaxInsureUnit==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxInsureUnit);

                }

                xmlWriter.writeEndElement();
            } if (localMaxRnewAgeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxRnewAge", xmlWriter);


                if (localMaxRnewAge==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxRnewAge);

                }

                xmlWriter.writeEndElement();
            } if (localMinInsurePeriodTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "minInsurePeriod", xmlWriter);


                if (localMinInsurePeriod==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMinInsurePeriod);

                }

                xmlWriter.writeEndElement();
            } if (localMinInsureUnitTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "minInsureUnit", xmlWriter);


                if (localMinInsureUnit==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMinInsureUnit);

                }

                xmlWriter.writeEndElement();
            } if (localModifyDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyDate", xmlWriter);


                if (localModifyDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyDate);

                }

                xmlWriter.writeEndElement();
            } if (localModifyTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyTime", xmlWriter);


                if (localModifyTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyTime);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localOptionalClauseTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "optionalClause", xmlWriter);


                if (localOptionalClause==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOptionalClause);

                }

                xmlWriter.writeEndElement();
            } if (localOrigRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "origRiskCode", xmlWriter);


                if (localOrigRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOrigRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localOutRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "outRiskCode", xmlWriter);


                if (localOutRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOutRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localOwnRiskFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ownRiskFlag", xmlWriter);


                if (localOwnRiskFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOwnRiskFlag);

                }

                xmlWriter.writeEndElement();
            } if (localPayPeriodModeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payPeriodMode", xmlWriter);


                if (localPayPeriodMode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayPeriodMode);

                }

                xmlWriter.writeEndElement();
            } if (localPopularTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "popular", xmlWriter);


                if (localPopular==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPopular);

                }

                xmlWriter.writeEndElement();
            } if (localPubAmntFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "pubAmntFlag", xmlWriter);


                if (localPubAmntFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPubAmntFlag);

                }

                xmlWriter.writeEndElement();
            } if (localPublishDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "publishDate", xmlWriter);


                if (localPublishDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPublishDate);

                }

                xmlWriter.writeEndElement();
            } if (localRemarkTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "remark", xmlWriter);


                if (localRemark==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRemark);

                }

                xmlWriter.writeEndElement();
            } if (localRenewCommTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "renewCommType", xmlWriter);


                if (localRenewCommType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRenewCommType);

                }

                xmlWriter.writeEndElement();
            } if (localRenewFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "renewFlag", xmlWriter);


                if (localRenewFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRenewFlag);

                }

                xmlWriter.writeEndElement();
            } if (localRinsFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "rinsFlag", xmlWriter);


                if (localRinsFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRinsFlag);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskKindTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind", xmlWriter);


                if (localRiskKind==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind);

                }

                xmlWriter.writeEndElement();
            } if (localRiskKind2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind2", xmlWriter);


                if (localRiskKind2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind2);

                }

                xmlWriter.writeEndElement();
            } if (localRiskKind3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind3", xmlWriter);


                if (localRiskKind3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind3);

                }

                xmlWriter.writeEndElement();
            } if (localRiskNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskName", xmlWriter);


                if (localRiskName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskName);

                }

                xmlWriter.writeEndElement();
            } if (localRiskNameEnTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskNameEn", xmlWriter);


                if (localRiskNameEn==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskNameEn);

                }

                xmlWriter.writeEndElement();
            } if (localRiskPeriodTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskPeriod", xmlWriter);


                if (localRiskPeriod==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskPeriod);

                }

                xmlWriter.writeEndElement();
            } if (localRiskPropTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskProp", xmlWriter);


                if (localRiskProp==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskProp);

                }

                xmlWriter.writeEndElement();
            } if (localRiskShortNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskShortName", xmlWriter);


                if (localRiskShortName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskShortName);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            } if (localRiskYearModeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskYearMode", xmlWriter);


                if (localRiskYearMode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskYearMode);

                }

                xmlWriter.writeEndElement();
            } if (localRnewFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "rnewFlag", xmlWriter);


                if (localRnewFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRnewFlag);

                }

                xmlWriter.writeEndElement();
            } if (localSalesVolumeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "salesVolume", xmlWriter);


                if (localSalesVolume==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSalesVolume);

                }

                xmlWriter.writeEndElement();
            } if (localSendBenefitNumTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "sendBenefitNum", xmlWriter);


                if (localSendBenefitNum==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSendBenefitNum);

                }

                xmlWriter.writeEndElement();
            } if (localSendBenefitTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "sendBenefitType", xmlWriter);


                if (localSendBenefitType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSendBenefitType);

                }

                xmlWriter.writeEndElement();
            } if (localSpecialFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "specialFlag", xmlWriter);


                if (localSpecialFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSpecialFlag);

                }

                xmlWriter.writeEndElement();
            } if (localStartDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "startDate", xmlWriter);


                if (localStartDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localStartDate);

                }

                xmlWriter.writeEndElement();
            } if (localStatusTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "status", xmlWriter);


                if (localStatus==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localStatus);

                }

                xmlWriter.writeEndElement();
            } if (localSubFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "subFlag", xmlWriter);


                if (localSubFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSubFlag);

                }

                xmlWriter.writeEndElement();
            } if (localSubRiskVerTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "subRiskVer", xmlWriter);


                if (localSubRiskVer==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSubRiskVer);

                }

                xmlWriter.writeEndElement();
            } if (localSupplierCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supplierCode", xmlWriter);


                if (localSupplierCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupplierCode);

                }

                xmlWriter.writeEndElement();
            } if (localSynchroFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "synchroFlag", xmlWriter);


                if (localSynchroFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSynchroFlag);

                }

                xmlWriter.writeEndElement();
            } if (localTemplateCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "templateCode", xmlWriter);


                if (localTemplateCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localTemplateCode);

                }

                xmlWriter.writeEndElement();
            } if (localTemplateFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "templateFlag", xmlWriter);


                if (localTemplateFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localTemplateFlag);

                }

                xmlWriter.writeEndElement();
            } if (localVersionTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "version", xmlWriter);


                if (localVersion==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localVersion);

                }

                xmlWriter.writeEndElement();
            } if (localVideoRealPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "videoRealPath", xmlWriter);


                if (localVideoRealPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localVideoRealPath);

                }

                xmlWriter.writeEndElement();
            } if (localVideoRelaPathTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "videoRelaPath", xmlWriter);


                if (localVideoRelaPath==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localVideoRelaPath);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localCPayFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "CPayFlag"));

                elementList.add(localCPayFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCPayFlag));
            } if (localERiskDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskDesc"));

                elementList.add(localERiskDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskDesc));
            } if (localERiskFeaturesTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskFeatures"));

                elementList.add(localERiskFeatures==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskFeatures));
            } if (localERiskIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskID"));

                elementList.add(localERiskID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskID));
            } if (localERiskPicRealPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskPicRealPath"));

                elementList.add(localERiskPicRealPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskPicRealPath));
            } if (localERiskPicRelaPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskPicRelaPath"));

                elementList.add(localERiskPicRelaPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskPicRelaPath));
            } if (localERiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskType"));

                elementList.add(localERiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskType));
            } if (localFCDocTracker){
                if (localFCDoc!=null) {
                    for (int i = 0;i < localFCDoc.length;i++){

                        if (localFCDoc[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FCDoc"));
                            elementList.add(localFCDoc[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FCDoc"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FCDoc"));
                    elementList.add(localFCDoc);

                }

            } if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null) {
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){

                        if (localFEMRiskBrightSpotList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(localFEMRiskBrightSpotList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskBrightSpotList"));
                    elementList.add(localFEMRiskBrightSpotList);

                }

            } if (localFEMRiskFactorRelaTracker){
                if (localFEMRiskFactorRela!=null) {
                    for (int i = 0;i < localFEMRiskFactorRela.length;i++){

                        if (localFEMRiskFactorRela[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskFactorRela"));
                            elementList.add(localFEMRiskFactorRela[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskFactorRela"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskFactorRela"));
                    elementList.add(localFEMRiskFactorRela);

                }

            } if (localFEMRiskSaleAreaTracker){
                if (localFEMRiskSaleArea!=null) {
                    for (int i = 0;i < localFEMRiskSaleArea.length;i++){

                        if (localFEMRiskSaleArea[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskSaleArea"));
                            elementList.add(localFEMRiskSaleArea[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskSaleArea"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskSaleArea"));
                    elementList.add(localFEMRiskSaleArea);

                }

            } if (localFEMRiskTypeTracker){
                if (localFEMRiskType!=null) {
                    for (int i = 0;i < localFEMRiskType.length;i++){

                        if (localFEMRiskType[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskType"));
                            elementList.add(localFEMRiskType[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskType"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskType"));
                    elementList.add(localFEMRiskType);

                }

            } if (localFERiskAppFactorTracker){
                if (localFERiskAppFactor!=null) {
                    for (int i = 0;i < localFERiskAppFactor.length;i++){

                        if (localFERiskAppFactor[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FERiskAppFactor"));
                            elementList.add(localFERiskAppFactor[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FERiskAppFactor"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FERiskAppFactor"));
                    elementList.add(localFERiskAppFactor);

                }

            } if (localFEUIInfoTracker){
                if (localFEUIInfo!=null) {
                    for (int i = 0;i < localFEUIInfo.length;i++){

                        if (localFEUIInfo[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEUIInfo"));
                            elementList.add(localFEUIInfo[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEUIInfo"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEUIInfo"));
                    elementList.add(localFEUIInfo);

                }

            } if (localFMDutyTracker){
                if (localFMDuty!=null) {
                    for (int i = 0;i < localFMDuty.length;i++){

                        if (localFMDuty[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMDuty"));
                            elementList.add(localFMDuty[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMDuty"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FMDuty"));
                    elementList.add(localFMDuty);

                }

            } if (localFMDutyRelationTracker){
                if (localFMDutyRelation!=null) {
                    for (int i = 0;i < localFMDutyRelation.length;i++){

                        if (localFMDutyRelation[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMDutyRelation"));
                            elementList.add(localFMDutyRelation[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMDutyRelation"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FMDutyRelation"));
                    elementList.add(localFMDutyRelation);

                }

            } if (localUWFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UWFlag"));

                elementList.add(localUWFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUWFlag));
            } if (localAccreditFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "accreditFlag"));

                elementList.add(localAccreditFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccreditFlag));
            } if (localAdaptPeopleInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "adaptPeopleInfo"));

                elementList.add(localAdaptPeopleInfo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAdaptPeopleInfo));
            } if (localAutoRelatedClauseTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "autoRelatedClause"));

                elementList.add(localAutoRelatedClause==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAutoRelatedClause));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp10Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp10"));

                elementList.add(localBackUp10==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp10));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localBackUp3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp3"));

                elementList.add(localBackUp3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp3));
            } if (localBackUp4Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp4"));

                elementList.add(localBackUp4==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp4));
            } if (localBackUp5Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp5"));

                elementList.add(localBackUp5==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp5));
            } if (localBackUp6Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp6"));

                elementList.add(localBackUp6==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp6));
            } if (localBackUp7Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp7"));

                elementList.add(localBackUp7==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp7));
            } if (localBackUp8Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp8"));

                elementList.add(localBackUp8==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp8));
            } if (localBackUp9Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp9"));

                elementList.add(localBackUp9==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp9));
            } if (localBelongFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "belongFlag"));

                elementList.add(localBelongFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBelongFlag));
            } if (localBrkKindCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brkKindCode"));

                elementList.add(localBrkKindCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrkKindCode));
            } if (localBrkRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brkRiskCode"));

                elementList.add(localBrkRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrkRiskCode));
            } if (localCardFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "cardFlag"));

                elementList.add(localCardFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardFlag));
            } if (localChoDutyFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "choDutyFlag"));

                elementList.add(localChoDutyFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChoDutyFlag));
            } if (localClaimAppRealPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "claimAppRealPath"));

                elementList.add(localClaimAppRealPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClaimAppRealPath));
            } if (localClaimAppRelaPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "claimAppRelaPath"));

                elementList.add(localClaimAppRelaPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClaimAppRelaPath));
            } if (localClauseRealPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "clauseRealPath"));

                elementList.add(localClauseRealPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClauseRealPath));
            } if (localClauseRelaPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "clauseRelaPath"));

                elementList.add(localClauseRelaPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClauseRelaPath));
            } if (localCommCalcKindTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "commCalcKind"));

                elementList.add(localCommCalcKind==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCommCalcKind));
            } if (localDeadlineDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "deadlineDesc"));

                elementList.add(localDeadlineDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDeadlineDesc));
            } if (localDestRateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "destRate"));

                elementList.add(localDestRate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDestRate));
            } if (localDiscountPriceTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "discountPrice"));

                elementList.add(localDiscountPrice==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiscountPrice));
            } if (localEdorFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "edorFlag"));

                elementList.add(localEdorFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEdorFlag));
            } if (localEndDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "endDate"));

                elementList.add(localEndDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndDate));
            } if (localFeeRateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "feeRate"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFeeRate));
            } if (localGetFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "getFlag"));

                elementList.add(localGetFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetFlag));
            } if (localHotTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "hot"));

                elementList.add(localHot==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHot));
            } if (localInitPremTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "initPrem"));

                elementList.add(localInitPrem==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInitPrem));
            } if (localInsuAccFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "insuAccFlag"));

                elementList.add(localInsuAccFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuAccFlag));
            } if (localIsBankFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isBankFlag"));

                elementList.add(localIsBankFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsBankFlag));
            } if (localIsCommendTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isCommend"));

                elementList.add(localIsCommend==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsCommend));
            } if (localIsDutyChangeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDutyChange"));

                elementList.add(localIsDutyChange==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDutyChange));
            } if (localIsPublishTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isPublish"));

                elementList.add(localIsPublish==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPublish));
            } if (localIsTopTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isTop"));

                elementList.add(localIsTop==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsTop));
            } if (localKeyWordTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "keyWord"));

                elementList.add(localKeyWord==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKeyWord));
            } if (localMainFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "mainFlag"));

                elementList.add(localMainFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainFlag));
            } if (localMainRiskFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "mainRiskFlag"));

                elementList.add(localMainRiskFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainRiskFlag));
            } if (localMakeDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeDate"));

                elementList.add(localMakeDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeDate));
            } if (localMakeTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeTime"));

                elementList.add(localMakeTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeTime));
            } if (localMaxBasePremTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "maxBasePrem"));

                elementList.add(localMaxBasePrem==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxBasePrem));
            } if (localMaxInsurePeriodTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "maxInsurePeriod"));

                elementList.add(localMaxInsurePeriod==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxInsurePeriod));
            } if (localMaxInsureUnitTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "maxInsureUnit"));

                elementList.add(localMaxInsureUnit==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxInsureUnit));
            } if (localMaxRnewAgeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "maxRnewAge"));

                elementList.add(localMaxRnewAge==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxRnewAge));
            } if (localMinInsurePeriodTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "minInsurePeriod"));

                elementList.add(localMinInsurePeriod==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMinInsurePeriod));
            } if (localMinInsureUnitTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "minInsureUnit"));

                elementList.add(localMinInsureUnit==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMinInsureUnit));
            } if (localModifyDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyDate"));

                elementList.add(localModifyDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyDate));
            } if (localModifyTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyTime"));

                elementList.add(localModifyTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyTime));
            } if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localOptionalClauseTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "optionalClause"));

                elementList.add(localOptionalClause==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOptionalClause));
            } if (localOrigRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "origRiskCode"));

                elementList.add(localOrigRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigRiskCode));
            } if (localOutRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "outRiskCode"));

                elementList.add(localOutRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutRiskCode));
            } if (localOwnRiskFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ownRiskFlag"));

                elementList.add(localOwnRiskFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnRiskFlag));
            } if (localPayPeriodModeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payPeriodMode"));

                elementList.add(localPayPeriodMode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayPeriodMode));
            } if (localPopularTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "popular"));

                elementList.add(localPopular==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPopular));
            } if (localPubAmntFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "pubAmntFlag"));

                elementList.add(localPubAmntFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPubAmntFlag));
            } if (localPublishDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "publishDate"));

                elementList.add(localPublishDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPublishDate));
            } if (localRemarkTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "remark"));

                elementList.add(localRemark==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRemark));
            } if (localRenewCommTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "renewCommType"));

                elementList.add(localRenewCommType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRenewCommType));
            } if (localRenewFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "renewFlag"));

                elementList.add(localRenewFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRenewFlag));
            } if (localRinsFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "rinsFlag"));

                elementList.add(localRinsFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRinsFlag));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localRiskKindTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind"));

                elementList.add(localRiskKind==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind));
            } if (localRiskKind2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind2"));

                elementList.add(localRiskKind2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind2));
            } if (localRiskKind3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind3"));

                elementList.add(localRiskKind3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind3));
            } if (localRiskNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskName"));

                elementList.add(localRiskName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskName));
            } if (localRiskNameEnTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskNameEn"));

                elementList.add(localRiskNameEn==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskNameEn));
            } if (localRiskPeriodTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskPeriod"));

                elementList.add(localRiskPeriod==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskPeriod));
            } if (localRiskPropTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskProp"));

                elementList.add(localRiskProp==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskProp));
            } if (localRiskShortNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskShortName"));

                elementList.add(localRiskShortName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskShortName));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            } if (localRiskYearModeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskYearMode"));

                elementList.add(localRiskYearMode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskYearMode));
            } if (localRnewFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "rnewFlag"));

                elementList.add(localRnewFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRnewFlag));
            } if (localSalesVolumeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "salesVolume"));

                elementList.add(localSalesVolume==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalesVolume));
            } if (localSendBenefitNumTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "sendBenefitNum"));

                elementList.add(localSendBenefitNum==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSendBenefitNum));
            } if (localSendBenefitTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "sendBenefitType"));

                elementList.add(localSendBenefitType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSendBenefitType));
            } if (localSpecialFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "specialFlag"));

                elementList.add(localSpecialFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSpecialFlag));
            } if (localStartDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "startDate"));

                elementList.add(localStartDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartDate));
            } if (localStatusTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "status"));

                elementList.add(localStatus==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
            } if (localSubFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "subFlag"));

                elementList.add(localSubFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubFlag));
            } if (localSubRiskVerTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "subRiskVer"));

                elementList.add(localSubRiskVer==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubRiskVer));
            } if (localSupplierCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "supplierCode"));

                elementList.add(localSupplierCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierCode));
            } if (localSynchroFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "synchroFlag"));

                elementList.add(localSynchroFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSynchroFlag));
            } if (localTemplateCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "templateCode"));

                elementList.add(localTemplateCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTemplateCode));
            } if (localTemplateFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "templateFlag"));

                elementList.add(localTemplateFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTemplateFlag));
            } if (localVersionTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "version"));

                elementList.add(localVersion==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersion));
            } if (localVideoRealPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "videoRealPath"));

                elementList.add(localVideoRealPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVideoRealPath));
            } if (localVideoRelaPathTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "videoRelaPath"));

                elementList.add(localVideoRelaPath==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVideoRelaPath));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FMRisk parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FMRisk object =
                        new FMRisk();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FMRisk".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMRisk)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list8 = new java.util.ArrayList();

                    java.util.ArrayList list9 = new java.util.ArrayList();

                    java.util.ArrayList list10 = new java.util.ArrayList();

                    java.util.ArrayList list11 = new java.util.ArrayList();

                    java.util.ArrayList list12 = new java.util.ArrayList();

                    java.util.ArrayList list13 = new java.util.ArrayList();

                    java.util.ArrayList list14 = new java.util.ArrayList();

                    java.util.ArrayList list15 = new java.util.ArrayList();

                    java.util.ArrayList list16 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","CPayFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCPayFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskFeatures").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskFeatures(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskPicRealPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskPicRealPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskPicRelaPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskPicRelaPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FCDoc").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list8.add(null);
                            reader.next();
                        } else {
                            list8.add(FCDoc.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone8 = false;
                        while(!loopDone8){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone8 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FCDoc").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list8.add(null);
                                        reader.next();
                                    } else {
                                        list8.add(FCDoc.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone8 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFCDoc((FCDoc[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FCDoc.class,
                                        list8));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list9.add(null);
                            reader.next();
                        } else {
                            list9.add(FEMRiskBrightSpotList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone9 = false;
                        while(!loopDone9){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone9 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list9.add(null);
                                        reader.next();
                                    } else {
                                        list9.add(FEMRiskBrightSpotList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone9 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskBrightSpotList((FEMRiskBrightSpotList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskBrightSpotList.class,
                                        list9));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorRela").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list10.add(null);
                            reader.next();
                        } else {
                            list10.add(FEMRiskFactorRela.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone10 = false;
                        while(!loopDone10){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone10 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorRela").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list10.add(null);
                                        reader.next();
                                    } else {
                                        list10.add(FEMRiskFactorRela.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone10 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskFactorRela((FEMRiskFactorRela[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskFactorRela.class,
                                        list10));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskSaleArea").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list11.add(null);
                            reader.next();
                        } else {
                            list11.add(FEMRiskSaleArea.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone11 = false;
                        while(!loopDone11){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone11 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskSaleArea").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list11.add(null);
                                        reader.next();
                                    } else {
                                        list11.add(FEMRiskSaleArea.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone11 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskSaleArea((FEMRiskSaleArea[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskSaleArea.class,
                                        list11));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskType").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list12.add(null);
                            reader.next();
                        } else {
                            list12.add(FEMRiskType.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone12 = false;
                        while(!loopDone12){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone12 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskType").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list12.add(null);
                                        reader.next();
                                    } else {
                                        list12.add(FEMRiskType.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone12 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskType((FEMRiskType[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskType.class,
                                        list12));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FERiskAppFactor").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list13.add(null);
                            reader.next();
                        } else {
                            list13.add(FERiskAppFactor.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone13 = false;
                        while(!loopDone13){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone13 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FERiskAppFactor").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list13.add(null);
                                        reader.next();
                                    } else {
                                        list13.add(FERiskAppFactor.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone13 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFERiskAppFactor((FERiskAppFactor[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FERiskAppFactor.class,
                                        list13));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfo").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list14.add(null);
                            reader.next();
                        } else {
                            list14.add(FEUIInfo.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone14 = false;
                        while(!loopDone14){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone14 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfo").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list14.add(null);
                                        reader.next();
                                    } else {
                                        list14.add(FEUIInfo.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone14 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEUIInfo((FEUIInfo[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEUIInfo.class,
                                        list14));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDuty").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list15.add(null);
                            reader.next();
                        } else {
                            list15.add(FMDuty.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone15 = false;
                        while(!loopDone15){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone15 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDuty").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list15.add(null);
                                        reader.next();
                                    } else {
                                        list15.add(FMDuty.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone15 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFMDuty((FMDuty[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FMDuty.class,
                                        list15));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDutyRelation").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list16.add(null);
                            reader.next();
                        } else {
                            list16.add(FMDutyRelation.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone16 = false;
                        while(!loopDone16){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone16 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMDutyRelation").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list16.add(null);
                                        reader.next();
                                    } else {
                                        list16.add(FMDutyRelation.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone16 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFMDutyRelation((FMDutyRelation[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FMDutyRelation.class,
                                        list16));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UWFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUWFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","accreditFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAccreditFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","adaptPeopleInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAdaptPeopleInfo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","autoRelatedClause").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAutoRelatedClause(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp10").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp10(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp4").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp4(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp5").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp5(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp6").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp6(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp7").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp7(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp8").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp8(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp9").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp9(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","belongFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBelongFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brkKindCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBrkKindCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brkRiskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBrkRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","cardFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCardFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","choDutyFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setChoDutyFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","claimAppRealPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setClaimAppRealPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","claimAppRelaPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setClaimAppRelaPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","clauseRealPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setClauseRealPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","clauseRelaPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setClauseRelaPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","commCalcKind").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCommCalcKind(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","deadlineDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDeadlineDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","destRate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDestRate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","discountPrice").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDiscountPrice(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","edorFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setEdorFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","endDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setEndDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","feeRate").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setFeeRate(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setFeeRate(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","getFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setGetFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","hot").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setHot(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","initPrem").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setInitPrem(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","insuAccFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setInsuAccFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isBankFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsBankFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isCommend").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsCommend(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDutyChange").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDutyChange(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isPublish").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsPublish(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isTop").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsTop(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","keyWord").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setKeyWord(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","mainFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMainFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","mainRiskFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMainRiskFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","maxBasePrem").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxBasePrem(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","maxInsurePeriod").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxInsurePeriod(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","maxInsureUnit").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxInsureUnit(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","maxRnewAge").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxRnewAge(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","minInsurePeriod").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMinInsurePeriod(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","minInsureUnit").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMinInsureUnit(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","optionalClause").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOptionalClause(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","origRiskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOrigRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","outRiskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOutRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ownRiskFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOwnRiskFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payPeriodMode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayPeriodMode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","popular").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPopular(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","pubAmntFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPubAmntFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","publishDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPublishDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","remark").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRemark(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","renewCommType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRenewCommType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","renewFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRenewFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","rinsFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRinsFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskKind").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskKind2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskKind3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskNameEn").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskNameEn(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskPeriod").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskPeriod(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskProp").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskProp(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskShortName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskShortName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskYearMode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskYearMode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","rnewFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRnewFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","salesVolume").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSalesVolume(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","sendBenefitNum").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSendBenefitNum(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","sendBenefitType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSendBenefitType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","specialFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSpecialFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","startDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setStartDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","status").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setStatus(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","subFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSubFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","subRiskVer").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSubRiskVer(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","supplierCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupplierCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","synchroFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSynchroFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","templateCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setTemplateCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","templateFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setTemplateFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","version").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setVersion(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","videoRealPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setVideoRealPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","videoRelaPath").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setVideoRelaPath(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class ExtensionMapper{

        public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                     java.lang.String typeName,
                                                     javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMSupportKindsPeopleList".equals(typeName)){

                return  FEMSupportKindsPeopleList.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "RequestExtension".equals(typeName)){

                return  RequestExtension.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEUIInfoValue".equals(typeName)){

                return  FEUIInfoValue.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FCDoc".equals(typeName)){

                return  FCDoc.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMRiskType".equals(typeName)){

                return  FEMRiskType.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FMDutyRelation".equals(typeName)){

                return  FMDutyRelation.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "ProductInfoRequest".equals(typeName)){

                return  ProductInfoRequest.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMRiskBrightSpotList".equals(typeName)){

                return  FEMRiskBrightSpotList.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "TransCheckInfo".equals(typeName)){

                return  TransCheckInfo.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMRiskSaleArea".equals(typeName)){

                return  FEMRiskSaleArea.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "ResultDTO".equals(typeName)){

                return  ResultDTO.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FMRisk".equals(typeName)){

                return  FMRisk.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMRiskFactorRela".equals(typeName)){

                return  FEMRiskFactorRela.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEUIInfo".equals(typeName)){

                return  FEUIInfo.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FMRelaDutyCodeList".equals(typeName)){

                return  FMRelaDutyCodeList.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMDutyFactor".equals(typeName)){

                return  FEMDutyFactor.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMDutyAmntPremList".equals(typeName)){

                return  FEMDutyAmntPremList.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "ResponseExtension".equals(typeName)){

                return  ResponseExtension.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FMDuty".equals(typeName)){

                return  FMDuty.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEHealthyInfo".equals(typeName)){

                return  FEHealthyInfo.Factory.parse(reader);


            }


            if (
                    "http://model.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "ProductInfoResponse".equals(typeName)){

                return  ProductInfoResponse.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMRiskFactorList".equals(typeName)){

                return  FEMRiskFactorList.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FERiskAppFactor".equals(typeName)){

                return  FERiskAppFactor.Factory.parse(reader);


            }


            if (
                    "http://pojo.webService.ebusiness.sinosoft.com/xsd".equals(namespaceURI) &&
                            "FEMSearchRelaList".equals(typeName)){

                return  FEMSearchRelaList.Factory.parse(reader);


            }


            throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
        }

    }

    public static class FMDuty
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMDuty
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskType
         */


        protected java.lang.String localERiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskTypeTracker = false ;

        public boolean isERiskTypeSpecified(){
            return localERiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskType(){
            return localERiskType;
        }



        /**
         * Auto generated setter method
         * @param param ERiskType
         */
        public void setERiskType(java.lang.String param){
            localERiskTypeTracker = true;

            this.localERiskType=param;


        }


        /**
         * field for FEMDutyFactor
         */


        protected FEMDutyFactor localFEMDutyFactor ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMDutyFactorTracker = false ;

        public boolean isFEMDutyFactorSpecified(){
            return localFEMDutyFactorTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMDutyFactor
         */
        public  FEMDutyFactor getFEMDutyFactor(){
            return localFEMDutyFactor;
        }



        /**
         * Auto generated setter method
         * @param param FEMDutyFactor
         */
        public void setFEMDutyFactor(FEMDutyFactor param){
            localFEMDutyFactorTracker = true;

            this.localFEMDutyFactor=param;


        }


        /**
         * field for FMRelaDutyCodeList
         * This was an Array!
         */


        protected FMRelaDutyCodeList[] localFMRelaDutyCodeList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFMRelaDutyCodeListTracker = false ;

        public boolean isFMRelaDutyCodeListSpecified(){
            return localFMRelaDutyCodeListTracker;
        }



        /**
         * Auto generated getter method
         * @return FMRelaDutyCodeList[]
         */
        public  FMRelaDutyCodeList[] getFMRelaDutyCodeList(){
            return localFMRelaDutyCodeList;
        }






        /**
         * validate the array for FMRelaDutyCodeList
         */
        protected void validateFMRelaDutyCodeList(FMRelaDutyCodeList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FMRelaDutyCodeList
         */
        public void setFMRelaDutyCodeList(FMRelaDutyCodeList[] param){

            validateFMRelaDutyCodeList(param);

            localFMRelaDutyCodeListTracker = true;

            this.localFMRelaDutyCodeList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FMRelaDutyCodeList
         */
        public void addFMRelaDutyCodeList(FMRelaDutyCodeList param){
            if (localFMRelaDutyCodeList == null){
                localFMRelaDutyCodeList = new FMRelaDutyCodeList[]{};
            }


            //update the setting tracker
            localFMRelaDutyCodeListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFMRelaDutyCodeList);
            list.add(param);
            this.localFMRelaDutyCodeList =
                    (FMRelaDutyCodeList[])list.toArray(
                            new FMRelaDutyCodeList[list.size()]);

        }


        /**
         * field for VPU
         */


        protected double localVPU ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localVPUTracker = false ;

        public boolean isVPUSpecified(){
            return localVPUTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getVPU(){
            return localVPU;
        }



        /**
         * Auto generated setter method
         * @param param VPU
         */
        public void setVPU(double param){

            // setting primitive attribute tracker to true
            localVPUTracker =
                    !java.lang.Double.isNaN(param);

            this.localVPU=param;


        }


        /**
         * field for AcciYear
         */


        protected int localAcciYear ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAcciYearTracker = false ;

        public boolean isAcciYearSpecified(){
            return localAcciYearTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getAcciYear(){
            return localAcciYear;
        }



        /**
         * Auto generated setter method
         * @param param AcciYear
         */
        public void setAcciYear(int param){

            // setting primitive attribute tracker to true
            localAcciYearTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localAcciYear=param;


        }


        /**
         * field for AcciYearFlag
         */


        protected java.lang.String localAcciYearFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAcciYearFlagTracker = false ;

        public boolean isAcciYearFlagSpecified(){
            return localAcciYearFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAcciYearFlag(){
            return localAcciYearFlag;
        }



        /**
         * Auto generated setter method
         * @param param AcciYearFlag
         */
        public void setAcciYearFlag(java.lang.String param){
            localAcciYearFlagTracker = true;

            this.localAcciYearFlag=param;


        }


        /**
         * field for AddFeeFlag
         */


        protected java.lang.String localAddFeeFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAddFeeFlagTracker = false ;

        public boolean isAddFeeFlagSpecified(){
            return localAddFeeFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAddFeeFlag(){
            return localAddFeeFlag;
        }



        /**
         * Auto generated setter method
         * @param param AddFeeFlag
         */
        public void setAddFeeFlag(java.lang.String param){
            localAddFeeFlagTracker = true;

            this.localAddFeeFlag=param;


        }


        /**
         * field for Amnt
         */


        protected double localAmnt ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAmntTracker = false ;

        public boolean isAmntSpecified(){
            return localAmntTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getAmnt(){
            return localAmnt;
        }



        /**
         * Auto generated setter method
         * @param param Amnt
         */
        public void setAmnt(double param){

            // setting primitive attribute tracker to true
            localAmntTracker =
                    !java.lang.Double.isNaN(param);

            this.localAmnt=param;


        }


        /**
         * field for AmntFlag
         */


        protected java.lang.String localAmntFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAmntFlagTracker = false ;

        public boolean isAmntFlagSpecified(){
            return localAmntFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAmntFlag(){
            return localAmntFlag;
        }



        /**
         * Auto generated setter method
         * @param param AmntFlag
         */
        public void setAmntFlag(java.lang.String param){
            localAmntFlagTracker = true;

            this.localAmntFlag=param;


        }


        /**
         * field for AppType
         */


        protected java.lang.String localAppType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppTypeTracker = false ;

        public boolean isAppTypeSpecified(){
            return localAppTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppType(){
            return localAppType;
        }



        /**
         * Auto generated setter method
         * @param param AppType
         */
        public void setAppType(java.lang.String param){
            localAppTypeTracker = true;

            this.localAppType=param;


        }


        /**
         * field for BasicCalCode
         */


        protected java.lang.String localBasicCalCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBasicCalCodeTracker = false ;

        public boolean isBasicCalCodeSpecified(){
            return localBasicCalCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBasicCalCode(){
            return localBasicCalCode;
        }



        /**
         * Auto generated setter method
         * @param param BasicCalCode
         */
        public void setBasicCalCode(java.lang.String param){
            localBasicCalCodeTracker = true;

            this.localBasicCalCode=param;


        }


        /**
         * field for CalMode
         */


        protected java.lang.String localCalMode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCalModeTracker = false ;

        public boolean isCalModeSpecified(){
            return localCalModeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCalMode(){
            return localCalMode;
        }



        /**
         * Auto generated setter method
         * @param param CalMode
         */
        public void setCalMode(java.lang.String param){
            localCalModeTracker = true;

            this.localCalMode=param;


        }


        /**
         * field for ControlRate
         */


        protected java.lang.String localControlRate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localControlRateTracker = false ;

        public boolean isControlRateSpecified(){
            return localControlRateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getControlRate(){
            return localControlRate;
        }



        /**
         * Auto generated setter method
         * @param param ControlRate
         */
        public void setControlRate(java.lang.String param){
            localControlRateTracker = true;

            this.localControlRate=param;


        }


        /**
         * field for Currency
         */


        protected java.lang.String localCurrency ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCurrencyTracker = false ;

        public boolean isCurrencySpecified(){
            return localCurrencyTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCurrency(){
            return localCurrency;
        }



        /**
         * Auto generated setter method
         * @param param Currency
         */
        public void setCurrency(java.lang.String param){
            localCurrencyTracker = true;

            this.localCurrency=param;


        }


        /**
         * field for Define
         */


        protected java.lang.String localDefine ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDefineTracker = false ;

        public boolean isDefineSpecified(){
            return localDefineTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDefine(){
            return localDefine;
        }



        /**
         * Auto generated setter method
         * @param param Define
         */
        public void setDefine(java.lang.String param){
            localDefineTracker = true;

            this.localDefine=param;


        }


        /**
         * field for DutyCode
         */


        protected java.lang.String localDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyCodeTracker = false ;

        public boolean isDutyCodeSpecified(){
            return localDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyCode(){
            return localDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param DutyCode
         */
        public void setDutyCode(java.lang.String param){
            localDutyCodeTracker = true;

            this.localDutyCode=param;


        }


        /**
         * field for DutyDesc
         */


        protected java.lang.String localDutyDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyDescTracker = false ;

        public boolean isDutyDescSpecified(){
            return localDutyDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyDesc(){
            return localDutyDesc;
        }



        /**
         * Auto generated setter method
         * @param param DutyDesc
         */
        public void setDutyDesc(java.lang.String param){
            localDutyDescTracker = true;

            this.localDutyDesc=param;


        }


        /**
         * field for DutyEnName
         */


        protected java.lang.String localDutyEnName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyEnNameTracker = false ;

        public boolean isDutyEnNameSpecified(){
            return localDutyEnNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyEnName(){
            return localDutyEnName;
        }



        /**
         * Auto generated setter method
         * @param param DutyEnName
         */
        public void setDutyEnName(java.lang.String param){
            localDutyEnNameTracker = true;

            this.localDutyEnName=param;


        }


        /**
         * field for DutyFullName
         */


        protected java.lang.String localDutyFullName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFullNameTracker = false ;

        public boolean isDutyFullNameSpecified(){
            return localDutyFullNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFullName(){
            return localDutyFullName;
        }



        /**
         * Auto generated setter method
         * @param param DutyFullName
         */
        public void setDutyFullName(java.lang.String param){
            localDutyFullNameTracker = true;

            this.localDutyFullName=param;


        }


        /**
         * field for DutyLibCode
         */


        protected java.lang.String localDutyLibCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyLibCodeTracker = false ;

        public boolean isDutyLibCodeSpecified(){
            return localDutyLibCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyLibCode(){
            return localDutyLibCode;
        }



        /**
         * Auto generated setter method
         * @param param DutyLibCode
         */
        public void setDutyLibCode(java.lang.String param){
            localDutyLibCodeTracker = true;

            this.localDutyLibCode=param;


        }


        /**
         * field for DutyName
         */


        protected java.lang.String localDutyName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyNameTracker = false ;

        public boolean isDutyNameSpecified(){
            return localDutyNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyName(){
            return localDutyName;
        }



        /**
         * Auto generated setter method
         * @param param DutyName
         */
        public void setDutyName(java.lang.String param){
            localDutyNameTracker = true;

            this.localDutyName=param;


        }


        /**
         * field for DutyNameP
         */


        protected java.lang.String localDutyNameP ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyNamePTracker = false ;

        public boolean isDutyNamePSpecified(){
            return localDutyNamePTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyNameP(){
            return localDutyNameP;
        }



        /**
         * Auto generated setter method
         * @param param DutyNameP
         */
        public void setDutyNameP(java.lang.String param){
            localDutyNamePTracker = true;

            this.localDutyNameP=param;


        }


        /**
         * field for DutyType
         */


        protected java.lang.String localDutyType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyTypeTracker = false ;

        public boolean isDutyTypeSpecified(){
            return localDutyTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyType(){
            return localDutyType;
        }



        /**
         * Auto generated setter method
         * @param param DutyType
         */
        public void setDutyType(java.lang.String param){
            localDutyTypeTracker = true;

            this.localDutyType=param;


        }


        /**
         * field for DutyTypeP
         */


        protected java.lang.String localDutyTypeP ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyTypePTracker = false ;

        public boolean isDutyTypePSpecified(){
            return localDutyTypePTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyTypeP(){
            return localDutyTypeP;
        }



        /**
         * Auto generated setter method
         * @param param DutyTypeP
         */
        public void setDutyTypeP(java.lang.String param){
            localDutyTypePTracker = true;

            this.localDutyTypeP=param;


        }


        /**
         * field for EnDefine
         */


        protected java.lang.String localEnDefine ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localEnDefineTracker = false ;

        public boolean isEnDefineSpecified(){
            return localEnDefineTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getEnDefine(){
            return localEnDefine;
        }



        /**
         * Auto generated setter method
         * @param param EnDefine
         */
        public void setEnDefine(java.lang.String param){
            localEnDefineTracker = true;

            this.localEnDefine=param;


        }


        /**
         * field for GetYear
         */


        protected int localGetYear ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localGetYearTracker = false ;

        public boolean isGetYearSpecified(){
            return localGetYearTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getGetYear(){
            return localGetYear;
        }



        /**
         * Auto generated setter method
         * @param param GetYear
         */
        public void setGetYear(int param){

            // setting primitive attribute tracker to true
            localGetYearTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localGetYear=param;


        }


        /**
         * field for GetYearFlag
         */


        protected java.lang.String localGetYearFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localGetYearFlagTracker = false ;

        public boolean isGetYearFlagSpecified(){
            return localGetYearFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getGetYearFlag(){
            return localGetYearFlag;
        }



        /**
         * Auto generated setter method
         * @param param GetYearFlag
         */
        public void setGetYearFlag(java.lang.String param){
            localGetYearFlagTracker = true;

            this.localGetYearFlag=param;


        }


        /**
         * field for GetYearRela
         */


        protected java.lang.String localGetYearRela ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localGetYearRelaTracker = false ;

        public boolean isGetYearRelaSpecified(){
            return localGetYearRelaTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getGetYearRela(){
            return localGetYearRela;
        }



        /**
         * Auto generated setter method
         * @param param GetYearRela
         */
        public void setGetYearRela(java.lang.String param){
            localGetYearRelaTracker = true;

            this.localGetYearRela=param;


        }


        /**
         * field for InsuYear
         */


        protected int localInsuYear ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localInsuYearTracker = false ;

        public boolean isInsuYearSpecified(){
            return localInsuYearTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getInsuYear(){
            return localInsuYear;
        }



        /**
         * Auto generated setter method
         * @param param InsuYear
         */
        public void setInsuYear(int param){

            // setting primitive attribute tracker to true
            localInsuYearTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localInsuYear=param;


        }


        /**
         * field for InsuYearFlag
         */


        protected java.lang.String localInsuYearFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localInsuYearFlagTracker = false ;

        public boolean isInsuYearFlagSpecified(){
            return localInsuYearFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getInsuYearFlag(){
            return localInsuYearFlag;
        }



        /**
         * Auto generated setter method
         * @param param InsuYearFlag
         */
        public void setInsuYearFlag(java.lang.String param){
            localInsuYearFlagTracker = true;

            this.localInsuYearFlag=param;


        }


        /**
         * field for InsuYearRela
         */


        protected java.lang.String localInsuYearRela ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localInsuYearRelaTracker = false ;

        public boolean isInsuYearRelaSpecified(){
            return localInsuYearRelaTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getInsuYearRela(){
            return localInsuYearRela;
        }



        /**
         * Auto generated setter method
         * @param param InsuYearRela
         */
        public void setInsuYearRela(java.lang.String param){
            localInsuYearRelaTracker = true;

            this.localInsuYearRela=param;


        }


        /**
         * field for IsDisplay
         */


        protected java.lang.String localIsDisplay ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDisplayTracker = false ;

        public boolean isIsDisplaySpecified(){
            return localIsDisplayTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDisplay(){
            return localIsDisplay;
        }



        /**
         * Auto generated setter method
         * @param param IsDisplay
         */
        public void setIsDisplay(java.lang.String param){
            localIsDisplayTracker = true;

            this.localIsDisplay=param;


        }


        /**
         * field for IsRelaOtherDuty
         */


        protected java.lang.String localIsRelaOtherDuty ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsRelaOtherDutyTracker = false ;

        public boolean isIsRelaOtherDutySpecified(){
            return localIsRelaOtherDutyTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsRelaOtherDuty(){
            return localIsRelaOtherDuty;
        }



        /**
         * Auto generated setter method
         * @param param IsRelaOtherDuty
         */
        public void setIsRelaOtherDuty(java.lang.String param){
            localIsRelaOtherDutyTracker = true;

            this.localIsRelaOtherDuty=param;


        }


        /**
         * field for IsTemplate
         */


        protected java.lang.String localIsTemplate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsTemplateTracker = false ;

        public boolean isIsTemplateSpecified(){
            return localIsTemplateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsTemplate(){
            return localIsTemplate;
        }



        /**
         * Auto generated setter method
         * @param param IsTemplate
         */
        public void setIsTemplate(java.lang.String param){
            localIsTemplateTracker = true;

            this.localIsTemplate=param;


        }


        /**
         * field for PayEndDateCalMode
         */


        protected java.lang.String localPayEndDateCalMode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayEndDateCalModeTracker = false ;

        public boolean isPayEndDateCalModeSpecified(){
            return localPayEndDateCalModeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayEndDateCalMode(){
            return localPayEndDateCalMode;
        }



        /**
         * Auto generated setter method
         * @param param PayEndDateCalMode
         */
        public void setPayEndDateCalMode(java.lang.String param){
            localPayEndDateCalModeTracker = true;

            this.localPayEndDateCalMode=param;


        }


        /**
         * field for PayEndDateCalRef
         */


        protected java.lang.String localPayEndDateCalRef ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayEndDateCalRefTracker = false ;

        public boolean isPayEndDateCalRefSpecified(){
            return localPayEndDateCalRefTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayEndDateCalRef(){
            return localPayEndDateCalRef;
        }



        /**
         * Auto generated setter method
         * @param param PayEndDateCalRef
         */
        public void setPayEndDateCalRef(java.lang.String param){
            localPayEndDateCalRefTracker = true;

            this.localPayEndDateCalRef=param;


        }


        /**
         * field for PayEndYear
         */


        protected int localPayEndYear ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayEndYearTracker = false ;

        public boolean isPayEndYearSpecified(){
            return localPayEndYearTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getPayEndYear(){
            return localPayEndYear;
        }



        /**
         * Auto generated setter method
         * @param param PayEndYear
         */
        public void setPayEndYear(int param){

            // setting primitive attribute tracker to true
            localPayEndYearTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localPayEndYear=param;


        }


        /**
         * field for PayEndYearFlag
         */


        protected java.lang.String localPayEndYearFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayEndYearFlagTracker = false ;

        public boolean isPayEndYearFlagSpecified(){
            return localPayEndYearFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayEndYearFlag(){
            return localPayEndYearFlag;
        }



        /**
         * Auto generated setter method
         * @param param PayEndYearFlag
         */
        public void setPayEndYearFlag(java.lang.String param){
            localPayEndYearFlagTracker = true;

            this.localPayEndYearFlag=param;


        }


        /**
         * field for PayEndYearRela
         */


        protected java.lang.String localPayEndYearRela ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayEndYearRelaTracker = false ;

        public boolean isPayEndYearRelaSpecified(){
            return localPayEndYearRelaTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayEndYearRela(){
            return localPayEndYearRela;
        }



        /**
         * Auto generated setter method
         * @param param PayEndYearRela
         */
        public void setPayEndYearRela(java.lang.String param){
            localPayEndYearRelaTracker = true;

            this.localPayEndYearRela=param;


        }


        /**
         * field for PayFree
         */


        protected double localPayFree ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayFreeTracker = false ;

        public boolean isPayFreeSpecified(){
            return localPayFreeTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getPayFree(){
            return localPayFree;
        }



        /**
         * Auto generated setter method
         * @param param PayFree
         */
        public void setPayFree(double param){

            // setting primitive attribute tracker to true
            localPayFreeTracker =
                    !java.lang.Double.isNaN(param);

            this.localPayFree=param;


        }


        /**
         * field for Prem
         */


        protected double localPrem ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPremTracker = false ;

        public boolean isPremSpecified(){
            return localPremTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getPrem(){
            return localPrem;
        }



        /**
         * Auto generated setter method
         * @param param Prem
         */
        public void setPrem(double param){

            // setting primitive attribute tracker to true
            localPremTracker =
                    !java.lang.Double.isNaN(param);

            this.localPrem=param;


        }


        /**
         * field for PremRate
         */


        protected double localPremRate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPremRateTracker = false ;

        public boolean isPremRateSpecified(){
            return localPremRateTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getPremRate(){
            return localPremRate;
        }



        /**
         * Auto generated setter method
         * @param param PremRate
         */
        public void setPremRate(double param){

            // setting primitive attribute tracker to true
            localPremRateTracker =
                    !java.lang.Double.isNaN(param);

            this.localPremRate=param;


        }


        /**
         * field for RiskCalCode
         */


        protected java.lang.String localRiskCalCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCalCodeTracker = false ;

        public boolean isRiskCalCodeSpecified(){
            return localRiskCalCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCalCode(){
            return localRiskCalCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCalCode
         */
        public void setRiskCalCode(java.lang.String param){
            localRiskCalCodeTracker = true;

            this.localRiskCalCode=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }


        /**
         * field for ShowOrder
         */


        protected java.lang.String localShowOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowOrderTracker = false ;

        public boolean isShowOrderSpecified(){
            return localShowOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowOrder(){
            return localShowOrder;
        }



        /**
         * Auto generated setter method
         * @param param ShowOrder
         */
        public void setShowOrder(java.lang.String param){
            localShowOrderTracker = true;

            this.localShowOrder=param;


        }


        /**
         * field for SupplierDutyCode
         */


        protected java.lang.String localSupplierDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupplierDutyCodeTracker = false ;

        public boolean isSupplierDutyCodeSpecified(){
            return localSupplierDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupplierDutyCode(){
            return localSupplierDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param SupplierDutyCode
         */
        public void setSupplierDutyCode(java.lang.String param){
            localSupplierDutyCodeTracker = true;

            this.localSupplierDutyCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FMDuty",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FMDuty",
                            xmlWriter);
                }


            }
            if (localERiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskType", xmlWriter);


                if (localERiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskType);

                }

                xmlWriter.writeEndElement();
            } if (localFEMDutyFactorTracker){
                if (localFEMDutyFactor==null){

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMDutyFactor", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localFEMDutyFactor.serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMDutyFactor"),
                            xmlWriter);
                }
            } if (localFMRelaDutyCodeListTracker){
                if (localFMRelaDutyCodeList!=null){
                    for (int i = 0;i < localFMRelaDutyCodeList.length;i++){
                        if (localFMRelaDutyCodeList[i] != null){
                            localFMRelaDutyCodeList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMRelaDutyCodeList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMRelaDutyCodeList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FMRelaDutyCodeList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localVPUTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "VPU", xmlWriter);

                if (java.lang.Double.isNaN(localVPU)) {

                    throw new org.apache.axis2.databinding.ADBException("VPU cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVPU));
                }

                xmlWriter.writeEndElement();
            } if (localAcciYearTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "acciYear", xmlWriter);

                if (localAcciYear==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("acciYear cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcciYear));
                }

                xmlWriter.writeEndElement();
            } if (localAcciYearFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "acciYearFlag", xmlWriter);


                if (localAcciYearFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAcciYearFlag);

                }

                xmlWriter.writeEndElement();
            } if (localAddFeeFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "addFeeFlag", xmlWriter);


                if (localAddFeeFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAddFeeFlag);

                }

                xmlWriter.writeEndElement();
            } if (localAmntTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "amnt", xmlWriter);

                if (java.lang.Double.isNaN(localAmnt)) {

                    throw new org.apache.axis2.databinding.ADBException("amnt cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmnt));
                }

                xmlWriter.writeEndElement();
            } if (localAmntFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "amntFlag", xmlWriter);


                if (localAmntFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAmntFlag);

                }

                xmlWriter.writeEndElement();
            } if (localAppTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appType", xmlWriter);


                if (localAppType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppType);

                }

                xmlWriter.writeEndElement();
            } if (localBasicCalCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "basicCalCode", xmlWriter);


                if (localBasicCalCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBasicCalCode);

                }

                xmlWriter.writeEndElement();
            } if (localCalModeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "calMode", xmlWriter);


                if (localCalMode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCalMode);

                }

                xmlWriter.writeEndElement();
            } if (localControlRateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "controlRate", xmlWriter);


                if (localControlRate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localControlRate);

                }

                xmlWriter.writeEndElement();
            } if (localCurrencyTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "currency", xmlWriter);


                if (localCurrency==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCurrency);

                }

                xmlWriter.writeEndElement();
            } if (localDefineTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "define", xmlWriter);


                if (localDefine==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDefine);

                }

                xmlWriter.writeEndElement();
            } if (localDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyCode", xmlWriter);


                if (localDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyCode);

                }

                xmlWriter.writeEndElement();
            } if (localDutyDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyDesc", xmlWriter);


                if (localDutyDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyDesc);

                }

                xmlWriter.writeEndElement();
            } if (localDutyEnNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyEnName", xmlWriter);


                if (localDutyEnName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyEnName);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFullNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFullName", xmlWriter);


                if (localDutyFullName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFullName);

                }

                xmlWriter.writeEndElement();
            } if (localDutyLibCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyLibCode", xmlWriter);


                if (localDutyLibCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyLibCode);

                }

                xmlWriter.writeEndElement();
            } if (localDutyNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyName", xmlWriter);


                if (localDutyName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyName);

                }

                xmlWriter.writeEndElement();
            } if (localDutyNamePTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyNameP", xmlWriter);


                if (localDutyNameP==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyNameP);

                }

                xmlWriter.writeEndElement();
            } if (localDutyTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyType", xmlWriter);


                if (localDutyType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyType);

                }

                xmlWriter.writeEndElement();
            } if (localDutyTypePTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyTypeP", xmlWriter);


                if (localDutyTypeP==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyTypeP);

                }

                xmlWriter.writeEndElement();
            } if (localEnDefineTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "enDefine", xmlWriter);


                if (localEnDefine==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localEnDefine);

                }

                xmlWriter.writeEndElement();
            } if (localGetYearTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "getYear", xmlWriter);

                if (localGetYear==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("getYear cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetYear));
                }

                xmlWriter.writeEndElement();
            } if (localGetYearFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "getYearFlag", xmlWriter);


                if (localGetYearFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localGetYearFlag);

                }

                xmlWriter.writeEndElement();
            } if (localGetYearRelaTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "getYearRela", xmlWriter);


                if (localGetYearRela==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localGetYearRela);

                }

                xmlWriter.writeEndElement();
            } if (localInsuYearTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "insuYear", xmlWriter);

                if (localInsuYear==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("insuYear cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuYear));
                }

                xmlWriter.writeEndElement();
            } if (localInsuYearFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "insuYearFlag", xmlWriter);


                if (localInsuYearFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localInsuYearFlag);

                }

                xmlWriter.writeEndElement();
            } if (localInsuYearRelaTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "insuYearRela", xmlWriter);


                if (localInsuYearRela==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localInsuYearRela);

                }

                xmlWriter.writeEndElement();
            } if (localIsDisplayTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDisplay", xmlWriter);


                if (localIsDisplay==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDisplay);

                }

                xmlWriter.writeEndElement();
            } if (localIsRelaOtherDutyTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isRelaOtherDuty", xmlWriter);


                if (localIsRelaOtherDuty==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsRelaOtherDuty);

                }

                xmlWriter.writeEndElement();
            } if (localIsTemplateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isTemplate", xmlWriter);


                if (localIsTemplate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsTemplate);

                }

                xmlWriter.writeEndElement();
            } if (localPayEndDateCalModeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payEndDateCalMode", xmlWriter);


                if (localPayEndDateCalMode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayEndDateCalMode);

                }

                xmlWriter.writeEndElement();
            } if (localPayEndDateCalRefTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payEndDateCalRef", xmlWriter);


                if (localPayEndDateCalRef==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayEndDateCalRef);

                }

                xmlWriter.writeEndElement();
            } if (localPayEndYearTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payEndYear", xmlWriter);

                if (localPayEndYear==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("payEndYear cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndYear));
                }

                xmlWriter.writeEndElement();
            } if (localPayEndYearFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payEndYearFlag", xmlWriter);


                if (localPayEndYearFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayEndYearFlag);

                }

                xmlWriter.writeEndElement();
            } if (localPayEndYearRelaTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payEndYearRela", xmlWriter);


                if (localPayEndYearRela==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayEndYearRela);

                }

                xmlWriter.writeEndElement();
            } if (localPayFreeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payFree", xmlWriter);

                if (java.lang.Double.isNaN(localPayFree)) {

                    throw new org.apache.axis2.databinding.ADBException("payFree cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayFree));
                }

                xmlWriter.writeEndElement();
            } if (localPremTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "prem", xmlWriter);

                if (java.lang.Double.isNaN(localPrem)) {

                    throw new org.apache.axis2.databinding.ADBException("prem cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrem));
                }

                xmlWriter.writeEndElement();
            } if (localPremRateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "premRate", xmlWriter);

                if (java.lang.Double.isNaN(localPremRate)) {

                    throw new org.apache.axis2.databinding.ADBException("premRate cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPremRate));
                }

                xmlWriter.writeEndElement();
            } if (localRiskCalCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCalCode", xmlWriter);


                if (localRiskCalCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCalCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            } if (localShowOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showOrder", xmlWriter);


                if (localShowOrder==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowOrder);

                }

                xmlWriter.writeEndElement();
            } if (localSupplierDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supplierDutyCode", xmlWriter);


                if (localSupplierDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupplierDutyCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskType"));

                elementList.add(localERiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskType));
            } if (localFEMDutyFactorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "FEMDutyFactor"));


                elementList.add(localFEMDutyFactor==null?null:
                        localFEMDutyFactor);
            } if (localFMRelaDutyCodeListTracker){
                if (localFMRelaDutyCodeList!=null) {
                    for (int i = 0;i < localFMRelaDutyCodeList.length;i++){

                        if (localFMRelaDutyCodeList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMRelaDutyCodeList"));
                            elementList.add(localFMRelaDutyCodeList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FMRelaDutyCodeList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FMRelaDutyCodeList"));
                    elementList.add(localFMRelaDutyCodeList);

                }

            } if (localVPUTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "VPU"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVPU));
            } if (localAcciYearTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "acciYear"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcciYear));
            } if (localAcciYearFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "acciYearFlag"));

                elementList.add(localAcciYearFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcciYearFlag));
            } if (localAddFeeFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "addFeeFlag"));

                elementList.add(localAddFeeFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddFeeFlag));
            } if (localAmntTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "amnt"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmnt));
            } if (localAmntFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "amntFlag"));

                elementList.add(localAmntFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmntFlag));
            } if (localAppTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appType"));

                elementList.add(localAppType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppType));
            } if (localBasicCalCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "basicCalCode"));

                elementList.add(localBasicCalCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBasicCalCode));
            } if (localCalModeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "calMode"));

                elementList.add(localCalMode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalMode));
            } if (localControlRateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "controlRate"));

                elementList.add(localControlRate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localControlRate));
            } if (localCurrencyTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "currency"));

                elementList.add(localCurrency==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrency));
            } if (localDefineTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "define"));

                elementList.add(localDefine==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDefine));
            } if (localDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyCode"));

                elementList.add(localDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyCode));
            } if (localDutyDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyDesc"));

                elementList.add(localDutyDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyDesc));
            } if (localDutyEnNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyEnName"));

                elementList.add(localDutyEnName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyEnName));
            } if (localDutyFullNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFullName"));

                elementList.add(localDutyFullName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFullName));
            } if (localDutyLibCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyLibCode"));

                elementList.add(localDutyLibCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyLibCode));
            } if (localDutyNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyName"));

                elementList.add(localDutyName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyName));
            } if (localDutyNamePTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyNameP"));

                elementList.add(localDutyNameP==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyNameP));
            } if (localDutyTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyType"));

                elementList.add(localDutyType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyType));
            } if (localDutyTypePTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyTypeP"));

                elementList.add(localDutyTypeP==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyTypeP));
            } if (localEnDefineTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "enDefine"));

                elementList.add(localEnDefine==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEnDefine));
            } if (localGetYearTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "getYear"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetYear));
            } if (localGetYearFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "getYearFlag"));

                elementList.add(localGetYearFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetYearFlag));
            } if (localGetYearRelaTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "getYearRela"));

                elementList.add(localGetYearRela==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetYearRela));
            } if (localInsuYearTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "insuYear"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuYear));
            } if (localInsuYearFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "insuYearFlag"));

                elementList.add(localInsuYearFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuYearFlag));
            } if (localInsuYearRelaTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "insuYearRela"));

                elementList.add(localInsuYearRela==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuYearRela));
            } if (localIsDisplayTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDisplay"));

                elementList.add(localIsDisplay==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDisplay));
            } if (localIsRelaOtherDutyTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isRelaOtherDuty"));

                elementList.add(localIsRelaOtherDuty==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsRelaOtherDuty));
            } if (localIsTemplateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isTemplate"));

                elementList.add(localIsTemplate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsTemplate));
            } if (localPayEndDateCalModeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payEndDateCalMode"));

                elementList.add(localPayEndDateCalMode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndDateCalMode));
            } if (localPayEndDateCalRefTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payEndDateCalRef"));

                elementList.add(localPayEndDateCalRef==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndDateCalRef));
            } if (localPayEndYearTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payEndYear"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndYear));
            } if (localPayEndYearFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payEndYearFlag"));

                elementList.add(localPayEndYearFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndYearFlag));
            } if (localPayEndYearRelaTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payEndYearRela"));

                elementList.add(localPayEndYearRela==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayEndYearRela));
            } if (localPayFreeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payFree"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayFree));
            } if (localPremTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "prem"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrem));
            } if (localPremRateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "premRate"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPremRate));
            } if (localRiskCalCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCalCode"));

                elementList.add(localRiskCalCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCalCode));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            } if (localShowOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showOrder"));

                elementList.add(localShowOrder==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowOrder));
            } if (localSupplierDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "supplierDutyCode"));

                elementList.add(localSupplierDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierDutyCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FMDuty parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FMDuty object =
                        new FMDuty();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FMDuty".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMDuty)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list3 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMDutyFactor").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setFEMDutyFactor(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setFEMDutyFactor(FEMDutyFactor.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMRelaDutyCodeList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list3.add(null);
                            reader.next();
                        } else {
                            list3.add(FMRelaDutyCodeList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone3 = false;
                        while(!loopDone3){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone3 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FMRelaDutyCodeList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list3.add(null);
                                        reader.next();
                                    } else {
                                        list3.add(FMRelaDutyCodeList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone3 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFMRelaDutyCodeList((FMRelaDutyCodeList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FMRelaDutyCodeList.class,
                                        list3));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","VPU").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setVPU(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setVPU(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","acciYear").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setAcciYear(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setAcciYear(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","acciYearFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAcciYearFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","addFeeFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAddFeeFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","amnt").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setAmnt(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setAmnt(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","amntFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAmntFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","basicCalCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBasicCalCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","calMode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCalMode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","controlRate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setControlRate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","currency").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCurrency(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","define").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDefine(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyEnName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyEnName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFullName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFullName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyLibCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyLibCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyNameP").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyNameP(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyTypeP").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyTypeP(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","enDefine").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setEnDefine(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","getYear").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setGetYear(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setGetYear(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","getYearFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setGetYearFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","getYearRela").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setGetYearRela(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","insuYear").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setInsuYear(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setInsuYear(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","insuYearFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setInsuYearFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","insuYearRela").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setInsuYearRela(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDisplay").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDisplay(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isRelaOtherDuty").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsRelaOtherDuty(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isTemplate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsTemplate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payEndDateCalMode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayEndDateCalMode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payEndDateCalRef").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayEndDateCalRef(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payEndYear").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setPayEndYear(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setPayEndYear(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payEndYearFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayEndYearFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payEndYearRela").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayEndYearRela(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payFree").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setPayFree(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setPayFree(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","prem").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setPrem(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setPrem(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","premRate").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setPremRate(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setPremRate(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCalCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCalCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showOrder").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowOrder(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","supplierDutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupplierDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEHealthyInfo
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEHealthyInfo
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for UIInfoID
         */


        protected java.lang.String localUIInfoID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoIDTracker = false ;

        public boolean isUIInfoIDSpecified(){
            return localUIInfoIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfoID(){
            return localUIInfoID;
        }



        /**
         * Auto generated setter method
         * @param param UIInfoID
         */
        public void setUIInfoID(java.lang.String param){
            localUIInfoIDTracker = true;

            this.localUIInfoID=param;


        }


        /**
         * field for UIInfoValueID
         */


        protected java.lang.String localUIInfoValueID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoValueIDTracker = false ;

        public boolean isUIInfoValueIDSpecified(){
            return localUIInfoValueIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfoValueID(){
            return localUIInfoValueID;
        }



        /**
         * Auto generated setter method
         * @param param UIInfoValueID
         */
        public void setUIInfoValueID(java.lang.String param){
            localUIInfoValueIDTracker = true;

            this.localUIInfoValueID=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for BackUp3
         */


        protected java.lang.String localBackUp3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp3Tracker = false ;

        public boolean isBackUp3Specified(){
            return localBackUp3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp3(){
            return localBackUp3;
        }



        /**
         * Auto generated setter method
         * @param param BackUp3
         */
        public void setBackUp3(java.lang.String param){
            localBackUp3Tracker = true;

            this.localBackUp3=param;


        }


        /**
         * field for BackUp4
         */


        protected java.lang.String localBackUp4 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp4Tracker = false ;

        public boolean isBackUp4Specified(){
            return localBackUp4Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp4(){
            return localBackUp4;
        }



        /**
         * Auto generated setter method
         * @param param BackUp4
         */
        public void setBackUp4(java.lang.String param){
            localBackUp4Tracker = true;

            this.localBackUp4=param;


        }


        /**
         * field for HealthyID
         */


        protected java.lang.String localHealthyID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localHealthyIDTracker = false ;

        public boolean isHealthyIDSpecified(){
            return localHealthyIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getHealthyID(){
            return localHealthyID;
        }



        /**
         * Auto generated setter method
         * @param param HealthyID
         */
        public void setHealthyID(java.lang.String param){
            localHealthyIDTracker = true;

            this.localHealthyID=param;


        }


        /**
         * field for HealthyInfo
         */


        protected java.lang.String localHealthyInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localHealthyInfoTracker = false ;

        public boolean isHealthyInfoSpecified(){
            return localHealthyInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getHealthyInfo(){
            return localHealthyInfo;
        }



        /**
         * Auto generated setter method
         * @param param HealthyInfo
         */
        public void setHealthyInfo(java.lang.String param){
            localHealthyInfoTracker = true;

            this.localHealthyInfo=param;


        }


        /**
         * field for HealthyType
         */


        protected java.lang.String localHealthyType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localHealthyTypeTracker = false ;

        public boolean isHealthyTypeSpecified(){
            return localHealthyTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getHealthyType(){
            return localHealthyType;
        }



        /**
         * Auto generated setter method
         * @param param HealthyType
         */
        public void setHealthyType(java.lang.String param){
            localHealthyTypeTracker = true;

            this.localHealthyType=param;


        }


        /**
         * field for IsVerify
         */


        protected java.lang.String localIsVerify ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsVerifyTracker = false ;

        public boolean isIsVerifySpecified(){
            return localIsVerifyTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsVerify(){
            return localIsVerify;
        }



        /**
         * Auto generated setter method
         * @param param IsVerify
         */
        public void setIsVerify(java.lang.String param){
            localIsVerifyTracker = true;

            this.localIsVerify=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEHealthyInfo",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEHealthyInfo",
                            xmlWriter);
                }


            }
            if (localUIInfoIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfoID", xmlWriter);


                if (localUIInfoID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfoID);

                }

                xmlWriter.writeEndElement();
            } if (localUIInfoValueIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfoValueID", xmlWriter);


                if (localUIInfoValueID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfoValueID);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp3", xmlWriter);


                if (localBackUp3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp4Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp4", xmlWriter);


                if (localBackUp4==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp4);

                }

                xmlWriter.writeEndElement();
            } if (localHealthyIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "healthyID", xmlWriter);


                if (localHealthyID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localHealthyID);

                }

                xmlWriter.writeEndElement();
            } if (localHealthyInfoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "healthyInfo", xmlWriter);


                if (localHealthyInfo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localHealthyInfo);

                }

                xmlWriter.writeEndElement();
            } if (localHealthyTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "healthyType", xmlWriter);


                if (localHealthyType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localHealthyType);

                }

                xmlWriter.writeEndElement();
            } if (localIsVerifyTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isVerify", xmlWriter);


                if (localIsVerify==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsVerify);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localUIInfoIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfoID"));

                elementList.add(localUIInfoID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfoID));
            } if (localUIInfoValueIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfoValueID"));

                elementList.add(localUIInfoValueID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfoValueID));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localBackUp3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp3"));

                elementList.add(localBackUp3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp3));
            } if (localBackUp4Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp4"));

                elementList.add(localBackUp4==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp4));
            } if (localHealthyIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "healthyID"));

                elementList.add(localHealthyID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHealthyID));
            } if (localHealthyInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "healthyInfo"));

                elementList.add(localHealthyInfo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHealthyInfo));
            } if (localHealthyTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "healthyType"));

                elementList.add(localHealthyType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHealthyType));
            } if (localIsVerifyTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isVerify"));

                elementList.add(localIsVerify==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsVerify));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEHealthyInfo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEHealthyInfo object =
                        new FEHealthyInfo();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEHealthyInfo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEHealthyInfo)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfoID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfoID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfoValueID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfoValueID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp4").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp4(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","healthyID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setHealthyID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","healthyInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setHealthyInfo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","healthyType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setHealthyType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isVerify").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsVerify(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FERiskAppFactor
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FERiskAppFactor
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for FEMRiskBrightSpotList
         * This was an Array!
         */


        protected FEMRiskBrightSpotList[] localFEMRiskBrightSpotList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskBrightSpotListTracker = false ;

        public boolean isFEMRiskBrightSpotListSpecified(){
            return localFEMRiskBrightSpotListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskBrightSpotList[]
         */
        public  FEMRiskBrightSpotList[] getFEMRiskBrightSpotList(){
            return localFEMRiskBrightSpotList;
        }






        /**
         * validate the array for FEMRiskBrightSpotList
         */
        protected void validateFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskBrightSpotList
         */
        public void setFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

            validateFEMRiskBrightSpotList(param);

            localFEMRiskBrightSpotListTracker = true;

            this.localFEMRiskBrightSpotList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskBrightSpotList
         */
        public void addFEMRiskBrightSpotList(FEMRiskBrightSpotList param){
            if (localFEMRiskBrightSpotList == null){
                localFEMRiskBrightSpotList = new FEMRiskBrightSpotList[]{};
            }


            //update the setting tracker
            localFEMRiskBrightSpotListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskBrightSpotList);
            list.add(param);
            this.localFEMRiskBrightSpotList =
                    (FEMRiskBrightSpotList[])list.toArray(
                            new FEMRiskBrightSpotList[list.size()]);

        }


        /**
         * field for FEMRiskFactorList
         * This was an Array!
         */


        protected FEMRiskFactorList[] localFEMRiskFactorList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskFactorListTracker = false ;

        public boolean isFEMRiskFactorListSpecified(){
            return localFEMRiskFactorListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskFactorList[]
         */
        public  FEMRiskFactorList[] getFEMRiskFactorList(){
            return localFEMRiskFactorList;
        }






        /**
         * validate the array for FEMRiskFactorList
         */
        protected void validateFEMRiskFactorList(FEMRiskFactorList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskFactorList
         */
        public void setFEMRiskFactorList(FEMRiskFactorList[] param){

            validateFEMRiskFactorList(param);

            localFEMRiskFactorListTracker = true;

            this.localFEMRiskFactorList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskFactorList
         */
        public void addFEMRiskFactorList(FEMRiskFactorList param){
            if (localFEMRiskFactorList == null){
                localFEMRiskFactorList = new FEMRiskFactorList[]{};
            }


            //update the setting tracker
            localFEMRiskFactorListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskFactorList);
            list.add(param);
            this.localFEMRiskFactorList =
                    (FEMRiskFactorList[])list.toArray(
                            new FEMRiskFactorList[list.size()]);

        }


        /**
         * field for AppFactorCode
         */


        protected java.lang.String localAppFactorCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCodeTracker = false ;

        public boolean isAppFactorCodeSpecified(){
            return localAppFactorCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode(){
            return localAppFactorCode;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode
         */
        public void setAppFactorCode(java.lang.String param){
            localAppFactorCodeTracker = true;

            this.localAppFactorCode=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for BackUp3
         */


        protected java.lang.String localBackUp3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp3Tracker = false ;

        public boolean isBackUp3Specified(){
            return localBackUp3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp3(){
            return localBackUp3;
        }



        /**
         * Auto generated setter method
         * @param param BackUp3
         */
        public void setBackUp3(java.lang.String param){
            localBackUp3Tracker = true;

            this.localBackUp3=param;


        }


        /**
         * field for BackUp4
         */


        protected java.lang.String localBackUp4 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp4Tracker = false ;

        public boolean isBackUp4Specified(){
            return localBackUp4Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp4(){
            return localBackUp4;
        }



        /**
         * Auto generated setter method
         * @param param BackUp4
         */
        public void setBackUp4(java.lang.String param){
            localBackUp4Tracker = true;

            this.localBackUp4=param;


        }


        /**
         * field for DataType
         */


        protected java.lang.String localDataType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDataTypeTracker = false ;

        public boolean isDataTypeSpecified(){
            return localDataTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDataType(){
            return localDataType;
        }



        /**
         * Auto generated setter method
         * @param param DataType
         */
        public void setDataType(java.lang.String param){
            localDataTypeTracker = true;

            this.localDataType=param;


        }


        /**
         * field for FactorType
         */


        protected java.lang.String localFactorType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorTypeTracker = false ;

        public boolean isFactorTypeSpecified(){
            return localFactorTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorType(){
            return localFactorType;
        }



        /**
         * Auto generated setter method
         * @param param FactorType
         */
        public void setFactorType(java.lang.String param){
            localFactorTypeTracker = true;

            this.localFactorType=param;


        }


        /**
         * field for FactorTypeName
         */


        protected java.lang.String localFactorTypeName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorTypeNameTracker = false ;

        public boolean isFactorTypeNameSpecified(){
            return localFactorTypeNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorTypeName(){
            return localFactorTypeName;
        }



        /**
         * Auto generated setter method
         * @param param FactorTypeName
         */
        public void setFactorTypeName(java.lang.String param){
            localFactorTypeNameTracker = true;

            this.localFactorTypeName=param;


        }


        /**
         * field for IsDisplay
         */


        protected java.lang.String localIsDisplay ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDisplayTracker = false ;

        public boolean isIsDisplaySpecified(){
            return localIsDisplayTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDisplay(){
            return localIsDisplay;
        }



        /**
         * Auto generated setter method
         * @param param IsDisplay
         */
        public void setIsDisplay(java.lang.String param){
            localIsDisplayTracker = true;

            this.localIsDisplay=param;


        }


        /**
         * field for IsMustInput
         */


        protected java.lang.String localIsMustInput ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsMustInputTracker = false ;

        public boolean isIsMustInputSpecified(){
            return localIsMustInputTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsMustInput(){
            return localIsMustInput;
        }



        /**
         * Auto generated setter method
         * @param param IsMustInput
         */
        public void setIsMustInput(java.lang.String param){
            localIsMustInputTracker = true;

            this.localIsMustInput=param;


        }


        /**
         * field for MakeDate
         */


        protected java.lang.String localMakeDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeDateTracker = false ;

        public boolean isMakeDateSpecified(){
            return localMakeDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeDate(){
            return localMakeDate;
        }



        /**
         * Auto generated setter method
         * @param param MakeDate
         */
        public void setMakeDate(java.lang.String param){
            localMakeDateTracker = true;

            this.localMakeDate=param;


        }


        /**
         * field for MakeTime
         */


        protected java.lang.String localMakeTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeTimeTracker = false ;

        public boolean isMakeTimeSpecified(){
            return localMakeTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeTime(){
            return localMakeTime;
        }



        /**
         * Auto generated setter method
         * @param param MakeTime
         */
        public void setMakeTime(java.lang.String param){
            localMakeTimeTracker = true;

            this.localMakeTime=param;


        }


        /**
         * field for ModifyDate
         */


        protected java.lang.String localModifyDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyDateTracker = false ;

        public boolean isModifyDateSpecified(){
            return localModifyDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyDate(){
            return localModifyDate;
        }



        /**
         * Auto generated setter method
         * @param param ModifyDate
         */
        public void setModifyDate(java.lang.String param){
            localModifyDateTracker = true;

            this.localModifyDate=param;


        }


        /**
         * field for ModifyTime
         */


        protected java.lang.String localModifyTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyTimeTracker = false ;

        public boolean isModifyTimeSpecified(){
            return localModifyTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyTime(){
            return localModifyTime;
        }



        /**
         * Auto generated setter method
         * @param param ModifyTime
         */
        public void setModifyTime(java.lang.String param){
            localModifyTimeTracker = true;

            this.localModifyTime=param;


        }


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }


        /**
         * field for ShowOrder
         */


        protected java.lang.String localShowOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowOrderTracker = false ;

        public boolean isShowOrderSpecified(){
            return localShowOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowOrder(){
            return localShowOrder;
        }



        /**
         * Auto generated setter method
         * @param param ShowOrder
         */
        public void setShowOrder(java.lang.String param){
            localShowOrderTracker = true;

            this.localShowOrder=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FERiskAppFactor",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FERiskAppFactor",
                            xmlWriter);
                }


            }
            if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null){
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){
                        if (localFEMRiskBrightSpotList[i] != null){
                            localFEMRiskBrightSpotList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMRiskFactorListTracker){
                if (localFEMRiskFactorList!=null){
                    for (int i = 0;i < localFEMRiskFactorList.length;i++){
                        if (localFEMRiskFactorList[i] != null){
                            localFEMRiskFactorList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskFactorList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskFactorList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localAppFactorCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode", xmlWriter);


                if (localAppFactorCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp3", xmlWriter);


                if (localBackUp3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp4Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp4", xmlWriter);


                if (localBackUp4==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp4);

                }

                xmlWriter.writeEndElement();
            } if (localDataTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dataType", xmlWriter);


                if (localDataType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDataType);

                }

                xmlWriter.writeEndElement();
            } if (localFactorTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorType", xmlWriter);


                if (localFactorType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorType);

                }

                xmlWriter.writeEndElement();
            } if (localFactorTypeNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorTypeName", xmlWriter);


                if (localFactorTypeName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorTypeName);

                }

                xmlWriter.writeEndElement();
            } if (localIsDisplayTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDisplay", xmlWriter);


                if (localIsDisplay==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDisplay);

                }

                xmlWriter.writeEndElement();
            } if (localIsMustInputTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isMustInput", xmlWriter);


                if (localIsMustInput==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsMustInput);

                }

                xmlWriter.writeEndElement();
            } if (localMakeDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeDate", xmlWriter);


                if (localMakeDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeDate);

                }

                xmlWriter.writeEndElement();
            } if (localMakeTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeTime", xmlWriter);


                if (localMakeTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeTime);

                }

                xmlWriter.writeEndElement();
            } if (localModifyDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyDate", xmlWriter);


                if (localModifyDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyDate);

                }

                xmlWriter.writeEndElement();
            } if (localModifyTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyTime", xmlWriter);


                if (localModifyTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyTime);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            } if (localShowOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showOrder", xmlWriter);


                if (localShowOrder==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowOrder);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null) {
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){

                        if (localFEMRiskBrightSpotList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(localFEMRiskBrightSpotList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskBrightSpotList"));
                    elementList.add(localFEMRiskBrightSpotList);

                }

            } if (localFEMRiskFactorListTracker){
                if (localFEMRiskFactorList!=null) {
                    for (int i = 0;i < localFEMRiskFactorList.length;i++){

                        if (localFEMRiskFactorList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskFactorList"));
                            elementList.add(localFEMRiskFactorList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskFactorList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskFactorList"));
                    elementList.add(localFEMRiskFactorList);

                }

            } if (localAppFactorCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode"));

                elementList.add(localAppFactorCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localBackUp3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp3"));

                elementList.add(localBackUp3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp3));
            } if (localBackUp4Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp4"));

                elementList.add(localBackUp4==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp4));
            } if (localDataTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dataType"));

                elementList.add(localDataType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataType));
            } if (localFactorTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorType"));

                elementList.add(localFactorType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorType));
            } if (localFactorTypeNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorTypeName"));

                elementList.add(localFactorTypeName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorTypeName));
            } if (localIsDisplayTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDisplay"));

                elementList.add(localIsDisplay==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDisplay));
            } if (localIsMustInputTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isMustInput"));

                elementList.add(localIsMustInput==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsMustInput));
            } if (localMakeDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeDate"));

                elementList.add(localMakeDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeDate));
            } if (localMakeTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeTime"));

                elementList.add(localMakeTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeTime));
            } if (localModifyDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyDate"));

                elementList.add(localModifyDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyDate));
            } if (localModifyTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyTime"));

                elementList.add(localModifyTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyTime));
            } if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            } if (localShowOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showOrder"));

                elementList.add(localShowOrder==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowOrder));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FERiskAppFactor parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FERiskAppFactor object =
                        new FERiskAppFactor();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FERiskAppFactor".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FERiskAppFactor)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list1 = new java.util.ArrayList();

                    java.util.ArrayList list2 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list1.add(null);
                            reader.next();
                        } else {
                            list1.add(FEMRiskBrightSpotList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone1 = false;
                        while(!loopDone1){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone1 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list1.add(null);
                                        reader.next();
                                    } else {
                                        list1.add(FEMRiskBrightSpotList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone1 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskBrightSpotList((FEMRiskBrightSpotList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskBrightSpotList.class,
                                        list1));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list2.add(null);
                            reader.next();
                        } else {
                            list2.add(FEMRiskFactorList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone2 = false;
                        while(!loopDone2){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone2 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskFactorList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list2.add(null);
                                        reader.next();
                                    } else {
                                        list2.add(FEMRiskFactorList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone2 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskFactorList((FEMRiskFactorList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskFactorList.class,
                                        list2));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp4").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp4(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dataType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDataType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorTypeName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorTypeName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDisplay").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDisplay(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isMustInput").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsMustInput(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showOrder").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowOrder(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMSearchRelaList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMSearchRelaList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskSubType
         */


        protected java.lang.String localERiskSubType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskSubTypeTracker = false ;

        public boolean isERiskSubTypeSpecified(){
            return localERiskSubTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskSubType(){
            return localERiskSubType;
        }



        /**
         * Auto generated setter method
         * @param param ERiskSubType
         */
        public void setERiskSubType(java.lang.String param){
            localERiskSubTypeTracker = true;

            this.localERiskSubType=param;


        }


        /**
         * field for RelaListID
         */


        protected java.lang.String localRelaListID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelaListIDTracker = false ;

        public boolean isRelaListIDSpecified(){
            return localRelaListIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelaListID(){
            return localRelaListID;
        }



        /**
         * Auto generated setter method
         * @param param RelaListID
         */
        public void setRelaListID(java.lang.String param){
            localRelaListIDTracker = true;

            this.localRelaListID=param;


        }


        /**
         * field for SearchCode
         */


        protected java.lang.String localSearchCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSearchCodeTracker = false ;

        public boolean isSearchCodeSpecified(){
            return localSearchCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSearchCode(){
            return localSearchCode;
        }



        /**
         * Auto generated setter method
         * @param param SearchCode
         */
        public void setSearchCode(java.lang.String param){
            localSearchCodeTracker = true;

            this.localSearchCode=param;


        }


        /**
         * field for SearchRelaID
         */


        protected java.lang.String localSearchRelaID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSearchRelaIDTracker = false ;

        public boolean isSearchRelaIDSpecified(){
            return localSearchRelaIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSearchRelaID(){
            return localSearchRelaID;
        }



        /**
         * Auto generated setter method
         * @param param SearchRelaID
         */
        public void setSearchRelaID(java.lang.String param){
            localSearchRelaIDTracker = true;

            this.localSearchRelaID=param;


        }


        /**
         * field for SearchValue
         */


        protected java.lang.String localSearchValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSearchValueTracker = false ;

        public boolean isSearchValueSpecified(){
            return localSearchValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSearchValue(){
            return localSearchValue;
        }



        /**
         * Auto generated setter method
         * @param param SearchValue
         */
        public void setSearchValue(java.lang.String param){
            localSearchValueTracker = true;

            this.localSearchValue=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMSearchRelaList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMSearchRelaList",
                            xmlWriter);
                }


            }
            if (localERiskSubTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskSubType", xmlWriter);


                if (localERiskSubType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskSubType);

                }

                xmlWriter.writeEndElement();
            } if (localRelaListIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relaListID", xmlWriter);


                if (localRelaListID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelaListID);

                }

                xmlWriter.writeEndElement();
            } if (localSearchCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "searchCode", xmlWriter);


                if (localSearchCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSearchCode);

                }

                xmlWriter.writeEndElement();
            } if (localSearchRelaIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "searchRelaID", xmlWriter);


                if (localSearchRelaID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSearchRelaID);

                }

                xmlWriter.writeEndElement();
            } if (localSearchValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "searchValue", xmlWriter);


                if (localSearchValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSearchValue);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskSubTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskSubType"));

                elementList.add(localERiskSubType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskSubType));
            } if (localRelaListIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relaListID"));

                elementList.add(localRelaListID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelaListID));
            } if (localSearchCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "searchCode"));

                elementList.add(localSearchCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSearchCode));
            } if (localSearchRelaIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "searchRelaID"));

                elementList.add(localSearchRelaID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSearchRelaID));
            } if (localSearchValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "searchValue"));

                elementList.add(localSearchValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSearchValue));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMSearchRelaList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMSearchRelaList object =
                        new FEMSearchRelaList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMSearchRelaList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMSearchRelaList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskSubType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskSubType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relaListID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelaListID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","searchCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSearchCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","searchRelaID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSearchRelaID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","searchValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSearchValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEUIInfoValue
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEUIInfoValue
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for FEHealthyInfo
         * This was an Array!
         */


        protected FEHealthyInfo[] localFEHealthyInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEHealthyInfoTracker = false ;

        public boolean isFEHealthyInfoSpecified(){
            return localFEHealthyInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return FEHealthyInfo[]
         */
        public  FEHealthyInfo[] getFEHealthyInfo(){
            return localFEHealthyInfo;
        }






        /**
         * validate the array for FEHealthyInfo
         */
        protected void validateFEHealthyInfo(FEHealthyInfo[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEHealthyInfo
         */
        public void setFEHealthyInfo(FEHealthyInfo[] param){

            validateFEHealthyInfo(param);

            localFEHealthyInfoTracker = true;

            this.localFEHealthyInfo=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEHealthyInfo
         */
        public void addFEHealthyInfo(FEHealthyInfo param){
            if (localFEHealthyInfo == null){
                localFEHealthyInfo = new FEHealthyInfo[]{};
            }


            //update the setting tracker
            localFEHealthyInfoTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEHealthyInfo);
            list.add(param);
            this.localFEHealthyInfo =
                    (FEHealthyInfo[])list.toArray(
                            new FEHealthyInfo[list.size()]);

        }


        /**
         * field for UIInfoID
         */


        protected java.lang.String localUIInfoID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoIDTracker = false ;

        public boolean isUIInfoIDSpecified(){
            return localUIInfoIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfoID(){
            return localUIInfoID;
        }



        /**
         * Auto generated setter method
         * @param param UIInfoID
         */
        public void setUIInfoID(java.lang.String param){
            localUIInfoIDTracker = true;

            this.localUIInfoID=param;


        }


        /**
         * field for UIInfoValueID
         */


        protected java.lang.String localUIInfoValueID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoValueIDTracker = false ;

        public boolean isUIInfoValueIDSpecified(){
            return localUIInfoValueIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfoValueID(){
            return localUIInfoValueID;
        }



        /**
         * Auto generated setter method
         * @param param UIInfoValueID
         */
        public void setUIInfoValueID(java.lang.String param){
            localUIInfoValueIDTracker = true;

            this.localUIInfoValueID=param;


        }


        /**
         * field for IsDefault
         */


        protected java.lang.String localIsDefault ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDefaultTracker = false ;

        public boolean isIsDefaultSpecified(){
            return localIsDefaultTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDefault(){
            return localIsDefault;
        }



        /**
         * Auto generated setter method
         * @param param IsDefault
         */
        public void setIsDefault(java.lang.String param){
            localIsDefaultTracker = true;

            this.localIsDefault=param;


        }


        /**
         * field for Remark
         */


        protected java.lang.String localRemark ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRemarkTracker = false ;

        public boolean isRemarkSpecified(){
            return localRemarkTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRemark(){
            return localRemark;
        }



        /**
         * Auto generated setter method
         * @param param Remark
         */
        public void setRemark(java.lang.String param){
            localRemarkTracker = true;

            this.localRemark=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for ValueCode
         */


        protected java.lang.String localValueCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localValueCodeTracker = false ;

        public boolean isValueCodeSpecified(){
            return localValueCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getValueCode(){
            return localValueCode;
        }



        /**
         * Auto generated setter method
         * @param param ValueCode
         */
        public void setValueCode(java.lang.String param){
            localValueCodeTracker = true;

            this.localValueCode=param;


        }


        /**
         * field for ValueName
         */


        protected java.lang.String localValueName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localValueNameTracker = false ;

        public boolean isValueNameSpecified(){
            return localValueNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getValueName(){
            return localValueName;
        }



        /**
         * Auto generated setter method
         * @param param ValueName
         */
        public void setValueName(java.lang.String param){
            localValueNameTracker = true;

            this.localValueName=param;


        }


        /**
         * field for ValueOrder
         */


        protected java.lang.String localValueOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localValueOrderTracker = false ;

        public boolean isValueOrderSpecified(){
            return localValueOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getValueOrder(){
            return localValueOrder;
        }



        /**
         * Auto generated setter method
         * @param param ValueOrder
         */
        public void setValueOrder(java.lang.String param){
            localValueOrderTracker = true;

            this.localValueOrder=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEUIInfoValue",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEUIInfoValue",
                            xmlWriter);
                }


            }
            if (localFEHealthyInfoTracker){
                if (localFEHealthyInfo!=null){
                    for (int i = 0;i < localFEHealthyInfo.length;i++){
                        if (localFEHealthyInfo[i] != null){
                            localFEHealthyInfo[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEHealthyInfo"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEHealthyInfo", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEHealthyInfo", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localUIInfoIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfoID", xmlWriter);


                if (localUIInfoID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfoID);

                }

                xmlWriter.writeEndElement();
            } if (localUIInfoValueIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfoValueID", xmlWriter);


                if (localUIInfoValueID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfoValueID);

                }

                xmlWriter.writeEndElement();
            } if (localIsDefaultTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDefault", xmlWriter);


                if (localIsDefault==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDefault);

                }

                xmlWriter.writeEndElement();
            } if (localRemarkTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "remark", xmlWriter);


                if (localRemark==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRemark);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localValueCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "valueCode", xmlWriter);


                if (localValueCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localValueCode);

                }

                xmlWriter.writeEndElement();
            } if (localValueNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "valueName", xmlWriter);


                if (localValueName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localValueName);

                }

                xmlWriter.writeEndElement();
            } if (localValueOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "valueOrder", xmlWriter);


                if (localValueOrder==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localValueOrder);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localFEHealthyInfoTracker){
                if (localFEHealthyInfo!=null) {
                    for (int i = 0;i < localFEHealthyInfo.length;i++){

                        if (localFEHealthyInfo[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEHealthyInfo"));
                            elementList.add(localFEHealthyInfo[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEHealthyInfo"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEHealthyInfo"));
                    elementList.add(localFEHealthyInfo);

                }

            } if (localUIInfoIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfoID"));

                elementList.add(localUIInfoID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfoID));
            } if (localUIInfoValueIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfoValueID"));

                elementList.add(localUIInfoValueID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfoValueID));
            } if (localIsDefaultTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDefault"));

                elementList.add(localIsDefault==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDefault));
            } if (localRemarkTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "remark"));

                elementList.add(localRemark==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRemark));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localValueCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "valueCode"));

                elementList.add(localValueCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValueCode));
            } if (localValueNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "valueName"));

                elementList.add(localValueName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValueName));
            } if (localValueOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "valueOrder"));

                elementList.add(localValueOrder==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValueOrder));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEUIInfoValue parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEUIInfoValue object =
                        new FEUIInfoValue();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEUIInfoValue".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEUIInfoValue)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list1 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEHealthyInfo").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list1.add(null);
                            reader.next();
                        } else {
                            list1.add(FEHealthyInfo.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone1 = false;
                        while(!loopDone1){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone1 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEHealthyInfo").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list1.add(null);
                                        reader.next();
                                    } else {
                                        list1.add(FEHealthyInfo.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone1 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEHealthyInfo((FEHealthyInfo[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEHealthyInfo.class,
                                        list1));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfoID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfoID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfoValueID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfoValueID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDefault").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDefault(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","remark").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRemark(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","valueCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setValueCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","valueName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setValueName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","valueOrder").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setValueOrder(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class RequestExtension
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = RequestExtension
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for MaxRecords
         */


        protected java.lang.String localMaxRecords ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxRecordsTracker = false ;

        public boolean isMaxRecordsSpecified(){
            return localMaxRecordsTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxRecords(){
            return localMaxRecords;
        }



        /**
         * Auto generated setter method
         * @param param MaxRecords
         */
        public void setMaxRecords(java.lang.String param){
            localMaxRecordsTracker = true;

            this.localMaxRecords=param;


        }


        /**
         * field for OrderField
         */


        protected java.lang.String localOrderField ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOrderFieldTracker = false ;

        public boolean isOrderFieldSpecified(){
            return localOrderFieldTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOrderField(){
            return localOrderField;
        }



        /**
         * Auto generated setter method
         * @param param OrderField
         */
        public void setOrderField(java.lang.String param){
            localOrderFieldTracker = true;

            this.localOrderField=param;


        }


        /**
         * field for OrderFlag
         */


        protected java.lang.String localOrderFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOrderFlagTracker = false ;

        public boolean isOrderFlagSpecified(){
            return localOrderFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOrderFlag(){
            return localOrderFlag;
        }



        /**
         * Auto generated setter method
         * @param param OrderFlag
         */
        public void setOrderFlag(java.lang.String param){
            localOrderFlagTracker = true;

            this.localOrderFlag=param;


        }


        /**
         * field for PageFlag
         */


        protected java.lang.String localPageFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPageFlagTracker = false ;

        public boolean isPageFlagSpecified(){
            return localPageFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPageFlag(){
            return localPageFlag;
        }



        /**
         * Auto generated setter method
         * @param param PageFlag
         */
        public void setPageFlag(java.lang.String param){
            localPageFlagTracker = true;

            this.localPageFlag=param;


        }


        /**
         * field for PageRowNum
         */


        protected java.lang.String localPageRowNum ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPageRowNumTracker = false ;

        public boolean isPageRowNumSpecified(){
            return localPageRowNumTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPageRowNum(){
            return localPageRowNum;
        }



        /**
         * Auto generated setter method
         * @param param PageRowNum
         */
        public void setPageRowNum(java.lang.String param){
            localPageRowNumTracker = true;

            this.localPageRowNum=param;


        }


        /**
         * field for RowNumStart
         */


        protected java.lang.String localRowNumStart ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRowNumStartTracker = false ;

        public boolean isRowNumStartSpecified(){
            return localRowNumStartTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRowNumStart(){
            return localRowNumStart;
        }



        /**
         * Auto generated setter method
         * @param param RowNumStart
         */
        public void setRowNumStart(java.lang.String param){
            localRowNumStartTracker = true;

            this.localRowNumStart=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":RequestExtension",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "RequestExtension",
                            xmlWriter);
                }


            }
            if (localMaxRecordsTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxRecords", xmlWriter);


                if (localMaxRecords==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxRecords);

                }

                xmlWriter.writeEndElement();
            } if (localOrderFieldTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "orderField", xmlWriter);


                if (localOrderField==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOrderField);

                }

                xmlWriter.writeEndElement();
            } if (localOrderFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "orderFlag", xmlWriter);


                if (localOrderFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOrderFlag);

                }

                xmlWriter.writeEndElement();
            } if (localPageFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "pageFlag", xmlWriter);


                if (localPageFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPageFlag);

                }

                xmlWriter.writeEndElement();
            } if (localPageRowNumTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "pageRowNum", xmlWriter);


                if (localPageRowNum==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPageRowNum);

                }

                xmlWriter.writeEndElement();
            } if (localRowNumStartTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "rowNumStart", xmlWriter);


                if (localRowNumStart==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRowNumStart);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localMaxRecordsTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "maxRecords"));

                elementList.add(localMaxRecords==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxRecords));
            } if (localOrderFieldTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "orderField"));

                elementList.add(localOrderField==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrderField));
            } if (localOrderFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "orderFlag"));

                elementList.add(localOrderFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrderFlag));
            } if (localPageFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "pageFlag"));

                elementList.add(localPageFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPageFlag));
            } if (localPageRowNumTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "pageRowNum"));

                elementList.add(localPageRowNum==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPageRowNum));
            } if (localRowNumStartTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "rowNumStart"));

                elementList.add(localRowNumStart==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRowNumStart));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static RequestExtension parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                RequestExtension object =
                        new RequestExtension();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"RequestExtension".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (RequestExtension)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","maxRecords").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxRecords(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","orderField").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOrderField(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","orderFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOrderFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","pageFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPageFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","pageRowNum").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPageRowNum(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","rowNumStart").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRowNumStart(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMRiskType
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMRiskType
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskType
         */


        protected java.lang.String localERiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskTypeTracker = false ;

        public boolean isERiskTypeSpecified(){
            return localERiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskType(){
            return localERiskType;
        }



        /**
         * Auto generated setter method
         * @param param ERiskType
         */
        public void setERiskType(java.lang.String param){
            localERiskTypeTracker = true;

            this.localERiskType=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for RiskTypeName
         */


        protected java.lang.String localRiskTypeName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeNameTracker = false ;

        public boolean isRiskTypeNameSpecified(){
            return localRiskTypeNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskTypeName(){
            return localRiskTypeName;
        }



        /**
         * Auto generated setter method
         * @param param RiskTypeName
         */
        public void setRiskTypeName(java.lang.String param){
            localRiskTypeNameTracker = true;

            this.localRiskTypeName=param;


        }


        /**
         * field for SubRiskTypeCode
         */


        protected java.lang.String localSubRiskTypeCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSubRiskTypeCodeTracker = false ;

        public boolean isSubRiskTypeCodeSpecified(){
            return localSubRiskTypeCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSubRiskTypeCode(){
            return localSubRiskTypeCode;
        }



        /**
         * Auto generated setter method
         * @param param SubRiskTypeCode
         */
        public void setSubRiskTypeCode(java.lang.String param){
            localSubRiskTypeCodeTracker = true;

            this.localSubRiskTypeCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMRiskType",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMRiskType",
                            xmlWriter);
                }


            }
            if (localERiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskType", xmlWriter);


                if (localERiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskType);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskTypeName", xmlWriter);


                if (localRiskTypeName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskTypeName);

                }

                xmlWriter.writeEndElement();
            } if (localSubRiskTypeCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "subRiskTypeCode", xmlWriter);


                if (localSubRiskTypeCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSubRiskTypeCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskType"));

                elementList.add(localERiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskType));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localRiskTypeNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskTypeName"));

                elementList.add(localRiskTypeName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskTypeName));
            } if (localSubRiskTypeCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "subRiskTypeCode"));

                elementList.add(localSubRiskTypeCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubRiskTypeCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMRiskType parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMRiskType object =
                        new FEMRiskType();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMRiskType".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMRiskType)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskTypeName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskTypeName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","subRiskTypeCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSubRiskTypeCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class ProductInfoRequest
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ProductInfoRequest
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for BU1
         */


        protected java.lang.String localBU1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBU1Tracker = false ;

        public boolean isBU1Specified(){
            return localBU1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBU1(){
            return localBU1;
        }



        /**
         * Auto generated setter method
         * @param param BU1
         */
        public void setBU1(java.lang.String param){
            localBU1Tracker = true;

            this.localBU1=param;


        }


        /**
         * field for BU2
         */


        protected java.lang.String localBU2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBU2Tracker = false ;

        public boolean isBU2Specified(){
            return localBU2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBU2(){
            return localBU2;
        }



        /**
         * Auto generated setter method
         * @param param BU2
         */
        public void setBU2(java.lang.String param){
            localBU2Tracker = true;

            this.localBU2=param;


        }


        /**
         * field for ERiskType
         */


        protected java.lang.String localERiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskTypeTracker = false ;

        public boolean isERiskTypeSpecified(){
            return localERiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskType(){
            return localERiskType;
        }



        /**
         * Auto generated setter method
         * @param param ERiskType
         */
        public void setERiskType(java.lang.String param){
            localERiskTypeTracker = true;

            this.localERiskType=param;


        }


        /**
         * field for FEMSearchRelaList
         * This was an Array!
         */


        protected FEMSearchRelaList[] localFEMSearchRelaList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMSearchRelaListTracker = false ;

        public boolean isFEMSearchRelaListSpecified(){
            return localFEMSearchRelaListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMSearchRelaList[]
         */
        public  FEMSearchRelaList[] getFEMSearchRelaList(){
            return localFEMSearchRelaList;
        }






        /**
         * validate the array for FEMSearchRelaList
         */
        protected void validateFEMSearchRelaList(FEMSearchRelaList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMSearchRelaList
         */
        public void setFEMSearchRelaList(FEMSearchRelaList[] param){

            validateFEMSearchRelaList(param);

            localFEMSearchRelaListTracker = true;

            this.localFEMSearchRelaList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMSearchRelaList
         */
        public void addFEMSearchRelaList(FEMSearchRelaList param){
            if (localFEMSearchRelaList == null){
                localFEMSearchRelaList = new FEMSearchRelaList[]{};
            }


            //update the setting tracker
            localFEMSearchRelaListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMSearchRelaList);
            list.add(param);
            this.localFEMSearchRelaList =
                    (FEMSearchRelaList[])list.toArray(
                            new FEMSearchRelaList[list.size()]);

        }


        /**
         * field for CommendType
         */


        protected java.lang.String localCommendType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCommendTypeTracker = false ;

        public boolean isCommendTypeSpecified(){
            return localCommendTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCommendType(){
            return localCommendType;
        }



        /**
         * Auto generated setter method
         * @param param CommendType
         */
        public void setCommendType(java.lang.String param){
            localCommendTypeTracker = true;

            this.localCommendType=param;


        }


        /**
         * field for EdorFlag
         */


        protected java.lang.String localEdorFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localEdorFlagTracker = false ;

        public boolean isEdorFlagSpecified(){
            return localEdorFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getEdorFlag(){
            return localEdorFlag;
        }



        /**
         * Auto generated setter method
         * @param param EdorFlag
         */
        public void setEdorFlag(java.lang.String param){
            localEdorFlagTracker = true;

            this.localEdorFlag=param;


        }


        /**
         * field for MainFlag
         */


        protected java.lang.String localMainFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMainFlagTracker = false ;

        public boolean isMainFlagSpecified(){
            return localMainFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMainFlag(){
            return localMainFlag;
        }



        /**
         * Auto generated setter method
         * @param param MainFlag
         */
        public void setMainFlag(java.lang.String param){
            localMainFlagTracker = true;

            this.localMainFlag=param;


        }


        /**
         * field for MainRiskFlag
         */


        protected java.lang.String localMainRiskFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMainRiskFlagTracker = false ;

        public boolean isMainRiskFlagSpecified(){
            return localMainRiskFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMainRiskFlag(){
            return localMainRiskFlag;
        }



        /**
         * Auto generated setter method
         * @param param MainRiskFlag
         */
        public void setMainRiskFlag(java.lang.String param){
            localMainRiskFlagTracker = true;

            this.localMainRiskFlag=param;


        }


        /**
         * field for OutRiskCode
         */


        protected java.lang.String localOutRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOutRiskCodeTracker = false ;

        public boolean isOutRiskCodeSpecified(){
            return localOutRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOutRiskCode(){
            return localOutRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param OutRiskCode
         */
        public void setOutRiskCode(java.lang.String param){
            localOutRiskCodeTracker = true;

            this.localOutRiskCode=param;


        }


        /**
         * field for RequestDate
         */


        protected java.lang.String localRequestDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestDateTracker = false ;

        public boolean isRequestDateSpecified(){
            return localRequestDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRequestDate(){
            return localRequestDate;
        }



        /**
         * Auto generated setter method
         * @param param RequestDate
         */
        public void setRequestDate(java.lang.String param){
            localRequestDateTracker = true;

            this.localRequestDate=param;


        }


        /**
         * field for RequestExtension
         */


        protected RequestExtension localRequestExtension ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestExtensionTracker = false ;

        public boolean isRequestExtensionSpecified(){
            return localRequestExtensionTracker;
        }



        /**
         * Auto generated getter method
         * @return RequestExtension
         */
        public  RequestExtension getRequestExtension(){
            return localRequestExtension;
        }



        /**
         * Auto generated setter method
         * @param param RequestExtension
         */
        public void setRequestExtension(RequestExtension param){
            localRequestExtensionTracker = true;

            this.localRequestExtension=param;


        }


        /**
         * field for RequestGUID
         */


        protected java.lang.String localRequestGUID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestGUIDTracker = false ;

        public boolean isRequestGUIDSpecified(){
            return localRequestGUIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRequestGUID(){
            return localRequestGUID;
        }



        /**
         * Auto generated setter method
         * @param param RequestGUID
         */
        public void setRequestGUID(java.lang.String param){
            localRequestGUIDTracker = true;

            this.localRequestGUID=param;


        }


        /**
         * field for RequestTime
         */


        protected java.lang.String localRequestTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestTimeTracker = false ;

        public boolean isRequestTimeSpecified(){
            return localRequestTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRequestTime(){
            return localRequestTime;
        }



        /**
         * Auto generated setter method
         * @param param RequestTime
         */
        public void setRequestTime(java.lang.String param){
            localRequestTimeTracker = true;

            this.localRequestTime=param;


        }


        /**
         * field for RequestType
         */


        protected java.lang.String localRequestType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestTypeTracker = false ;

        public boolean isRequestTypeSpecified(){
            return localRequestTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRequestType(){
            return localRequestType;
        }



        /**
         * Auto generated setter method
         * @param param RequestType
         */
        public void setRequestType(java.lang.String param){
            localRequestTypeTracker = true;

            this.localRequestType=param;


        }


        /**
         * field for RinsFlag
         */


        protected java.lang.String localRinsFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRinsFlagTracker = false ;

        public boolean isRinsFlagSpecified(){
            return localRinsFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRinsFlag(){
            return localRinsFlag;
        }



        /**
         * Auto generated setter method
         * @param param RinsFlag
         */
        public void setRinsFlag(java.lang.String param){
            localRinsFlagTracker = true;

            this.localRinsFlag=param;


        }


        /**
         * field for RiskCode
         * This was an Array!
         */


        protected java.lang.String[] localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String[]
         */
        public  java.lang.String[] getRiskCode(){
            return localRiskCode;
        }






        /**
         * validate the array for RiskCode
         */
        protected void validateRiskCode(java.lang.String[] param){

        }


        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String[] param){

            validateRiskCode(param);

            localRiskCodeTracker = true;

            this.localRiskCode=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param java.lang.String
         */
        public void addRiskCode(java.lang.String param){
            if (localRiskCode == null){
                localRiskCode = new java.lang.String[]{};
            }


            //update the setting tracker
            localRiskCodeTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localRiskCode);
            list.add(param);
            this.localRiskCode =
                    (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

        }


        /**
         * field for RiskKind
         */


        protected java.lang.String localRiskKind ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKindTracker = false ;

        public boolean isRiskKindSpecified(){
            return localRiskKindTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind(){
            return localRiskKind;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind
         */
        public void setRiskKind(java.lang.String param){
            localRiskKindTracker = true;

            this.localRiskKind=param;


        }


        /**
         * field for RiskKind2
         */


        protected java.lang.String localRiskKind2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKind2Tracker = false ;

        public boolean isRiskKind2Specified(){
            return localRiskKind2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind2(){
            return localRiskKind2;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind2
         */
        public void setRiskKind2(java.lang.String param){
            localRiskKind2Tracker = true;

            this.localRiskKind2=param;


        }


        /**
         * field for RiskKind3
         */


        protected java.lang.String localRiskKind3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskKind3Tracker = false ;

        public boolean isRiskKind3Specified(){
            return localRiskKind3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskKind3(){
            return localRiskKind3;
        }



        /**
         * Auto generated setter method
         * @param param RiskKind3
         */
        public void setRiskKind3(java.lang.String param){
            localRiskKind3Tracker = true;

            this.localRiskKind3=param;


        }


        /**
         * field for RiskName
         */


        protected java.lang.String localRiskName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskNameTracker = false ;

        public boolean isRiskNameSpecified(){
            return localRiskNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskName(){
            return localRiskName;
        }



        /**
         * Auto generated setter method
         * @param param RiskName
         */
        public void setRiskName(java.lang.String param){
            localRiskNameTracker = true;

            this.localRiskName=param;


        }


        /**
         * field for RiskPeriod
         */


        protected java.lang.String localRiskPeriod ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskPeriodTracker = false ;

        public boolean isRiskPeriodSpecified(){
            return localRiskPeriodTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskPeriod(){
            return localRiskPeriod;
        }



        /**
         * Auto generated setter method
         * @param param RiskPeriod
         */
        public void setRiskPeriod(java.lang.String param){
            localRiskPeriodTracker = true;

            this.localRiskPeriod=param;


        }


        /**
         * field for RiskProp
         */


        protected java.lang.String localRiskProp ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskPropTracker = false ;

        public boolean isRiskPropSpecified(){
            return localRiskPropTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskProp(){
            return localRiskProp;
        }



        /**
         * Auto generated setter method
         * @param param RiskProp
         */
        public void setRiskProp(java.lang.String param){
            localRiskPropTracker = true;

            this.localRiskProp=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }


        /**
         * field for Sex
         */


        protected java.lang.String localSex ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSexTracker = false ;

        public boolean isSexSpecified(){
            return localSexTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSex(){
            return localSex;
        }



        /**
         * Auto generated setter method
         * @param param Sex
         */
        public void setSex(java.lang.String param){
            localSexTracker = true;

            this.localSex=param;


        }


        /**
         * field for SubRiskTypeCode
         */


        protected java.lang.String localSubRiskTypeCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSubRiskTypeCodeTracker = false ;

        public boolean isSubRiskTypeCodeSpecified(){
            return localSubRiskTypeCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSubRiskTypeCode(){
            return localSubRiskTypeCode;
        }



        /**
         * Auto generated setter method
         * @param param SubRiskTypeCode
         */
        public void setSubRiskTypeCode(java.lang.String param){
            localSubRiskTypeCodeTracker = true;

            this.localSubRiskTypeCode=param;


        }


        /**
         * field for SupplierCode
         */


        protected java.lang.String localSupplierCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupplierCodeTracker = false ;

        public boolean isSupplierCodeSpecified(){
            return localSupplierCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupplierCode(){
            return localSupplierCode;
        }



        /**
         * Auto generated setter method
         * @param param SupplierCode
         */
        public void setSupplierCode(java.lang.String param){
            localSupplierCodeTracker = true;

            this.localSupplierCode=param;


        }


        /**
         * field for TextAge
         */


        protected java.lang.String localTextAge ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localTextAgeTracker = false ;

        public boolean isTextAgeSpecified(){
            return localTextAgeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getTextAge(){
            return localTextAge;
        }



        /**
         * Auto generated setter method
         * @param param TextAge
         */
        public void setTextAge(java.lang.String param){
            localTextAgeTracker = true;

            this.localTextAge=param;


        }


        /**
         * field for TransCheckInfo
         */


        protected TransCheckInfo localTransCheckInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localTransCheckInfoTracker = false ;

        public boolean isTransCheckInfoSpecified(){
            return localTransCheckInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return TransCheckInfo
         */
        public  TransCheckInfo getTransCheckInfo(){
            return localTransCheckInfo;
        }



        /**
         * Auto generated setter method
         * @param param TransCheckInfo
         */
        public void setTransCheckInfo(TransCheckInfo param){
            localTransCheckInfoTracker = true;

            this.localTransCheckInfo=param;


        }


        /**
         * field for Version
         */


        protected java.lang.String localVersion ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localVersionTracker = false ;

        public boolean isVersionSpecified(){
            return localVersionTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getVersion(){
            return localVersion;
        }



        /**
         * Auto generated setter method
         * @param param Version
         */
        public void setVersion(java.lang.String param){
            localVersionTracker = true;

            this.localVersion=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":ProductInfoRequest",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "ProductInfoRequest",
                            xmlWriter);
                }


            }
            if (localBU1Tracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "BU1", xmlWriter);


                if (localBU1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBU1);

                }

                xmlWriter.writeEndElement();
            } if (localBU2Tracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "BU2", xmlWriter);


                if (localBU2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBU2);

                }

                xmlWriter.writeEndElement();
            } if (localERiskTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskType", xmlWriter);


                if (localERiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskType);

                }

                xmlWriter.writeEndElement();
            } if (localFEMSearchRelaListTracker){
                if (localFEMSearchRelaList!=null){
                    for (int i = 0;i < localFEMSearchRelaList.length;i++){
                        if (localFEMSearchRelaList[i] != null){
                            localFEMSearchRelaList[i].serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FEMSearchRelaList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "FEMSearchRelaList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "FEMSearchRelaList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localCommendTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "commendType", xmlWriter);


                if (localCommendType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCommendType);

                }

                xmlWriter.writeEndElement();
            } if (localEdorFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "edorFlag", xmlWriter);


                if (localEdorFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localEdorFlag);

                }

                xmlWriter.writeEndElement();
            } if (localMainFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "mainFlag", xmlWriter);


                if (localMainFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMainFlag);

                }

                xmlWriter.writeEndElement();
            } if (localMainRiskFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "mainRiskFlag", xmlWriter);


                if (localMainRiskFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMainRiskFlag);

                }

                xmlWriter.writeEndElement();
            } if (localOutRiskCodeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "outRiskCode", xmlWriter);


                if (localOutRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOutRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRequestDateTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "requestDate", xmlWriter);


                if (localRequestDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRequestDate);

                }

                xmlWriter.writeEndElement();
            } if (localRequestExtensionTracker){
                if (localRequestExtension==null){

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "requestExtension", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localRequestExtension.serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestExtension"),
                            xmlWriter);
                }
            } if (localRequestGUIDTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "requestGUID", xmlWriter);


                if (localRequestGUID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRequestGUID);

                }

                xmlWriter.writeEndElement();
            } if (localRequestTimeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "requestTime", xmlWriter);


                if (localRequestTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRequestTime);

                }

                xmlWriter.writeEndElement();
            } if (localRequestTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "requestType", xmlWriter);


                if (localRequestType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRequestType);

                }

                xmlWriter.writeEndElement();
            } if (localRinsFlagTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "rinsFlag", xmlWriter);


                if (localRinsFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRinsFlag);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                if (localRiskCode!=null) {
                    namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                    for (int i = 0;i < localRiskCode.length;i++){

                        if (localRiskCode[i] != null){

                            writeStartElement(null, namespace, "riskCode", xmlWriter);


                            xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode[i]));

                            xmlWriter.writeEndElement();

                        } else {

                            // write null attribute
                            namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                            writeStartElement(null, namespace, "riskCode", xmlWriter);
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    // write the null attribute
                    // write null attribute
                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "riskCode", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }

            } if (localRiskKindTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind", xmlWriter);


                if (localRiskKind==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind);

                }

                xmlWriter.writeEndElement();
            } if (localRiskKind2Tracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind2", xmlWriter);


                if (localRiskKind2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind2);

                }

                xmlWriter.writeEndElement();
            } if (localRiskKind3Tracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskKind3", xmlWriter);


                if (localRiskKind3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskKind3);

                }

                xmlWriter.writeEndElement();
            } if (localRiskNameTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskName", xmlWriter);


                if (localRiskName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskName);

                }

                xmlWriter.writeEndElement();
            } if (localRiskPeriodTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskPeriod", xmlWriter);


                if (localRiskPeriod==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskPeriod);

                }

                xmlWriter.writeEndElement();
            } if (localRiskPropTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskProp", xmlWriter);


                if (localRiskProp==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskProp);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            } if (localSexTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "sex", xmlWriter);


                if (localSex==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSex);

                }

                xmlWriter.writeEndElement();
            } if (localSubRiskTypeCodeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "subRiskTypeCode", xmlWriter);


                if (localSubRiskTypeCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSubRiskTypeCode);

                }

                xmlWriter.writeEndElement();
            } if (localSupplierCodeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supplierCode", xmlWriter);


                if (localSupplierCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupplierCode);

                }

                xmlWriter.writeEndElement();
            } if (localTextAgeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "textAge", xmlWriter);


                if (localTextAge==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localTextAge);

                }

                xmlWriter.writeEndElement();
            } if (localTransCheckInfoTracker){
                if (localTransCheckInfo==null){

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "transCheckInfo", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localTransCheckInfo.serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","transCheckInfo"),
                            xmlWriter);
                }
            } if (localVersionTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "version", xmlWriter);


                if (localVersion==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localVersion);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localBU1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "BU1"));

                elementList.add(localBU1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBU1));
            } if (localBU2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "BU2"));

                elementList.add(localBU2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBU2));
            } if (localERiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskType"));

                elementList.add(localERiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskType));
            } if (localFEMSearchRelaListTracker){
                if (localFEMSearchRelaList!=null) {
                    for (int i = 0;i < localFEMSearchRelaList.length;i++){

                        if (localFEMSearchRelaList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMSearchRelaList"));
                            elementList.add(localFEMSearchRelaList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMSearchRelaList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                            "FEMSearchRelaList"));
                    elementList.add(localFEMSearchRelaList);

                }

            } if (localCommendTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "commendType"));

                elementList.add(localCommendType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCommendType));
            } if (localEdorFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "edorFlag"));

                elementList.add(localEdorFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEdorFlag));
            } if (localMainFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "mainFlag"));

                elementList.add(localMainFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainFlag));
            } if (localMainRiskFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "mainRiskFlag"));

                elementList.add(localMainRiskFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainRiskFlag));
            } if (localOutRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "outRiskCode"));

                elementList.add(localOutRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutRiskCode));
            } if (localRequestDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestDate"));

                elementList.add(localRequestDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestDate));
            } if (localRequestExtensionTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestExtension"));


                elementList.add(localRequestExtension==null?null:
                        localRequestExtension);
            } if (localRequestGUIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestGUID"));

                elementList.add(localRequestGUID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestGUID));
            } if (localRequestTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestTime"));

                elementList.add(localRequestTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestTime));
            } if (localRequestTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestType"));

                elementList.add(localRequestType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestType));
            } if (localRinsFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "rinsFlag"));

                elementList.add(localRinsFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRinsFlag));
            } if (localRiskCodeTracker){
                if (localRiskCode!=null){
                    for (int i = 0;i < localRiskCode.length;i++){

                        if (localRiskCode[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "riskCode"));
                            elementList.add(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode[i]));
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "riskCode"));
                            elementList.add(null);

                        }


                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                            "riskCode"));
                    elementList.add(null);

                }

            } if (localRiskKindTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind"));

                elementList.add(localRiskKind==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind));
            } if (localRiskKind2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind2"));

                elementList.add(localRiskKind2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind2));
            } if (localRiskKind3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskKind3"));

                elementList.add(localRiskKind3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskKind3));
            } if (localRiskNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskName"));

                elementList.add(localRiskName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskName));
            } if (localRiskPeriodTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskPeriod"));

                elementList.add(localRiskPeriod==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskPeriod));
            } if (localRiskPropTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskProp"));

                elementList.add(localRiskProp==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskProp));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            } if (localSexTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "sex"));

                elementList.add(localSex==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSex));
            } if (localSubRiskTypeCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "subRiskTypeCode"));

                elementList.add(localSubRiskTypeCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubRiskTypeCode));
            } if (localSupplierCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "supplierCode"));

                elementList.add(localSupplierCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierCode));
            } if (localTextAgeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "textAge"));

                elementList.add(localTextAge==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTextAge));
            } if (localTransCheckInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "transCheckInfo"));


                elementList.add(localTransCheckInfo==null?null:
                        localTransCheckInfo);
            } if (localVersionTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "version"));

                elementList.add(localVersion==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersion));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static ProductInfoRequest parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                ProductInfoRequest object =
                        new ProductInfoRequest();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ProductInfoRequest".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProductInfoRequest)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list4 = new java.util.ArrayList();

                    java.util.ArrayList list16 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","BU1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBU1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","BU2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBU2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","ERiskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FEMSearchRelaList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list4.add(null);
                            reader.next();
                        } else {
                            list4.add(FEMSearchRelaList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone4 = false;
                        while(!loopDone4){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone4 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FEMSearchRelaList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list4.add(null);
                                        reader.next();
                                    } else {
                                        list4.add(FEMSearchRelaList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone4 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMSearchRelaList((FEMSearchRelaList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMSearchRelaList.class,
                                        list4));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","commendType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCommendType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","edorFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setEdorFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","mainFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMainFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","mainRiskFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMainRiskFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","outRiskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOutRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRequestDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestExtension").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setRequestExtension(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setRequestExtension(RequestExtension.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestGUID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRequestGUID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRequestTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRequestType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","rinsFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRinsFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list16.add(null);

                            reader.next();
                        } else {
                            list16.add(reader.getElementText());
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone16 = false;
                        while(!loopDone16){
                            // Ensure we are at the EndElement
                            while (!reader.isEndElement()){
                                reader.next();
                            }
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone16 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list16.add(null);

                                        reader.next();
                                    } else {
                                        list16.add(reader.getElementText());
                                    }
                                }else{
                                    loopDone16 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setRiskCode((java.lang.String[])
                                list16.toArray(new java.lang.String[list16.size()]));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskKind").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskKind2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskKind3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskKind3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskPeriod").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskPeriod(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskProp").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskProp(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","sex").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSex(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","subRiskTypeCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSubRiskTypeCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","supplierCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupplierCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","textAge").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setTextAge(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","transCheckInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setTransCheckInfo(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setTransCheckInfo(TransCheckInfo.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","version").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setVersion(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMRiskBrightSpotList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMRiskBrightSpotList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskID
         */


        protected java.lang.String localERiskID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskIDTracker = false ;

        public boolean isERiskIDSpecified(){
            return localERiskIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskID(){
            return localERiskID;
        }



        /**
         * Auto generated setter method
         * @param param ERiskID
         */
        public void setERiskID(java.lang.String param){
            localERiskIDTracker = true;

            this.localERiskID=param;


        }


        /**
         * field for BrightSpotID
         */


        protected java.lang.String localBrightSpotID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrightSpotIDTracker = false ;

        public boolean isBrightSpotIDSpecified(){
            return localBrightSpotIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBrightSpotID(){
            return localBrightSpotID;
        }



        /**
         * Auto generated setter method
         * @param param BrightSpotID
         */
        public void setBrightSpotID(java.lang.String param){
            localBrightSpotIDTracker = true;

            this.localBrightSpotID=param;


        }


        /**
         * field for BrightSpotName
         */


        protected java.lang.String localBrightSpotName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrightSpotNameTracker = false ;

        public boolean isBrightSpotNameSpecified(){
            return localBrightSpotNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBrightSpotName(){
            return localBrightSpotName;
        }



        /**
         * Auto generated setter method
         * @param param BrightSpotName
         */
        public void setBrightSpotName(java.lang.String param){
            localBrightSpotNameTracker = true;

            this.localBrightSpotName=param;


        }


        /**
         * field for BrightSpotOrder
         */


        protected int localBrightSpotOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrightSpotOrderTracker = false ;

        public boolean isBrightSpotOrderSpecified(){
            return localBrightSpotOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getBrightSpotOrder(){
            return localBrightSpotOrder;
        }



        /**
         * Auto generated setter method
         * @param param BrightSpotOrder
         */
        public void setBrightSpotOrder(int param){

            // setting primitive attribute tracker to true
            localBrightSpotOrderTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localBrightSpotOrder=param;


        }


        /**
         * field for BrightSpotType
         */


        protected java.lang.String localBrightSpotType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBrightSpotTypeTracker = false ;

        public boolean isBrightSpotTypeSpecified(){
            return localBrightSpotTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBrightSpotType(){
            return localBrightSpotType;
        }



        /**
         * Auto generated setter method
         * @param param BrightSpotType
         */
        public void setBrightSpotType(java.lang.String param){
            localBrightSpotTypeTracker = true;

            this.localBrightSpotType=param;


        }


        /**
         * field for FactorDisplayValue
         */


        protected java.lang.String localFactorDisplayValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorDisplayValueTracker = false ;

        public boolean isFactorDisplayValueSpecified(){
            return localFactorDisplayValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorDisplayValue(){
            return localFactorDisplayValue;
        }



        /**
         * Auto generated setter method
         * @param param FactorDisplayValue
         */
        public void setFactorDisplayValue(java.lang.String param){
            localFactorDisplayValueTracker = true;

            this.localFactorDisplayValue=param;


        }


        /**
         * field for FactorID
         */


        protected java.lang.String localFactorID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorIDTracker = false ;

        public boolean isFactorIDSpecified(){
            return localFactorIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorID(){
            return localFactorID;
        }



        /**
         * Auto generated setter method
         * @param param FactorID
         */
        public void setFactorID(java.lang.String param){
            localFactorIDTracker = true;

            this.localFactorID=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMRiskBrightSpotList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMRiskBrightSpotList",
                            xmlWriter);
                }


            }
            if (localERiskIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskID", xmlWriter);


                if (localERiskID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskID);

                }

                xmlWriter.writeEndElement();
            } if (localBrightSpotIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brightSpotID", xmlWriter);


                if (localBrightSpotID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBrightSpotID);

                }

                xmlWriter.writeEndElement();
            } if (localBrightSpotNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brightSpotName", xmlWriter);


                if (localBrightSpotName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBrightSpotName);

                }

                xmlWriter.writeEndElement();
            } if (localBrightSpotOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brightSpotOrder", xmlWriter);

                if (localBrightSpotOrder==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("brightSpotOrder cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrightSpotOrder));
                }

                xmlWriter.writeEndElement();
            } if (localBrightSpotTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "brightSpotType", xmlWriter);


                if (localBrightSpotType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBrightSpotType);

                }

                xmlWriter.writeEndElement();
            } if (localFactorDisplayValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorDisplayValue", xmlWriter);


                if (localFactorDisplayValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorDisplayValue);

                }

                xmlWriter.writeEndElement();
            } if (localFactorIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorID", xmlWriter);


                if (localFactorID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorID);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskID"));

                elementList.add(localERiskID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskID));
            } if (localBrightSpotIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brightSpotID"));

                elementList.add(localBrightSpotID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrightSpotID));
            } if (localBrightSpotNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brightSpotName"));

                elementList.add(localBrightSpotName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrightSpotName));
            } if (localBrightSpotOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brightSpotOrder"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrightSpotOrder));
            } if (localBrightSpotTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "brightSpotType"));

                elementList.add(localBrightSpotType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrightSpotType));
            } if (localFactorDisplayValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorDisplayValue"));

                elementList.add(localFactorDisplayValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorDisplayValue));
            } if (localFactorIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorID"));

                elementList.add(localFactorID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorID));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMRiskBrightSpotList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMRiskBrightSpotList object =
                        new FEMRiskBrightSpotList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMRiskBrightSpotList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMRiskBrightSpotList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brightSpotID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBrightSpotID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brightSpotName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBrightSpotName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brightSpotOrder").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setBrightSpotOrder(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setBrightSpotOrder(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","brightSpotType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBrightSpotType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorDisplayValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorDisplayValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMRiskSaleArea
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMRiskSaleArea
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskID
         */


        protected java.lang.String localERiskID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskIDTracker = false ;

        public boolean isERiskIDSpecified(){
            return localERiskIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskID(){
            return localERiskID;
        }



        /**
         * Auto generated setter method
         * @param param ERiskID
         */
        public void setERiskID(java.lang.String param){
            localERiskIDTracker = true;

            this.localERiskID=param;


        }


        /**
         * field for AreaCode
         */


        protected java.lang.String localAreaCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAreaCodeTracker = false ;

        public boolean isAreaCodeSpecified(){
            return localAreaCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAreaCode(){
            return localAreaCode;
        }



        /**
         * Auto generated setter method
         * @param param AreaCode
         */
        public void setAreaCode(java.lang.String param){
            localAreaCodeTracker = true;

            this.localAreaCode=param;


        }


        /**
         * field for AreaName
         */


        protected java.lang.String localAreaName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAreaNameTracker = false ;

        public boolean isAreaNameSpecified(){
            return localAreaNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAreaName(){
            return localAreaName;
        }



        /**
         * Auto generated setter method
         * @param param AreaName
         */
        public void setAreaName(java.lang.String param){
            localAreaNameTracker = true;

            this.localAreaName=param;


        }


        /**
         * field for CityCode
         */


        protected java.lang.String localCityCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCityCodeTracker = false ;

        public boolean isCityCodeSpecified(){
            return localCityCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCityCode(){
            return localCityCode;
        }



        /**
         * Auto generated setter method
         * @param param CityCode
         */
        public void setCityCode(java.lang.String param){
            localCityCodeTracker = true;

            this.localCityCode=param;


        }


        /**
         * field for CityName
         */


        protected java.lang.String localCityName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localCityNameTracker = false ;

        public boolean isCityNameSpecified(){
            return localCityNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getCityName(){
            return localCityName;
        }



        /**
         * Auto generated setter method
         * @param param CityName
         */
        public void setCityName(java.lang.String param){
            localCityNameTracker = true;

            this.localCityName=param;


        }


        /**
         * field for ProvinceCode
         */


        protected java.lang.String localProvinceCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localProvinceCodeTracker = false ;

        public boolean isProvinceCodeSpecified(){
            return localProvinceCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getProvinceCode(){
            return localProvinceCode;
        }



        /**
         * Auto generated setter method
         * @param param ProvinceCode
         */
        public void setProvinceCode(java.lang.String param){
            localProvinceCodeTracker = true;

            this.localProvinceCode=param;


        }


        /**
         * field for ProvinceName
         */


        protected java.lang.String localProvinceName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localProvinceNameTracker = false ;

        public boolean isProvinceNameSpecified(){
            return localProvinceNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getProvinceName(){
            return localProvinceName;
        }



        /**
         * Auto generated setter method
         * @param param ProvinceName
         */
        public void setProvinceName(java.lang.String param){
            localProvinceNameTracker = true;

            this.localProvinceName=param;


        }


        /**
         * field for SaleID
         */


        protected java.lang.String localSaleID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSaleIDTracker = false ;

        public boolean isSaleIDSpecified(){
            return localSaleIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSaleID(){
            return localSaleID;
        }



        /**
         * Auto generated setter method
         * @param param SaleID
         */
        public void setSaleID(java.lang.String param){
            localSaleIDTracker = true;

            this.localSaleID=param;


        }


        /**
         * field for SupplierCode
         */


        protected java.lang.String localSupplierCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localSupplierCodeTracker = false ;

        public boolean isSupplierCodeSpecified(){
            return localSupplierCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getSupplierCode(){
            return localSupplierCode;
        }



        /**
         * Auto generated setter method
         * @param param SupplierCode
         */
        public void setSupplierCode(java.lang.String param){
            localSupplierCodeTracker = true;

            this.localSupplierCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMRiskSaleArea",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMRiskSaleArea",
                            xmlWriter);
                }


            }
            if (localERiskIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskID", xmlWriter);


                if (localERiskID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskID);

                }

                xmlWriter.writeEndElement();
            } if (localAreaCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "areaCode", xmlWriter);


                if (localAreaCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAreaCode);

                }

                xmlWriter.writeEndElement();
            } if (localAreaNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "areaName", xmlWriter);


                if (localAreaName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAreaName);

                }

                xmlWriter.writeEndElement();
            } if (localCityCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "cityCode", xmlWriter);


                if (localCityCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCityCode);

                }

                xmlWriter.writeEndElement();
            } if (localCityNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "cityName", xmlWriter);


                if (localCityName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localCityName);

                }

                xmlWriter.writeEndElement();
            } if (localProvinceCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "provinceCode", xmlWriter);


                if (localProvinceCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localProvinceCode);

                }

                xmlWriter.writeEndElement();
            } if (localProvinceNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "provinceName", xmlWriter);


                if (localProvinceName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localProvinceName);

                }

                xmlWriter.writeEndElement();
            } if (localSaleIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "saleID", xmlWriter);


                if (localSaleID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSaleID);

                }

                xmlWriter.writeEndElement();
            } if (localSupplierCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "supplierCode", xmlWriter);


                if (localSupplierCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localSupplierCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskID"));

                elementList.add(localERiskID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskID));
            } if (localAreaCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "areaCode"));

                elementList.add(localAreaCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAreaCode));
            } if (localAreaNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "areaName"));

                elementList.add(localAreaName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAreaName));
            } if (localCityCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "cityCode"));

                elementList.add(localCityCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityCode));
            } if (localCityNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "cityName"));

                elementList.add(localCityName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityName));
            } if (localProvinceCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "provinceCode"));

                elementList.add(localProvinceCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProvinceCode));
            } if (localProvinceNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "provinceName"));

                elementList.add(localProvinceName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProvinceName));
            } if (localSaleIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "saleID"));

                elementList.add(localSaleID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSaleID));
            } if (localSupplierCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "supplierCode"));

                elementList.add(localSupplierCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMRiskSaleArea parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMRiskSaleArea object =
                        new FEMRiskSaleArea();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMRiskSaleArea".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMRiskSaleArea)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","areaCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAreaCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","areaName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAreaName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","cityCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCityCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","cityName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setCityName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","provinceCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setProvinceCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","provinceName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setProvinceName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","saleID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSaleID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","supplierCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setSupplierCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class ResultDTO
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ResultDTO
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for ResultCode
         */


        protected java.lang.String localResultCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResultCodeTracker = false ;

        public boolean isResultCodeSpecified(){
            return localResultCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResultCode(){
            return localResultCode;
        }



        /**
         * Auto generated setter method
         * @param param ResultCode
         */
        public void setResultCode(java.lang.String param){
            localResultCodeTracker = true;

            this.localResultCode=param;


        }


        /**
         * field for ResultInfoDesc
         */


        protected java.lang.String localResultInfoDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResultInfoDescTracker = false ;

        public boolean isResultInfoDescSpecified(){
            return localResultInfoDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResultInfoDesc(){
            return localResultInfoDesc;
        }



        /**
         * Auto generated setter method
         * @param param ResultInfoDesc
         */
        public void setResultInfoDesc(java.lang.String param){
            localResultInfoDescTracker = true;

            this.localResultInfoDesc=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":ResultDTO",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "ResultDTO",
                            xmlWriter);
                }


            }
            if (localResultCodeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "resultCode", xmlWriter);


                if (localResultCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResultCode);

                }

                xmlWriter.writeEndElement();
            } if (localResultInfoDescTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "resultInfoDesc", xmlWriter);


                if (localResultInfoDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResultInfoDesc);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localResultCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "resultCode"));

                elementList.add(localResultCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResultCode));
            } if (localResultInfoDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "resultInfoDesc"));

                elementList.add(localResultInfoDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResultInfoDesc));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static ResultDTO parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                ResultDTO object =
                        new ResultDTO();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ResultDTO".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ResultDTO)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","resultCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResultCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","resultInfoDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResultInfoDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMRiskFactorRela
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMRiskFactorRela
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ID
         */


        protected java.lang.String localID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIDTracker = false ;

        public boolean isIDSpecified(){
            return localIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getID(){
            return localID;
        }



        /**
         * Auto generated setter method
         * @param param ID
         */
        public void setID(java.lang.String param){
            localIDTracker = true;

            this.localID=param;


        }


        /**
         * field for AppFactorCode1
         */


        protected java.lang.String localAppFactorCode1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCode1Tracker = false ;

        public boolean isAppFactorCode1Specified(){
            return localAppFactorCode1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode1(){
            return localAppFactorCode1;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode1
         */
        public void setAppFactorCode1(java.lang.String param){
            localAppFactorCode1Tracker = true;

            this.localAppFactorCode1=param;


        }


        /**
         * field for AppFactorCode2
         */


        protected java.lang.String localAppFactorCode2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCode2Tracker = false ;

        public boolean isAppFactorCode2Specified(){
            return localAppFactorCode2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode2(){
            return localAppFactorCode2;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode2
         */
        public void setAppFactorCode2(java.lang.String param){
            localAppFactorCode2Tracker = true;

            this.localAppFactorCode2=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for BackUp3
         */


        protected java.lang.String localBackUp3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp3Tracker = false ;

        public boolean isBackUp3Specified(){
            return localBackUp3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp3(){
            return localBackUp3;
        }



        /**
         * Auto generated setter method
         * @param param BackUp3
         */
        public void setBackUp3(java.lang.String param){
            localBackUp3Tracker = true;

            this.localBackUp3=param;


        }


        /**
         * field for BackUp4
         */


        protected java.lang.String localBackUp4 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp4Tracker = false ;

        public boolean isBackUp4Specified(){
            return localBackUp4Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp4(){
            return localBackUp4;
        }



        /**
         * Auto generated setter method
         * @param param BackUp4
         */
        public void setBackUp4(java.lang.String param){
            localBackUp4Tracker = true;

            this.localBackUp4=param;


        }


        /**
         * field for BackUp5
         */


        protected java.lang.String localBackUp5 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp5Tracker = false ;

        public boolean isBackUp5Specified(){
            return localBackUp5Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp5(){
            return localBackUp5;
        }



        /**
         * Auto generated setter method
         * @param param BackUp5
         */
        public void setBackUp5(java.lang.String param){
            localBackUp5Tracker = true;

            this.localBackUp5=param;


        }


        /**
         * field for FactorDisplayValue1
         */


        protected java.lang.String localFactorDisplayValue1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorDisplayValue1Tracker = false ;

        public boolean isFactorDisplayValue1Specified(){
            return localFactorDisplayValue1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorDisplayValue1(){
            return localFactorDisplayValue1;
        }



        /**
         * Auto generated setter method
         * @param param FactorDisplayValue1
         */
        public void setFactorDisplayValue1(java.lang.String param){
            localFactorDisplayValue1Tracker = true;

            this.localFactorDisplayValue1=param;


        }


        /**
         * field for FactorDisplayValue2
         */


        protected java.lang.String localFactorDisplayValue2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorDisplayValue2Tracker = false ;

        public boolean isFactorDisplayValue2Specified(){
            return localFactorDisplayValue2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorDisplayValue2(){
            return localFactorDisplayValue2;
        }



        /**
         * Auto generated setter method
         * @param param FactorDisplayValue2
         */
        public void setFactorDisplayValue2(java.lang.String param){
            localFactorDisplayValue2Tracker = true;

            this.localFactorDisplayValue2=param;


        }


        /**
         * field for FactorType1
         */


        protected java.lang.String localFactorType1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorType1Tracker = false ;

        public boolean isFactorType1Specified(){
            return localFactorType1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorType1(){
            return localFactorType1;
        }



        /**
         * Auto generated setter method
         * @param param FactorType1
         */
        public void setFactorType1(java.lang.String param){
            localFactorType1Tracker = true;

            this.localFactorType1=param;


        }


        /**
         * field for FactorType2
         */


        protected java.lang.String localFactorType2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorType2Tracker = false ;

        public boolean isFactorType2Specified(){
            return localFactorType2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorType2(){
            return localFactorType2;
        }



        /**
         * Auto generated setter method
         * @param param FactorType2
         */
        public void setFactorType2(java.lang.String param){
            localFactorType2Tracker = true;

            this.localFactorType2=param;


        }


        /**
         * field for FactorValue1
         */


        protected java.lang.String localFactorValue1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValue1Tracker = false ;

        public boolean isFactorValue1Specified(){
            return localFactorValue1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorValue1(){
            return localFactorValue1;
        }



        /**
         * Auto generated setter method
         * @param param FactorValue1
         */
        public void setFactorValue1(java.lang.String param){
            localFactorValue1Tracker = true;

            this.localFactorValue1=param;


        }


        /**
         * field for FactorValue2
         */


        protected java.lang.String localFactorValue2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValue2Tracker = false ;

        public boolean isFactorValue2Specified(){
            return localFactorValue2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorValue2(){
            return localFactorValue2;
        }



        /**
         * Auto generated setter method
         * @param param FactorValue2
         */
        public void setFactorValue2(java.lang.String param){
            localFactorValue2Tracker = true;

            this.localFactorValue2=param;


        }


        /**
         * field for FactorValueOrder
         */


        protected int localFactorValueOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValueOrderTracker = false ;

        public boolean isFactorValueOrderSpecified(){
            return localFactorValueOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getFactorValueOrder(){
            return localFactorValueOrder;
        }



        /**
         * Auto generated setter method
         * @param param FactorValueOrder
         */
        public void setFactorValueOrder(int param){

            // setting primitive attribute tracker to true
            localFactorValueOrderTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localFactorValueOrder=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMRiskFactorRela",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMRiskFactorRela",
                            xmlWriter);
                }


            }
            if (localIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ID", xmlWriter);


                if (localID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localID);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorCode1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode1", xmlWriter);


                if (localAppFactorCode1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode1);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorCode2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode2", xmlWriter);


                if (localAppFactorCode2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp3", xmlWriter);


                if (localBackUp3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp4Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp4", xmlWriter);


                if (localBackUp4==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp4);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp5Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp5", xmlWriter);


                if (localBackUp5==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp5);

                }

                xmlWriter.writeEndElement();
            } if (localFactorDisplayValue1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorDisplayValue1", xmlWriter);


                if (localFactorDisplayValue1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorDisplayValue1);

                }

                xmlWriter.writeEndElement();
            } if (localFactorDisplayValue2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorDisplayValue2", xmlWriter);


                if (localFactorDisplayValue2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorDisplayValue2);

                }

                xmlWriter.writeEndElement();
            } if (localFactorType1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorType1", xmlWriter);


                if (localFactorType1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorType1);

                }

                xmlWriter.writeEndElement();
            } if (localFactorType2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorType2", xmlWriter);


                if (localFactorType2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorType2);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValue1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValue1", xmlWriter);


                if (localFactorValue1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorValue1);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValue2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValue2", xmlWriter);


                if (localFactorValue2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorValue2);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValueOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValueOrder", xmlWriter);

                if (localFactorValueOrder==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("factorValueOrder cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValueOrder));
                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ID"));

                elementList.add(localID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localID));
            } if (localAppFactorCode1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode1"));

                elementList.add(localAppFactorCode1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode1));
            } if (localAppFactorCode2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode2"));

                elementList.add(localAppFactorCode2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode2));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localBackUp3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp3"));

                elementList.add(localBackUp3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp3));
            } if (localBackUp4Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp4"));

                elementList.add(localBackUp4==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp4));
            } if (localBackUp5Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp5"));

                elementList.add(localBackUp5==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp5));
            } if (localFactorDisplayValue1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorDisplayValue1"));

                elementList.add(localFactorDisplayValue1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorDisplayValue1));
            } if (localFactorDisplayValue2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorDisplayValue2"));

                elementList.add(localFactorDisplayValue2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorDisplayValue2));
            } if (localFactorType1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorType1"));

                elementList.add(localFactorType1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorType1));
            } if (localFactorType2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorType2"));

                elementList.add(localFactorType2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorType2));
            } if (localFactorValue1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValue1"));

                elementList.add(localFactorValue1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValue1));
            } if (localFactorValue2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValue2"));

                elementList.add(localFactorValue2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValue2));
            } if (localFactorValueOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValueOrder"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValueOrder));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMRiskFactorRela parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMRiskFactorRela object =
                        new FEMRiskFactorRela();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMRiskFactorRela".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMRiskFactorRela)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp4").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp4(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp5").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp5(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorDisplayValue1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorDisplayValue1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorDisplayValue2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorDisplayValue2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorType1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorType1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorType2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorType2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValue1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorValue1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValue2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorValue2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValueOrder").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setFactorValueOrder(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setFactorValueOrder(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class GetProductInfoResponse
            implements org.apache.axis2.databinding.ADBBean{

        public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://service.webService.ebusiness.sinosoft.com",
                "getProductInfoResponse",
                "ns3");



        /**
         * field for _return
         */


        protected ProductInfoResponse local_return ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean local_returnTracker = false ;

        public boolean is_returnSpecified(){
            return local_returnTracker;
        }



        /**
         * Auto generated getter method
         * @return ProductInfoResponse
         */
        public  ProductInfoResponse get_return(){
            return local_return;
        }



        /**
         * Auto generated setter method
         * @param param _return
         */
        public void set_return(ProductInfoResponse param){
            local_returnTracker = true;

            this.local_return=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
            return factory.createOMElement(dataSource,MY_QNAME);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://service.webService.ebusiness.sinosoft.com");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":getProductInfoResponse",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "getProductInfoResponse",
                            xmlWriter);
                }


            }
            if (local_returnTracker){
                if (local_return==null){

                    writeStartElement(null, "http://service.webService.ebusiness.sinosoft.com", "return", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    local_return.serialize(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com","return"),
                            xmlWriter);
                }
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://service.webService.ebusiness.sinosoft.com")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (local_returnTracker){
                elementList.add(new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com",
                        "return"));


                elementList.add(local_return==null?null:
                        local_return);
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static GetProductInfoResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                GetProductInfoResponse object =
                        new GetProductInfoResponse();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"getProductInfoResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetProductInfoResponse)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://service.webService.ebusiness.sinosoft.com","return").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.set_return(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.set_return(ProductInfoResponse.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEUIInfo
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEUIInfo
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for FEUIInfoValue
         * This was an Array!
         */


        protected FEUIInfoValue[] localFEUIInfoValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEUIInfoValueTracker = false ;

        public boolean isFEUIInfoValueSpecified(){
            return localFEUIInfoValueTracker;
        }



        /**
         * Auto generated getter method
         * @return FEUIInfoValue[]
         */
        public  FEUIInfoValue[] getFEUIInfoValue(){
            return localFEUIInfoValue;
        }






        /**
         * validate the array for FEUIInfoValue
         */
        protected void validateFEUIInfoValue(FEUIInfoValue[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEUIInfoValue
         */
        public void setFEUIInfoValue(FEUIInfoValue[] param){

            validateFEUIInfoValue(param);

            localFEUIInfoValueTracker = true;

            this.localFEUIInfoValue=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEUIInfoValue
         */
        public void addFEUIInfoValue(FEUIInfoValue param){
            if (localFEUIInfoValue == null){
                localFEUIInfoValue = new FEUIInfoValue[]{};
            }


            //update the setting tracker
            localFEUIInfoValueTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEUIInfoValue);
            list.add(param);
            this.localFEUIInfoValue =
                    (FEUIInfoValue[])list.toArray(
                            new FEUIInfoValue[list.size()]);

        }


        /**
         * field for UIInfo
         */


        protected java.lang.String localUIInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoTracker = false ;

        public boolean isUIInfoSpecified(){
            return localUIInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfo(){
            return localUIInfo;
        }



        /**
         * Auto generated setter method
         * @param param UIInfo
         */
        public void setUIInfo(java.lang.String param){
            localUIInfoTracker = true;

            this.localUIInfo=param;


        }


        /**
         * field for UIInfoID
         */


        protected java.lang.String localUIInfoID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localUIInfoIDTracker = false ;

        public boolean isUIInfoIDSpecified(){
            return localUIInfoIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getUIInfoID(){
            return localUIInfoID;
        }



        /**
         * Auto generated setter method
         * @param param UIInfoID
         */
        public void setUIInfoID(java.lang.String param){
            localUIInfoIDTracker = true;

            this.localUIInfoID=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for BackUp3
         */


        protected java.lang.String localBackUp3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp3Tracker = false ;

        public boolean isBackUp3Specified(){
            return localBackUp3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp3(){
            return localBackUp3;
        }



        /**
         * Auto generated setter method
         * @param param BackUp3
         */
        public void setBackUp3(java.lang.String param){
            localBackUp3Tracker = true;

            this.localBackUp3=param;


        }


        /**
         * field for BackUp4
         */


        protected java.lang.String localBackUp4 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp4Tracker = false ;

        public boolean isBackUp4Specified(){
            return localBackUp4Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp4(){
            return localBackUp4;
        }



        /**
         * Auto generated setter method
         * @param param BackUp4
         */
        public void setBackUp4(java.lang.String param){
            localBackUp4Tracker = true;

            this.localBackUp4=param;


        }


        /**
         * field for DataType
         */


        protected java.lang.String localDataType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDataTypeTracker = false ;

        public boolean isDataTypeSpecified(){
            return localDataTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDataType(){
            return localDataType;
        }



        /**
         * Auto generated setter method
         * @param param DataType
         */
        public void setDataType(java.lang.String param){
            localDataTypeTracker = true;

            this.localDataType=param;


        }


        /**
         * field for IsDisplay
         */


        protected java.lang.String localIsDisplay ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDisplayTracker = false ;

        public boolean isIsDisplaySpecified(){
            return localIsDisplayTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDisplay(){
            return localIsDisplay;
        }



        /**
         * Auto generated setter method
         * @param param IsDisplay
         */
        public void setIsDisplay(java.lang.String param){
            localIsDisplayTracker = true;

            this.localIsDisplay=param;


        }


        /**
         * field for IsMustInput
         */


        protected java.lang.String localIsMustInput ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsMustInputTracker = false ;

        public boolean isIsMustInputSpecified(){
            return localIsMustInputTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsMustInput(){
            return localIsMustInput;
        }



        /**
         * Auto generated setter method
         * @param param IsMustInput
         */
        public void setIsMustInput(java.lang.String param){
            localIsMustInputTracker = true;

            this.localIsMustInput=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for ShowDistrict
         */


        protected java.lang.String localShowDistrict ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowDistrictTracker = false ;

        public boolean isShowDistrictSpecified(){
            return localShowDistrictTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowDistrict(){
            return localShowDistrict;
        }



        /**
         * Auto generated setter method
         * @param param ShowDistrict
         */
        public void setShowDistrict(java.lang.String param){
            localShowDistrictTracker = true;

            this.localShowDistrict=param;


        }


        /**
         * field for ShowInfo
         */


        protected java.lang.String localShowInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowInfoTracker = false ;

        public boolean isShowInfoSpecified(){
            return localShowInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowInfo(){
            return localShowInfo;
        }



        /**
         * Auto generated setter method
         * @param param ShowInfo
         */
        public void setShowInfo(java.lang.String param){
            localShowInfoTracker = true;

            this.localShowInfo=param;


        }


        /**
         * field for ShowInfoCode
         */


        protected java.lang.String localShowInfoCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowInfoCodeTracker = false ;

        public boolean isShowInfoCodeSpecified(){
            return localShowInfoCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowInfoCode(){
            return localShowInfoCode;
        }



        /**
         * Auto generated setter method
         * @param param ShowInfoCode
         */
        public void setShowInfoCode(java.lang.String param){
            localShowInfoCodeTracker = true;

            this.localShowInfoCode=param;


        }


        /**
         * field for ShowInfoType
         */


        protected java.lang.String localShowInfoType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowInfoTypeTracker = false ;

        public boolean isShowInfoTypeSpecified(){
            return localShowInfoTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowInfoType(){
            return localShowInfoType;
        }



        /**
         * Auto generated setter method
         * @param param ShowInfoType
         */
        public void setShowInfoType(java.lang.String param){
            localShowInfoTypeTracker = true;

            this.localShowInfoType=param;


        }


        /**
         * field for ShowOrder
         */


        protected java.lang.String localShowOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localShowOrderTracker = false ;

        public boolean isShowOrderSpecified(){
            return localShowOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getShowOrder(){
            return localShowOrder;
        }



        /**
         * Auto generated setter method
         * @param param ShowOrder
         */
        public void setShowOrder(java.lang.String param){
            localShowOrderTracker = true;

            this.localShowOrder=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEUIInfo",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEUIInfo",
                            xmlWriter);
                }


            }
            if (localFEUIInfoValueTracker){
                if (localFEUIInfoValue!=null){
                    for (int i = 0;i < localFEUIInfoValue.length;i++){
                        if (localFEUIInfoValue[i] != null){
                            localFEUIInfoValue[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfoValue"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEUIInfoValue", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEUIInfoValue", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localUIInfoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfo", xmlWriter);


                if (localUIInfo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfo);

                }

                xmlWriter.writeEndElement();
            } if (localUIInfoIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "UIInfoID", xmlWriter);


                if (localUIInfoID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localUIInfoID);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp3", xmlWriter);


                if (localBackUp3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp4Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp4", xmlWriter);


                if (localBackUp4==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp4);

                }

                xmlWriter.writeEndElement();
            } if (localDataTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dataType", xmlWriter);


                if (localDataType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDataType);

                }

                xmlWriter.writeEndElement();
            } if (localIsDisplayTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDisplay", xmlWriter);


                if (localIsDisplay==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDisplay);

                }

                xmlWriter.writeEndElement();
            } if (localIsMustInputTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isMustInput", xmlWriter);


                if (localIsMustInput==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsMustInput);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localShowDistrictTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showDistrict", xmlWriter);


                if (localShowDistrict==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowDistrict);

                }

                xmlWriter.writeEndElement();
            } if (localShowInfoTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showInfo", xmlWriter);


                if (localShowInfo==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowInfo);

                }

                xmlWriter.writeEndElement();
            } if (localShowInfoCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showInfoCode", xmlWriter);


                if (localShowInfoCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowInfoCode);

                }

                xmlWriter.writeEndElement();
            } if (localShowInfoTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showInfoType", xmlWriter);


                if (localShowInfoType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowInfoType);

                }

                xmlWriter.writeEndElement();
            } if (localShowOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "showOrder", xmlWriter);


                if (localShowOrder==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localShowOrder);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localFEUIInfoValueTracker){
                if (localFEUIInfoValue!=null) {
                    for (int i = 0;i < localFEUIInfoValue.length;i++){

                        if (localFEUIInfoValue[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEUIInfoValue"));
                            elementList.add(localFEUIInfoValue[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEUIInfoValue"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEUIInfoValue"));
                    elementList.add(localFEUIInfoValue);

                }

            } if (localUIInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfo"));

                elementList.add(localUIInfo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfo));
            } if (localUIInfoIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "UIInfoID"));

                elementList.add(localUIInfoID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUIInfoID));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localBackUp3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp3"));

                elementList.add(localBackUp3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp3));
            } if (localBackUp4Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp4"));

                elementList.add(localBackUp4==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp4));
            } if (localDataTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dataType"));

                elementList.add(localDataType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataType));
            } if (localIsDisplayTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDisplay"));

                elementList.add(localIsDisplay==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDisplay));
            } if (localIsMustInputTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isMustInput"));

                elementList.add(localIsMustInput==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsMustInput));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localShowDistrictTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showDistrict"));

                elementList.add(localShowDistrict==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowDistrict));
            } if (localShowInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showInfo"));

                elementList.add(localShowInfo==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowInfo));
            } if (localShowInfoCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showInfoCode"));

                elementList.add(localShowInfoCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowInfoCode));
            } if (localShowInfoTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showInfoType"));

                elementList.add(localShowInfoType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowInfoType));
            } if (localShowOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "showOrder"));

                elementList.add(localShowOrder==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShowOrder));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEUIInfo parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEUIInfo object =
                        new FEUIInfo();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEUIInfo".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEUIInfo)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list1 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfoValue").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list1.add(null);
                            reader.next();
                        } else {
                            list1.add(FEUIInfoValue.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone1 = false;
                        while(!loopDone1){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone1 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEUIInfoValue").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list1.add(null);
                                        reader.next();
                                    } else {
                                        list1.add(FEUIInfoValue.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone1 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEUIInfoValue((FEUIInfoValue[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEUIInfoValue.class,
                                        list1));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","UIInfoID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setUIInfoID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp4").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp4(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dataType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDataType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDisplay").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDisplay(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isMustInput").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsMustInput(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showDistrict").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowDistrict(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowInfo(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showInfoCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowInfoCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showInfoType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowInfoType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","showOrder").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setShowOrder(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMDutyAmntPremList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMDutyAmntPremList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for Amnt
         */


        protected java.lang.String localAmnt ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAmntTracker = false ;

        public boolean isAmntSpecified(){
            return localAmntTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAmnt(){
            return localAmnt;
        }



        /**
         * Auto generated setter method
         * @param param Amnt
         */
        public void setAmnt(java.lang.String param){
            localAmntTracker = true;

            this.localAmnt=param;


        }


        /**
         * field for AmntPremListID
         */


        protected java.lang.String localAmntPremListID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAmntPremListIDTracker = false ;

        public boolean isAmntPremListIDSpecified(){
            return localAmntPremListIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAmntPremListID(){
            return localAmntPremListID;
        }



        /**
         * Auto generated setter method
         * @param param AmntPremListID
         */
        public void setAmntPremListID(java.lang.String param){
            localAmntPremListIDTracker = true;

            this.localAmntPremListID=param;


        }


        /**
         * field for AppFactorCode
         */


        protected java.lang.String localAppFactorCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCodeTracker = false ;

        public boolean isAppFactorCodeSpecified(){
            return localAppFactorCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode(){
            return localAppFactorCode;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode
         */
        public void setAppFactorCode(java.lang.String param){
            localAppFactorCodeTracker = true;

            this.localAppFactorCode=param;


        }


        /**
         * field for AppFactorCode2
         */


        protected java.lang.String localAppFactorCode2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCode2Tracker = false ;

        public boolean isAppFactorCode2Specified(){
            return localAppFactorCode2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode2(){
            return localAppFactorCode2;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode2
         */
        public void setAppFactorCode2(java.lang.String param){
            localAppFactorCode2Tracker = true;

            this.localAppFactorCode2=param;


        }


        /**
         * field for AppFactorCode3
         */


        protected java.lang.String localAppFactorCode3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCode3Tracker = false ;

        public boolean isAppFactorCode3Specified(){
            return localAppFactorCode3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode3(){
            return localAppFactorCode3;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode3
         */
        public void setAppFactorCode3(java.lang.String param){
            localAppFactorCode3Tracker = true;

            this.localAppFactorCode3=param;


        }


        /**
         * field for AppFactorValue
         */


        protected java.lang.String localAppFactorValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorValueTracker = false ;

        public boolean isAppFactorValueSpecified(){
            return localAppFactorValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorValue(){
            return localAppFactorValue;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorValue
         */
        public void setAppFactorValue(java.lang.String param){
            localAppFactorValueTracker = true;

            this.localAppFactorValue=param;


        }


        /**
         * field for AppFactorValue2
         */


        protected java.lang.String localAppFactorValue2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorValue2Tracker = false ;

        public boolean isAppFactorValue2Specified(){
            return localAppFactorValue2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorValue2(){
            return localAppFactorValue2;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorValue2
         */
        public void setAppFactorValue2(java.lang.String param){
            localAppFactorValue2Tracker = true;

            this.localAppFactorValue2=param;


        }


        /**
         * field for AppFactorValue3
         */


        protected java.lang.String localAppFactorValue3 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorValue3Tracker = false ;

        public boolean isAppFactorValue3Specified(){
            return localAppFactorValue3Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorValue3(){
            return localAppFactorValue3;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorValue3
         */
        public void setAppFactorValue3(java.lang.String param){
            localAppFactorValue3Tracker = true;

            this.localAppFactorValue3=param;


        }


        /**
         * field for BackUp1
         */


        protected java.lang.String localBackUp1 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp1Tracker = false ;

        public boolean isBackUp1Specified(){
            return localBackUp1Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp1(){
            return localBackUp1;
        }



        /**
         * Auto generated setter method
         * @param param BackUp1
         */
        public void setBackUp1(java.lang.String param){
            localBackUp1Tracker = true;

            this.localBackUp1=param;


        }


        /**
         * field for BackUp2
         */


        protected java.lang.String localBackUp2 ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localBackUp2Tracker = false ;

        public boolean isBackUp2Specified(){
            return localBackUp2Tracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getBackUp2(){
            return localBackUp2;
        }



        /**
         * Auto generated setter method
         * @param param BackUp2
         */
        public void setBackUp2(java.lang.String param){
            localBackUp2Tracker = true;

            this.localBackUp2=param;


        }


        /**
         * field for DutyFactorID
         */


        protected java.lang.String localDutyFactorID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorIDTracker = false ;

        public boolean isDutyFactorIDSpecified(){
            return localDutyFactorIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorID(){
            return localDutyFactorID;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorID
         */
        public void setDutyFactorID(java.lang.String param){
            localDutyFactorIDTracker = true;

            this.localDutyFactorID=param;


        }


        /**
         * field for DutyFactorType
         */


        protected java.lang.String localDutyFactorType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorTypeTracker = false ;

        public boolean isDutyFactorTypeSpecified(){
            return localDutyFactorTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorType(){
            return localDutyFactorType;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorType
         */
        public void setDutyFactorType(java.lang.String param){
            localDutyFactorTypeTracker = true;

            this.localDutyFactorType=param;


        }


        /**
         * field for PayPeriod
         */


        protected java.lang.String localPayPeriod ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPayPeriodTracker = false ;

        public boolean isPayPeriodSpecified(){
            return localPayPeriodTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPayPeriod(){
            return localPayPeriod;
        }



        /**
         * Auto generated setter method
         * @param param PayPeriod
         */
        public void setPayPeriod(java.lang.String param){
            localPayPeriodTracker = true;

            this.localPayPeriod=param;


        }


        /**
         * field for Prem
         */


        protected java.lang.String localPrem ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localPremTracker = false ;

        public boolean isPremSpecified(){
            return localPremTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getPrem(){
            return localPrem;
        }



        /**
         * Auto generated setter method
         * @param param Prem
         */
        public void setPrem(java.lang.String param){
            localPremTracker = true;

            this.localPrem=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMDutyAmntPremList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMDutyAmntPremList",
                            xmlWriter);
                }


            }
            if (localAmntTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "amnt", xmlWriter);


                if (localAmnt==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAmnt);

                }

                xmlWriter.writeEndElement();
            } if (localAmntPremListIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "amntPremListID", xmlWriter);


                if (localAmntPremListID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAmntPremListID);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode", xmlWriter);


                if (localAppFactorCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorCode2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode2", xmlWriter);


                if (localAppFactorCode2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode2);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorCode3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode3", xmlWriter);


                if (localAppFactorCode3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode3);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorValue", xmlWriter);


                if (localAppFactorValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorValue);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorValue2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorValue2", xmlWriter);


                if (localAppFactorValue2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorValue2);

                }

                xmlWriter.writeEndElement();
            } if (localAppFactorValue3Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorValue3", xmlWriter);


                if (localAppFactorValue3==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorValue3);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp1Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp1", xmlWriter);


                if (localBackUp1==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp1);

                }

                xmlWriter.writeEndElement();
            } if (localBackUp2Tracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "backUp2", xmlWriter);


                if (localBackUp2==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localBackUp2);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFactorIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorID", xmlWriter);


                if (localDutyFactorID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorID);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFactorTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorType", xmlWriter);


                if (localDutyFactorType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorType);

                }

                xmlWriter.writeEndElement();
            } if (localPayPeriodTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "payPeriod", xmlWriter);


                if (localPayPeriod==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPayPeriod);

                }

                xmlWriter.writeEndElement();
            } if (localPremTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "prem", xmlWriter);


                if (localPrem==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localPrem);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localAmntTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "amnt"));

                elementList.add(localAmnt==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmnt));
            } if (localAmntPremListIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "amntPremListID"));

                elementList.add(localAmntPremListID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmntPremListID));
            } if (localAppFactorCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode"));

                elementList.add(localAppFactorCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode));
            } if (localAppFactorCode2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode2"));

                elementList.add(localAppFactorCode2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode2));
            } if (localAppFactorCode3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode3"));

                elementList.add(localAppFactorCode3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode3));
            } if (localAppFactorValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorValue"));

                elementList.add(localAppFactorValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorValue));
            } if (localAppFactorValue2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorValue2"));

                elementList.add(localAppFactorValue2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorValue2));
            } if (localAppFactorValue3Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorValue3"));

                elementList.add(localAppFactorValue3==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorValue3));
            } if (localBackUp1Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp1"));

                elementList.add(localBackUp1==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp1));
            } if (localBackUp2Tracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "backUp2"));

                elementList.add(localBackUp2==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBackUp2));
            } if (localDutyFactorIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorID"));

                elementList.add(localDutyFactorID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorID));
            } if (localDutyFactorTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorType"));

                elementList.add(localDutyFactorType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorType));
            } if (localPayPeriodTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "payPeriod"));

                elementList.add(localPayPeriod==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayPeriod));
            } if (localPremTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "prem"));

                elementList.add(localPrem==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrem));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMDutyAmntPremList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMDutyAmntPremList object =
                        new FEMDutyAmntPremList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMDutyAmntPremList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMDutyAmntPremList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","amnt").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAmnt(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","amntPremListID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAmntPremListID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorValue2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorValue2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorValue3").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorValue3(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp1").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp1(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","backUp2").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setBackUp2(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","payPeriod").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPayPeriod(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","prem").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setPrem(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMDutyFactor
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMDutyFactor
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ERiskID
         */


        protected java.lang.String localERiskID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localERiskIDTracker = false ;

        public boolean isERiskIDSpecified(){
            return localERiskIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getERiskID(){
            return localERiskID;
        }



        /**
         * Auto generated setter method
         * @param param ERiskID
         */
        public void setERiskID(java.lang.String param){
            localERiskIDTracker = true;

            this.localERiskID=param;


        }


        /**
         * field for FEMDutyAmntPremList
         * This was an Array!
         */


        protected FEMDutyAmntPremList[] localFEMDutyAmntPremList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMDutyAmntPremListTracker = false ;

        public boolean isFEMDutyAmntPremListSpecified(){
            return localFEMDutyAmntPremListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMDutyAmntPremList[]
         */
        public  FEMDutyAmntPremList[] getFEMDutyAmntPremList(){
            return localFEMDutyAmntPremList;
        }






        /**
         * validate the array for FEMDutyAmntPremList
         */
        protected void validateFEMDutyAmntPremList(FEMDutyAmntPremList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMDutyAmntPremList
         */
        public void setFEMDutyAmntPremList(FEMDutyAmntPremList[] param){

            validateFEMDutyAmntPremList(param);

            localFEMDutyAmntPremListTracker = true;

            this.localFEMDutyAmntPremList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMDutyAmntPremList
         */
        public void addFEMDutyAmntPremList(FEMDutyAmntPremList param){
            if (localFEMDutyAmntPremList == null){
                localFEMDutyAmntPremList = new FEMDutyAmntPremList[]{};
            }


            //update the setting tracker
            localFEMDutyAmntPremListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMDutyAmntPremList);
            list.add(param);
            this.localFEMDutyAmntPremList =
                    (FEMDutyAmntPremList[])list.toArray(
                            new FEMDutyAmntPremList[list.size()]);

        }


        /**
         * field for FEMSupportKindsPeopleList
         * This was an Array!
         */


        protected FEMSupportKindsPeopleList[] localFEMSupportKindsPeopleList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMSupportKindsPeopleListTracker = false ;

        public boolean isFEMSupportKindsPeopleListSpecified(){
            return localFEMSupportKindsPeopleListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMSupportKindsPeopleList[]
         */
        public  FEMSupportKindsPeopleList[] getFEMSupportKindsPeopleList(){
            return localFEMSupportKindsPeopleList;
        }






        /**
         * validate the array for FEMSupportKindsPeopleList
         */
        protected void validateFEMSupportKindsPeopleList(FEMSupportKindsPeopleList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMSupportKindsPeopleList
         */
        public void setFEMSupportKindsPeopleList(FEMSupportKindsPeopleList[] param){

            validateFEMSupportKindsPeopleList(param);

            localFEMSupportKindsPeopleListTracker = true;

            this.localFEMSupportKindsPeopleList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMSupportKindsPeopleList
         */
        public void addFEMSupportKindsPeopleList(FEMSupportKindsPeopleList param){
            if (localFEMSupportKindsPeopleList == null){
                localFEMSupportKindsPeopleList = new FEMSupportKindsPeopleList[]{};
            }


            //update the setting tracker
            localFEMSupportKindsPeopleListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMSupportKindsPeopleList);
            list.add(param);
            this.localFEMSupportKindsPeopleList =
                    (FEMSupportKindsPeopleList[])list.toArray(
                            new FEMSupportKindsPeopleList[list.size()]);

        }


        /**
         * field for DataType
         */


        protected java.lang.String localDataType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDataTypeTracker = false ;

        public boolean isDataTypeSpecified(){
            return localDataTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDataType(){
            return localDataType;
        }



        /**
         * Auto generated setter method
         * @param param DataType
         */
        public void setDataType(java.lang.String param){
            localDataTypeTracker = true;

            this.localDataType=param;


        }


        /**
         * field for DefaultValue
         */


        protected java.lang.String localDefaultValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDefaultValueTracker = false ;

        public boolean isDefaultValueSpecified(){
            return localDefaultValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDefaultValue(){
            return localDefaultValue;
        }



        /**
         * Auto generated setter method
         * @param param DefaultValue
         */
        public void setDefaultValue(java.lang.String param){
            localDefaultValueTracker = true;

            this.localDefaultValue=param;


        }


        /**
         * field for DudtyFactorName
         */


        protected java.lang.String localDudtyFactorName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDudtyFactorNameTracker = false ;

        public boolean isDudtyFactorNameSpecified(){
            return localDudtyFactorNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDudtyFactorName(){
            return localDudtyFactorName;
        }



        /**
         * Auto generated setter method
         * @param param DudtyFactorName
         */
        public void setDudtyFactorName(java.lang.String param){
            localDudtyFactorNameTracker = true;

            this.localDudtyFactorName=param;


        }


        /**
         * field for DutyFactorCode
         */


        protected java.lang.String localDutyFactorCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorCodeTracker = false ;

        public boolean isDutyFactorCodeSpecified(){
            return localDutyFactorCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorCode(){
            return localDutyFactorCode;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorCode
         */
        public void setDutyFactorCode(java.lang.String param){
            localDutyFactorCodeTracker = true;

            this.localDutyFactorCode=param;


        }


        /**
         * field for DutyFactorID
         */


        protected java.lang.String localDutyFactorID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorIDTracker = false ;

        public boolean isDutyFactorIDSpecified(){
            return localDutyFactorIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorID(){
            return localDutyFactorID;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorID
         */
        public void setDutyFactorID(java.lang.String param){
            localDutyFactorIDTracker = true;

            this.localDutyFactorID=param;


        }


        /**
         * field for DutyFactorType
         */


        protected java.lang.String localDutyFactorType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyFactorTypeTracker = false ;

        public boolean isDutyFactorTypeSpecified(){
            return localDutyFactorTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyFactorType(){
            return localDutyFactorType;
        }



        /**
         * Auto generated setter method
         * @param param DutyFactorType
         */
        public void setDutyFactorType(java.lang.String param){
            localDutyFactorTypeTracker = true;

            this.localDutyFactorType=param;


        }


        /**
         * field for FactorERiskDesc
         */


        protected java.lang.String localFactorERiskDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorERiskDescTracker = false ;

        public boolean isFactorERiskDescSpecified(){
            return localFactorERiskDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorERiskDesc(){
            return localFactorERiskDesc;
        }



        /**
         * Auto generated setter method
         * @param param FactorERiskDesc
         */
        public void setFactorERiskDesc(java.lang.String param){
            localFactorERiskDescTracker = true;

            this.localFactorERiskDesc=param;


        }


        /**
         * field for IsAppSelect
         */


        protected java.lang.String localIsAppSelect ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsAppSelectTracker = false ;

        public boolean isIsAppSelectSpecified(){
            return localIsAppSelectTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsAppSelect(){
            return localIsAppSelect;
        }



        /**
         * Auto generated setter method
         * @param param IsAppSelect
         */
        public void setIsAppSelect(java.lang.String param){
            localIsAppSelectTracker = true;

            this.localIsAppSelect=param;


        }


        /**
         * field for IsPremCalFacotor
         */


        protected java.lang.String localIsPremCalFacotor ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsPremCalFacotorTracker = false ;

        public boolean isIsPremCalFacotorSpecified(){
            return localIsPremCalFacotorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsPremCalFacotor(){
            return localIsPremCalFacotor;
        }



        /**
         * Auto generated setter method
         * @param param IsPremCalFacotor
         */
        public void setIsPremCalFacotor(java.lang.String param){
            localIsPremCalFacotorTracker = true;

            this.localIsPremCalFacotor=param;


        }


        /**
         * field for IsRelaRiskFactor
         */


        protected java.lang.String localIsRelaRiskFactor ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsRelaRiskFactorTracker = false ;

        public boolean isIsRelaRiskFactorSpecified(){
            return localIsRelaRiskFactorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsRelaRiskFactor(){
            return localIsRelaRiskFactor;
        }



        /**
         * Auto generated setter method
         * @param param IsRelaRiskFactor
         */
        public void setIsRelaRiskFactor(java.lang.String param){
            localIsRelaRiskFactorTracker = true;

            this.localIsRelaRiskFactor=param;


        }


        /**
         * field for IsSupportKindsPeople
         */


        protected java.lang.String localIsSupportKindsPeople ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsSupportKindsPeopleTracker = false ;

        public boolean isIsSupportKindsPeopleSpecified(){
            return localIsSupportKindsPeopleTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsSupportKindsPeople(){
            return localIsSupportKindsPeople;
        }



        /**
         * Auto generated setter method
         * @param param IsSupportKindsPeople
         */
        public void setIsSupportKindsPeople(java.lang.String param){
            localIsSupportKindsPeopleTracker = true;

            this.localIsSupportKindsPeople=param;


        }


        /**
         * field for MakeDate
         */


        protected java.lang.String localMakeDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeDateTracker = false ;

        public boolean isMakeDateSpecified(){
            return localMakeDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeDate(){
            return localMakeDate;
        }



        /**
         * Auto generated setter method
         * @param param MakeDate
         */
        public void setMakeDate(java.lang.String param){
            localMakeDateTracker = true;

            this.localMakeDate=param;


        }


        /**
         * field for MakeTime
         */


        protected java.lang.String localMakeTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeTimeTracker = false ;

        public boolean isMakeTimeSpecified(){
            return localMakeTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeTime(){
            return localMakeTime;
        }



        /**
         * Auto generated setter method
         * @param param MakeTime
         */
        public void setMakeTime(java.lang.String param){
            localMakeTimeTracker = true;

            this.localMakeTime=param;


        }


        /**
         * field for ModifyDate
         */


        protected java.lang.String localModifyDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyDateTracker = false ;

        public boolean isModifyDateSpecified(){
            return localModifyDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyDate(){
            return localModifyDate;
        }



        /**
         * Auto generated setter method
         * @param param ModifyDate
         */
        public void setModifyDate(java.lang.String param){
            localModifyDateTracker = true;

            this.localModifyDate=param;


        }


        /**
         * field for ModifyTime
         */


        protected java.lang.String localModifyTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyTimeTracker = false ;

        public boolean isModifyTimeSpecified(){
            return localModifyTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyTime(){
            return localModifyTime;
        }



        /**
         * Auto generated setter method
         * @param param ModifyTime
         */
        public void setModifyTime(java.lang.String param){
            localModifyTimeTracker = true;

            this.localModifyTime=param;


        }


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMDutyFactor",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMDutyFactor",
                            xmlWriter);
                }


            }
            if (localERiskIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "ERiskID", xmlWriter);


                if (localERiskID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localERiskID);

                }

                xmlWriter.writeEndElement();
            } if (localFEMDutyAmntPremListTracker){
                if (localFEMDutyAmntPremList!=null){
                    for (int i = 0;i < localFEMDutyAmntPremList.length;i++){
                        if (localFEMDutyAmntPremList[i] != null){
                            localFEMDutyAmntPremList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMDutyAmntPremList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMDutyAmntPremList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMDutyAmntPremList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localFEMSupportKindsPeopleListTracker){
                if (localFEMSupportKindsPeopleList!=null){
                    for (int i = 0;i < localFEMSupportKindsPeopleList.length;i++){
                        if (localFEMSupportKindsPeopleList[i] != null){
                            localFEMSupportKindsPeopleList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMSupportKindsPeopleList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMSupportKindsPeopleList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMSupportKindsPeopleList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localDataTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dataType", xmlWriter);


                if (localDataType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDataType);

                }

                xmlWriter.writeEndElement();
            } if (localDefaultValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "defaultValue", xmlWriter);


                if (localDefaultValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDefaultValue);

                }

                xmlWriter.writeEndElement();
            } if (localDudtyFactorNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dudtyFactorName", xmlWriter);


                if (localDudtyFactorName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDudtyFactorName);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFactorCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorCode", xmlWriter);


                if (localDutyFactorCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorCode);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFactorIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorID", xmlWriter);


                if (localDutyFactorID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorID);

                }

                xmlWriter.writeEndElement();
            } if (localDutyFactorTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyFactorType", xmlWriter);


                if (localDutyFactorType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyFactorType);

                }

                xmlWriter.writeEndElement();
            } if (localFactorERiskDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorERiskDesc", xmlWriter);


                if (localFactorERiskDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorERiskDesc);

                }

                xmlWriter.writeEndElement();
            } if (localIsAppSelectTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isAppSelect", xmlWriter);


                if (localIsAppSelect==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsAppSelect);

                }

                xmlWriter.writeEndElement();
            } if (localIsPremCalFacotorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isPremCalFacotor", xmlWriter);


                if (localIsPremCalFacotor==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsPremCalFacotor);

                }

                xmlWriter.writeEndElement();
            } if (localIsRelaRiskFactorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isRelaRiskFactor", xmlWriter);


                if (localIsRelaRiskFactor==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsRelaRiskFactor);

                }

                xmlWriter.writeEndElement();
            } if (localIsSupportKindsPeopleTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isSupportKindsPeople", xmlWriter);


                if (localIsSupportKindsPeople==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsSupportKindsPeople);

                }

                xmlWriter.writeEndElement();
            } if (localMakeDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeDate", xmlWriter);


                if (localMakeDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeDate);

                }

                xmlWriter.writeEndElement();
            } if (localMakeTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeTime", xmlWriter);


                if (localMakeTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeTime);

                }

                xmlWriter.writeEndElement();
            } if (localModifyDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyDate", xmlWriter);


                if (localModifyDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyDate);

                }

                xmlWriter.writeEndElement();
            } if (localModifyTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyTime", xmlWriter);


                if (localModifyTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyTime);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localERiskIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "ERiskID"));

                elementList.add(localERiskID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localERiskID));
            } if (localFEMDutyAmntPremListTracker){
                if (localFEMDutyAmntPremList!=null) {
                    for (int i = 0;i < localFEMDutyAmntPremList.length;i++){

                        if (localFEMDutyAmntPremList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMDutyAmntPremList"));
                            elementList.add(localFEMDutyAmntPremList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMDutyAmntPremList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMDutyAmntPremList"));
                    elementList.add(localFEMDutyAmntPremList);

                }

            } if (localFEMSupportKindsPeopleListTracker){
                if (localFEMSupportKindsPeopleList!=null) {
                    for (int i = 0;i < localFEMSupportKindsPeopleList.length;i++){

                        if (localFEMSupportKindsPeopleList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMSupportKindsPeopleList"));
                            elementList.add(localFEMSupportKindsPeopleList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMSupportKindsPeopleList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMSupportKindsPeopleList"));
                    elementList.add(localFEMSupportKindsPeopleList);

                }

            } if (localDataTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dataType"));

                elementList.add(localDataType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataType));
            } if (localDefaultValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "defaultValue"));

                elementList.add(localDefaultValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDefaultValue));
            } if (localDudtyFactorNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dudtyFactorName"));

                elementList.add(localDudtyFactorName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDudtyFactorName));
            } if (localDutyFactorCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorCode"));

                elementList.add(localDutyFactorCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorCode));
            } if (localDutyFactorIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorID"));

                elementList.add(localDutyFactorID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorID));
            } if (localDutyFactorTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyFactorType"));

                elementList.add(localDutyFactorType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyFactorType));
            } if (localFactorERiskDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorERiskDesc"));

                elementList.add(localFactorERiskDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorERiskDesc));
            } if (localIsAppSelectTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isAppSelect"));

                elementList.add(localIsAppSelect==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsAppSelect));
            } if (localIsPremCalFacotorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isPremCalFacotor"));

                elementList.add(localIsPremCalFacotor==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPremCalFacotor));
            } if (localIsRelaRiskFactorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isRelaRiskFactor"));

                elementList.add(localIsRelaRiskFactor==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsRelaRiskFactor));
            } if (localIsSupportKindsPeopleTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isSupportKindsPeople"));

                elementList.add(localIsSupportKindsPeople==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsSupportKindsPeople));
            } if (localMakeDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeDate"));

                elementList.add(localMakeDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeDate));
            } if (localMakeTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeTime"));

                elementList.add(localMakeTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeTime));
            } if (localModifyDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyDate"));

                elementList.add(localModifyDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyDate));
            } if (localModifyTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyTime"));

                elementList.add(localModifyTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyTime));
            } if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMDutyFactor parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMDutyFactor object =
                        new FEMDutyFactor();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMDutyFactor".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMDutyFactor)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list2 = new java.util.ArrayList();

                    java.util.ArrayList list3 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","ERiskID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setERiskID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMDutyAmntPremList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list2.add(null);
                            reader.next();
                        } else {
                            list2.add(FEMDutyAmntPremList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone2 = false;
                        while(!loopDone2){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone2 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMDutyAmntPremList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list2.add(null);
                                        reader.next();
                                    } else {
                                        list2.add(FEMDutyAmntPremList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone2 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMDutyAmntPremList((FEMDutyAmntPremList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMDutyAmntPremList.class,
                                        list2));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMSupportKindsPeopleList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list3.add(null);
                            reader.next();
                        } else {
                            list3.add(FEMSupportKindsPeopleList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone3 = false;
                        while(!loopDone3){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone3 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMSupportKindsPeopleList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list3.add(null);
                                        reader.next();
                                    } else {
                                        list3.add(FEMSupportKindsPeopleList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone3 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMSupportKindsPeopleList((FEMSupportKindsPeopleList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMSupportKindsPeopleList.class,
                                        list3));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dataType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDataType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","defaultValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDefaultValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dudtyFactorName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDudtyFactorName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyFactorType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyFactorType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorERiskDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorERiskDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isAppSelect").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsAppSelect(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isPremCalFacotor").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsPremCalFacotor(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isRelaRiskFactor").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsRelaRiskFactor(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isSupportKindsPeople").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsSupportKindsPeople(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FMRelaDutyCodeList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMRelaDutyCodeList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for ControlRate
         */


        protected double localControlRate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localControlRateTracker = false ;

        public boolean isControlRateSpecified(){
            return localControlRateTracker;
        }



        /**
         * Auto generated getter method
         * @return double
         */
        public  double getControlRate(){
            return localControlRate;
        }



        /**
         * Auto generated setter method
         * @param param ControlRate
         */
        public void setControlRate(double param){

            // setting primitive attribute tracker to true
            localControlRateTracker =
                    !java.lang.Double.isNaN(param);

            this.localControlRate=param;


        }


        /**
         * field for DutyCode
         */


        protected java.lang.String localDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutyCodeTracker = false ;

        public boolean isDutyCodeSpecified(){
            return localDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDutyCode(){
            return localDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param DutyCode
         */
        public void setDutyCode(java.lang.String param){
            localDutyCodeTracker = true;

            this.localDutyCode=param;


        }


        /**
         * field for RelaDutyCode
         */


        protected java.lang.String localRelaDutyCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelaDutyCodeTracker = false ;

        public boolean isRelaDutyCodeSpecified(){
            return localRelaDutyCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelaDutyCode(){
            return localRelaDutyCode;
        }



        /**
         * Auto generated setter method
         * @param param RelaDutyCode
         */
        public void setRelaDutyCode(java.lang.String param){
            localRelaDutyCodeTracker = true;

            this.localRelaDutyCode=param;


        }


        /**
         * field for RelaDutyCodeID
         */


        protected java.lang.String localRelaDutyCodeID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelaDutyCodeIDTracker = false ;

        public boolean isRelaDutyCodeIDSpecified(){
            return localRelaDutyCodeIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelaDutyCodeID(){
            return localRelaDutyCodeID;
        }



        /**
         * Auto generated setter method
         * @param param RelaDutyCodeID
         */
        public void setRelaDutyCodeID(java.lang.String param){
            localRelaDutyCodeIDTracker = true;

            this.localRelaDutyCodeID=param;


        }


        /**
         * field for RelaDutyName
         */


        protected java.lang.String localRelaDutyName ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRelaDutyNameTracker = false ;

        public boolean isRelaDutyNameSpecified(){
            return localRelaDutyNameTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRelaDutyName(){
            return localRelaDutyName;
        }



        /**
         * Auto generated setter method
         * @param param RelaDutyName
         */
        public void setRelaDutyName(java.lang.String param){
            localRelaDutyNameTracker = true;

            this.localRelaDutyName=param;


        }


        /**
         * field for RiskType
         */


        protected java.lang.String localRiskType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskTypeTracker = false ;

        public boolean isRiskTypeSpecified(){
            return localRiskTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskType(){
            return localRiskType;
        }



        /**
         * Auto generated setter method
         * @param param RiskType
         */
        public void setRiskType(java.lang.String param){
            localRiskTypeTracker = true;

            this.localRiskType=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FMRelaDutyCodeList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FMRelaDutyCodeList",
                            xmlWriter);
                }


            }
            if (localControlRateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "controlRate", xmlWriter);

                if (java.lang.Double.isNaN(localControlRate)) {

                    throw new org.apache.axis2.databinding.ADBException("controlRate cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localControlRate));
                }

                xmlWriter.writeEndElement();
            } if (localDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "dutyCode", xmlWriter);


                if (localDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDutyCode);

                }

                xmlWriter.writeEndElement();
            } if (localRelaDutyCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relaDutyCode", xmlWriter);


                if (localRelaDutyCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelaDutyCode);

                }

                xmlWriter.writeEndElement();
            } if (localRelaDutyCodeIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relaDutyCodeID", xmlWriter);


                if (localRelaDutyCodeID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelaDutyCodeID);

                }

                xmlWriter.writeEndElement();
            } if (localRelaDutyNameTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "relaDutyName", xmlWriter);


                if (localRelaDutyName==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRelaDutyName);

                }

                xmlWriter.writeEndElement();
            } if (localRiskTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskType", xmlWriter);


                if (localRiskType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskType);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localControlRateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "controlRate"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localControlRate));
            } if (localDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "dutyCode"));

                elementList.add(localDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutyCode));
            } if (localRelaDutyCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relaDutyCode"));

                elementList.add(localRelaDutyCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelaDutyCode));
            } if (localRelaDutyCodeIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relaDutyCodeID"));

                elementList.add(localRelaDutyCodeID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelaDutyCodeID));
            } if (localRelaDutyNameTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "relaDutyName"));

                elementList.add(localRelaDutyName==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelaDutyName));
            } if (localRiskTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskType"));

                elementList.add(localRiskType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskType));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FMRelaDutyCodeList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FMRelaDutyCodeList object =
                        new FMRelaDutyCodeList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FMRelaDutyCodeList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMRelaDutyCodeList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","controlRate").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setControlRate(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToDouble(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setControlRate(java.lang.Double.NaN);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relaDutyCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelaDutyCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relaDutyCodeID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelaDutyCodeID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","relaDutyName").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRelaDutyName(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class ResponseExtension
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ResponseExtension
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for MaxRecords
         */


        protected java.lang.String localMaxRecords ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMaxRecordsTracker = false ;

        public boolean isMaxRecordsSpecified(){
            return localMaxRecordsTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMaxRecords(){
            return localMaxRecords;
        }



        /**
         * Auto generated setter method
         * @param param MaxRecords
         */
        public void setMaxRecords(java.lang.String param){
            localMaxRecordsTracker = true;

            this.localMaxRecords=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":ResponseExtension",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "ResponseExtension",
                            xmlWriter);
                }


            }
            if (localMaxRecordsTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "maxRecords", xmlWriter);


                if (localMaxRecords==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMaxRecords);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localMaxRecordsTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "maxRecords"));

                elementList.add(localMaxRecords==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxRecords));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static ResponseExtension parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                ResponseExtension object =
                        new ResponseExtension();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ResponseExtension".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ResponseExtension)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","maxRecords").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMaxRecords(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class ProductInfoResponse
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ProductInfoResponse
                Namespace URI = http://model.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


        /**
         * field for FMRisk
         * This was an Array!
         */


        protected FMRisk[] localFMRisk ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFMRiskTracker = false ;

        public boolean isFMRiskSpecified(){
            return localFMRiskTracker;
        }



        /**
         * Auto generated getter method
         * @return FMRisk[]
         */
        public  FMRisk[] getFMRisk(){
            return localFMRisk;
        }






        /**
         * validate the array for FMRisk
         */
        protected void validateFMRisk(FMRisk[] param){

        }


        /**
         * Auto generated setter method
         * @param param FMRisk
         */
        public void setFMRisk(FMRisk[] param){

            validateFMRisk(param);

            localFMRiskTracker = true;

            this.localFMRisk=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FMRisk
         */
        public void addFMRisk(FMRisk param){
            if (localFMRisk == null){
                localFMRisk = new FMRisk[]{};
            }


            //update the setting tracker
            localFMRiskTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFMRisk);
            list.add(param);
            this.localFMRisk =
                    (FMRisk[])list.toArray(
                            new FMRisk[list.size()]);

        }


        /**
         * field for RequestType
         */


        protected java.lang.String localRequestType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRequestTypeTracker = false ;

        public boolean isRequestTypeSpecified(){
            return localRequestTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRequestType(){
            return localRequestType;
        }



        /**
         * Auto generated setter method
         * @param param RequestType
         */
        public void setRequestType(java.lang.String param){
            localRequestTypeTracker = true;

            this.localRequestType=param;


        }


        /**
         * field for ResponseDate
         */


        protected java.lang.String localResponseDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResponseDateTracker = false ;

        public boolean isResponseDateSpecified(){
            return localResponseDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResponseDate(){
            return localResponseDate;
        }



        /**
         * Auto generated setter method
         * @param param ResponseDate
         */
        public void setResponseDate(java.lang.String param){
            localResponseDateTracker = true;

            this.localResponseDate=param;


        }


        /**
         * field for ResponseExtension
         */


        protected ResponseExtension localResponseExtension ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResponseExtensionTracker = false ;

        public boolean isResponseExtensionSpecified(){
            return localResponseExtensionTracker;
        }



        /**
         * Auto generated getter method
         * @return ResponseExtension
         */
        public  ResponseExtension getResponseExtension(){
            return localResponseExtension;
        }



        /**
         * Auto generated setter method
         * @param param ResponseExtension
         */
        public void setResponseExtension(ResponseExtension param){
            localResponseExtensionTracker = true;

            this.localResponseExtension=param;


        }


        /**
         * field for ResponseGUID
         */


        protected java.lang.String localResponseGUID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResponseGUIDTracker = false ;

        public boolean isResponseGUIDSpecified(){
            return localResponseGUIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResponseGUID(){
            return localResponseGUID;
        }



        /**
         * Auto generated setter method
         * @param param ResponseGUID
         */
        public void setResponseGUID(java.lang.String param){
            localResponseGUIDTracker = true;

            this.localResponseGUID=param;


        }


        /**
         * field for ResponseTime
         */


        protected java.lang.String localResponseTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResponseTimeTracker = false ;

        public boolean isResponseTimeSpecified(){
            return localResponseTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResponseTime(){
            return localResponseTime;
        }



        /**
         * Auto generated setter method
         * @param param ResponseTime
         */
        public void setResponseTime(java.lang.String param){
            localResponseTimeTracker = true;

            this.localResponseTime=param;


        }


        /**
         * field for ResponseType
         */


        protected java.lang.String localResponseType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResponseTypeTracker = false ;

        public boolean isResponseTypeSpecified(){
            return localResponseTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getResponseType(){
            return localResponseType;
        }



        /**
         * Auto generated setter method
         * @param param ResponseType
         */
        public void setResponseType(java.lang.String param){
            localResponseTypeTracker = true;

            this.localResponseType=param;


        }


        /**
         * field for ResultDTO
         */


        protected ResultDTO localResultDTO ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localResultDTOTracker = false ;

        public boolean isResultDTOSpecified(){
            return localResultDTOTracker;
        }



        /**
         * Auto generated getter method
         * @return ResultDTO
         */
        public  ResultDTO getResultDTO(){
            return localResultDTO;
        }



        /**
         * Auto generated setter method
         * @param param ResultDTO
         */
        public void setResultDTO(ResultDTO param){
            localResultDTOTracker = true;

            this.localResultDTO=param;


        }


        /**
         * field for TransCheckInfo
         */


        protected TransCheckInfo localTransCheckInfo ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localTransCheckInfoTracker = false ;

        public boolean isTransCheckInfoSpecified(){
            return localTransCheckInfoTracker;
        }



        /**
         * Auto generated getter method
         * @return TransCheckInfo
         */
        public  TransCheckInfo getTransCheckInfo(){
            return localTransCheckInfo;
        }



        /**
         * Auto generated setter method
         * @param param TransCheckInfo
         */
        public void setTransCheckInfo(TransCheckInfo param){
            localTransCheckInfoTracker = true;

            this.localTransCheckInfo=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://model.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":ProductInfoResponse",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "ProductInfoResponse",
                            xmlWriter);
                }


            }
            if (localFMRiskTracker){
                if (localFMRisk!=null){
                    for (int i = 0;i < localFMRisk.length;i++){
                        if (localFMRisk[i] != null){
                            localFMRisk[i].serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FMRisk"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "FMRisk", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "FMRisk", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localRequestTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "requestType", xmlWriter);


                if (localRequestType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRequestType);

                }

                xmlWriter.writeEndElement();
            } if (localResponseDateTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "responseDate", xmlWriter);


                if (localResponseDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResponseDate);

                }

                xmlWriter.writeEndElement();
            } if (localResponseExtensionTracker){
                if (localResponseExtension==null){

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "responseExtension", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localResponseExtension.serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseExtension"),
                            xmlWriter);
                }
            } if (localResponseGUIDTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "responseGUID", xmlWriter);


                if (localResponseGUID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResponseGUID);

                }

                xmlWriter.writeEndElement();
            } if (localResponseTimeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "responseTime", xmlWriter);


                if (localResponseTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResponseTime);

                }

                xmlWriter.writeEndElement();
            } if (localResponseTypeTracker){
                namespace = "http://model.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "responseType", xmlWriter);


                if (localResponseType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localResponseType);

                }

                xmlWriter.writeEndElement();
            } if (localResultDTOTracker){
                if (localResultDTO==null){

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "resultDTO", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localResultDTO.serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","resultDTO"),
                            xmlWriter);
                }
            } if (localTransCheckInfoTracker){
                if (localTransCheckInfo==null){

                    writeStartElement(null, "http://model.webService.ebusiness.sinosoft.com/xsd", "transCheckInfo", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();
                }else{
                    localTransCheckInfo.serialize(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","transCheckInfo"),
                            xmlWriter);
                }
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://model.webService.ebusiness.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localFMRiskTracker){
                if (localFMRisk!=null) {
                    for (int i = 0;i < localFMRisk.length;i++){

                        if (localFMRisk[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "FMRisk"));
                            elementList.add(localFMRisk[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                                    "FMRisk"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                            "FMRisk"));
                    elementList.add(localFMRisk);

                }

            } if (localRequestTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "requestType"));

                elementList.add(localRequestType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestType));
            } if (localResponseDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "responseDate"));

                elementList.add(localResponseDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseDate));
            } if (localResponseExtensionTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "responseExtension"));


                elementList.add(localResponseExtension==null?null:
                        localResponseExtension);
            } if (localResponseGUIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "responseGUID"));

                elementList.add(localResponseGUID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseGUID));
            } if (localResponseTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "responseTime"));

                elementList.add(localResponseTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseTime));
            } if (localResponseTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "responseType"));

                elementList.add(localResponseType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseType));
            } if (localResultDTOTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "resultDTO"));


                elementList.add(localResultDTO==null?null:
                        localResultDTO);
            } if (localTransCheckInfoTracker){
                elementList.add(new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd",
                        "transCheckInfo"));


                elementList.add(localTransCheckInfo==null?null:
                        localTransCheckInfo);
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static ProductInfoResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                ProductInfoResponse object =
                        new ProductInfoResponse();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ProductInfoResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProductInfoResponse)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list1 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FMRisk").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list1.add(null);
                            reader.next();
                        } else {
                            list1.add(FMRisk.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone1 = false;
                        while(!loopDone1){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone1 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","FMRisk").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list1.add(null);
                                        reader.next();
                                    } else {
                                        list1.add(FMRisk.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone1 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFMRisk((FMRisk[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FMRisk.class,
                                        list1));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","requestType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRequestType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResponseDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseExtension").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setResponseExtension(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setResponseExtension(ResponseExtension.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseGUID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResponseGUID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResponseTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","responseType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setResponseType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","resultDTO").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setResultDTO(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setResultDTO(ResultDTO.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://model.webService.ebusiness.sinosoft.com/xsd","transCheckInfo").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            object.setTransCheckInfo(null);
                            reader.next();

                            reader.next();

                        }else{

                            object.setTransCheckInfo(TransCheckInfo.Factory.parse(reader));

                            reader.next();
                        }
                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    public static class FEMRiskFactorList
            implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FEMRiskFactorList
                Namespace URI = http://pojo.webService.ebusiness.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


        /**
         * field for FEMRiskBrightSpotList
         * This was an Array!
         */


        protected FEMRiskBrightSpotList[] localFEMRiskBrightSpotList ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFEMRiskBrightSpotListTracker = false ;

        public boolean isFEMRiskBrightSpotListSpecified(){
            return localFEMRiskBrightSpotListTracker;
        }



        /**
         * Auto generated getter method
         * @return FEMRiskBrightSpotList[]
         */
        public  FEMRiskBrightSpotList[] getFEMRiskBrightSpotList(){
            return localFEMRiskBrightSpotList;
        }






        /**
         * validate the array for FEMRiskBrightSpotList
         */
        protected void validateFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

        }


        /**
         * Auto generated setter method
         * @param param FEMRiskBrightSpotList
         */
        public void setFEMRiskBrightSpotList(FEMRiskBrightSpotList[] param){

            validateFEMRiskBrightSpotList(param);

            localFEMRiskBrightSpotListTracker = true;

            this.localFEMRiskBrightSpotList=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param FEMRiskBrightSpotList
         */
        public void addFEMRiskBrightSpotList(FEMRiskBrightSpotList param){
            if (localFEMRiskBrightSpotList == null){
                localFEMRiskBrightSpotList = new FEMRiskBrightSpotList[]{};
            }


            //update the setting tracker
            localFEMRiskBrightSpotListTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localFEMRiskBrightSpotList);
            list.add(param);
            this.localFEMRiskBrightSpotList =
                    (FEMRiskBrightSpotList[])list.toArray(
                            new FEMRiskBrightSpotList[list.size()]);

        }


        /**
         * field for AppFactorCode
         */


        protected java.lang.String localAppFactorCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localAppFactorCodeTracker = false ;

        public boolean isAppFactorCodeSpecified(){
            return localAppFactorCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getAppFactorCode(){
            return localAppFactorCode;
        }



        /**
         * Auto generated setter method
         * @param param AppFactorCode
         */
        public void setAppFactorCode(java.lang.String param){
            localAppFactorCodeTracker = true;

            this.localAppFactorCode=param;


        }


        /**
         * field for DefaultValue
         */


        protected java.lang.String localDefaultValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDefaultValueTracker = false ;

        public boolean isDefaultValueSpecified(){
            return localDefaultValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getDefaultValue(){
            return localDefaultValue;
        }



        /**
         * Auto generated setter method
         * @param param DefaultValue
         */
        public void setDefaultValue(java.lang.String param){
            localDefaultValueTracker = true;

            this.localDefaultValue=param;


        }


        /**
         * field for DutySnAmnt
         * This was an Array!
         */


        protected java.lang.String[] localDutySnAmnt ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localDutySnAmntTracker = false ;

        public boolean isDutySnAmntSpecified(){
            return localDutySnAmntTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String[]
         */
        public  java.lang.String[] getDutySnAmnt(){
            return localDutySnAmnt;
        }






        /**
         * validate the array for DutySnAmnt
         */
        protected void validateDutySnAmnt(java.lang.String[] param){

        }


        /**
         * Auto generated setter method
         * @param param DutySnAmnt
         */
        public void setDutySnAmnt(java.lang.String[] param){

            validateDutySnAmnt(param);

            localDutySnAmntTracker = true;

            this.localDutySnAmnt=param;
        }



        /**
         * Auto generated add method for the array for convenience
         * @param param java.lang.String
         */
        public void addDutySnAmnt(java.lang.String param){
            if (localDutySnAmnt == null){
                localDutySnAmnt = new java.lang.String[]{};
            }


            //update the setting tracker
            localDutySnAmntTracker = true;


            java.util.List list =
                    org.apache.axis2.databinding.utils.ConverterUtil.toList(localDutySnAmnt);
            list.add(param);
            this.localDutySnAmnt =
                    (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

        }


        /**
         * field for FactorDisplayValue
         */


        protected java.lang.String localFactorDisplayValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorDisplayValueTracker = false ;

        public boolean isFactorDisplayValueSpecified(){
            return localFactorDisplayValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorDisplayValue(){
            return localFactorDisplayValue;
        }



        /**
         * Auto generated setter method
         * @param param FactorDisplayValue
         */
        public void setFactorDisplayValue(java.lang.String param){
            localFactorDisplayValueTracker = true;

            this.localFactorDisplayValue=param;


        }


        /**
         * field for FactorERiskDesc
         */


        protected java.lang.String localFactorERiskDesc ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorERiskDescTracker = false ;

        public boolean isFactorERiskDescSpecified(){
            return localFactorERiskDescTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorERiskDesc(){
            return localFactorERiskDesc;
        }



        /**
         * Auto generated setter method
         * @param param FactorERiskDesc
         */
        public void setFactorERiskDesc(java.lang.String param){
            localFactorERiskDescTracker = true;

            this.localFactorERiskDesc=param;


        }


        /**
         * field for FactorListID
         */


        protected java.lang.String localFactorListID ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorListIDTracker = false ;

        public boolean isFactorListIDSpecified(){
            return localFactorListIDTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorListID(){
            return localFactorListID;
        }



        /**
         * Auto generated setter method
         * @param param FactorListID
         */
        public void setFactorListID(java.lang.String param){
            localFactorListIDTracker = true;

            this.localFactorListID=param;


        }


        /**
         * field for FactorType
         */


        protected java.lang.String localFactorType ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorTypeTracker = false ;

        public boolean isFactorTypeSpecified(){
            return localFactorTypeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorType(){
            return localFactorType;
        }



        /**
         * Auto generated setter method
         * @param param FactorType
         */
        public void setFactorType(java.lang.String param){
            localFactorTypeTracker = true;

            this.localFactorType=param;


        }


        /**
         * field for FactorValue
         */


        protected java.lang.String localFactorValue ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValueTracker = false ;

        public boolean isFactorValueSpecified(){
            return localFactorValueTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorValue(){
            return localFactorValue;
        }



        /**
         * Auto generated setter method
         * @param param FactorValue
         */
        public void setFactorValue(java.lang.String param){
            localFactorValueTracker = true;

            this.localFactorValue=param;


        }


        /**
         * field for FactorValueFlag
         */


        protected java.lang.String localFactorValueFlag ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValueFlagTracker = false ;

        public boolean isFactorValueFlagSpecified(){
            return localFactorValueFlagTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getFactorValueFlag(){
            return localFactorValueFlag;
        }



        /**
         * Auto generated setter method
         * @param param FactorValueFlag
         */
        public void setFactorValueFlag(java.lang.String param){
            localFactorValueFlagTracker = true;

            this.localFactorValueFlag=param;


        }


        /**
         * field for FactorValueOrder
         */


        protected int localFactorValueOrder ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localFactorValueOrderTracker = false ;

        public boolean isFactorValueOrderSpecified(){
            return localFactorValueOrderTracker;
        }



        /**
         * Auto generated getter method
         * @return int
         */
        public  int getFactorValueOrder(){
            return localFactorValueOrder;
        }



        /**
         * Auto generated setter method
         * @param param FactorValueOrder
         */
        public void setFactorValueOrder(int param){

            // setting primitive attribute tracker to true
            localFactorValueOrderTracker =
                    param != java.lang.Integer.MIN_VALUE;

            this.localFactorValueOrder=param;


        }


        /**
         * field for IsDisplay
         */


        protected java.lang.String localIsDisplay ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsDisplayTracker = false ;

        public boolean isIsDisplaySpecified(){
            return localIsDisplayTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsDisplay(){
            return localIsDisplay;
        }



        /**
         * Auto generated setter method
         * @param param IsDisplay
         */
        public void setIsDisplay(java.lang.String param){
            localIsDisplayTracker = true;

            this.localIsDisplay=param;


        }


        /**
         * field for IsPremCalFacotor
         */


        protected java.lang.String localIsPremCalFacotor ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localIsPremCalFacotorTracker = false ;

        public boolean isIsPremCalFacotorSpecified(){
            return localIsPremCalFacotorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getIsPremCalFacotor(){
            return localIsPremCalFacotor;
        }



        /**
         * Auto generated setter method
         * @param param IsPremCalFacotor
         */
        public void setIsPremCalFacotor(java.lang.String param){
            localIsPremCalFacotorTracker = true;

            this.localIsPremCalFacotor=param;


        }


        /**
         * field for MakeDate
         */


        protected java.lang.String localMakeDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeDateTracker = false ;

        public boolean isMakeDateSpecified(){
            return localMakeDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeDate(){
            return localMakeDate;
        }



        /**
         * Auto generated setter method
         * @param param MakeDate
         */
        public void setMakeDate(java.lang.String param){
            localMakeDateTracker = true;

            this.localMakeDate=param;


        }


        /**
         * field for MakeTime
         */


        protected java.lang.String localMakeTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localMakeTimeTracker = false ;

        public boolean isMakeTimeSpecified(){
            return localMakeTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getMakeTime(){
            return localMakeTime;
        }



        /**
         * Auto generated setter method
         * @param param MakeTime
         */
        public void setMakeTime(java.lang.String param){
            localMakeTimeTracker = true;

            this.localMakeTime=param;


        }


        /**
         * field for ModifyDate
         */


        protected java.lang.String localModifyDate ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyDateTracker = false ;

        public boolean isModifyDateSpecified(){
            return localModifyDateTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyDate(){
            return localModifyDate;
        }



        /**
         * Auto generated setter method
         * @param param ModifyDate
         */
        public void setModifyDate(java.lang.String param){
            localModifyDateTracker = true;

            this.localModifyDate=param;


        }


        /**
         * field for ModifyTime
         */


        protected java.lang.String localModifyTime ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localModifyTimeTracker = false ;

        public boolean isModifyTimeSpecified(){
            return localModifyTimeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getModifyTime(){
            return localModifyTime;
        }



        /**
         * Auto generated setter method
         * @param param ModifyTime
         */
        public void setModifyTime(java.lang.String param){
            localModifyTimeTracker = true;

            this.localModifyTime=param;


        }


        /**
         * field for Operator
         */


        protected java.lang.String localOperator ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localOperatorTracker = false ;

        public boolean isOperatorSpecified(){
            return localOperatorTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getOperator(){
            return localOperator;
        }



        /**
         * Auto generated setter method
         * @param param Operator
         */
        public void setOperator(java.lang.String param){
            localOperatorTracker = true;

            this.localOperator=param;


        }


        /**
         * field for RiskCode
         */


        protected java.lang.String localRiskCode ;

        /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
        protected boolean localRiskCodeTracker = false ;

        public boolean isRiskCodeSpecified(){
            return localRiskCodeTracker;
        }



        /**
         * Auto generated getter method
         * @return java.lang.String
         */
        public  java.lang.String getRiskCode(){
            return localRiskCode;
        }



        /**
         * Auto generated setter method
         * @param param RiskCode
         */
        public void setRiskCode(java.lang.String param){
            localRiskCodeTracker = true;

            this.localRiskCode=param;


        }




        /**
         *
         * @param parentQName
         * @param factory
         * @return org.apache.axiom.om.OMElement
         */
        public org.apache.axiom.om.OMElement getOMElement (
                final javax.xml.namespace.QName parentQName,
                final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



            org.apache.axiom.om.OMDataSource dataSource =
                    new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
            return factory.createOMElement(dataSource,parentQName);

        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            serialize(parentQName,xmlWriter,false);
        }

        public void serialize(final javax.xml.namespace.QName parentQName,
                              javax.xml.stream.XMLStreamWriter xmlWriter,
                              boolean serializeType)
                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




            java.lang.String prefix = null;
            java.lang.String namespace = null;


            prefix = parentQName.getPrefix();
            namespace = parentQName.getNamespaceURI();
            writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

            if (serializeType){


                java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://pojo.webService.ebusiness.sinosoft.com/xsd");
                if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            namespacePrefix+":FEMRiskFactorList",
                            xmlWriter);
                } else {
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                            "FEMRiskFactorList",
                            xmlWriter);
                }


            }
            if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null){
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){
                        if (localFEMRiskBrightSpotList[i] != null){
                            localFEMRiskBrightSpotList[i].serialize(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList"),
                                    xmlWriter);
                        } else {

                            writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                            // write the nil attribute
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "FEMRiskBrightSpotList", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }
            } if (localAppFactorCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "appFactorCode", xmlWriter);


                if (localAppFactorCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localAppFactorCode);

                }

                xmlWriter.writeEndElement();
            } if (localDefaultValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "defaultValue", xmlWriter);


                if (localDefaultValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localDefaultValue);

                }

                xmlWriter.writeEndElement();
            } if (localDutySnAmntTracker){
                if (localDutySnAmnt!=null) {
                    namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                    for (int i = 0;i < localDutySnAmnt.length;i++){

                        if (localDutySnAmnt[i] != null){

                            writeStartElement(null, namespace, "dutySnAmnt", xmlWriter);


                            xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutySnAmnt[i]));

                            xmlWriter.writeEndElement();

                        } else {

                            // write null attribute
                            namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                            writeStartElement(null, namespace, "dutySnAmnt", xmlWriter);
                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                            xmlWriter.writeEndElement();

                        }

                    }
                } else {

                    // write the null attribute
                    // write null attribute
                    writeStartElement(null, "http://pojo.webService.ebusiness.sinosoft.com/xsd", "dutySnAmnt", xmlWriter);

                    // write the nil attribute
                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                    xmlWriter.writeEndElement();

                }

            } if (localFactorDisplayValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorDisplayValue", xmlWriter);


                if (localFactorDisplayValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorDisplayValue);

                }

                xmlWriter.writeEndElement();
            } if (localFactorERiskDescTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorERiskDesc", xmlWriter);


                if (localFactorERiskDesc==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorERiskDesc);

                }

                xmlWriter.writeEndElement();
            } if (localFactorListIDTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorListID", xmlWriter);


                if (localFactorListID==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorListID);

                }

                xmlWriter.writeEndElement();
            } if (localFactorTypeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorType", xmlWriter);


                if (localFactorType==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorType);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValueTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValue", xmlWriter);


                if (localFactorValue==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorValue);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValueFlagTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValueFlag", xmlWriter);


                if (localFactorValueFlag==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localFactorValueFlag);

                }

                xmlWriter.writeEndElement();
            } if (localFactorValueOrderTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "factorValueOrder", xmlWriter);

                if (localFactorValueOrder==java.lang.Integer.MIN_VALUE) {

                    throw new org.apache.axis2.databinding.ADBException("factorValueOrder cannot be null!!");

                } else {
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValueOrder));
                }

                xmlWriter.writeEndElement();
            } if (localIsDisplayTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isDisplay", xmlWriter);


                if (localIsDisplay==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsDisplay);

                }

                xmlWriter.writeEndElement();
            } if (localIsPremCalFacotorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "isPremCalFacotor", xmlWriter);


                if (localIsPremCalFacotor==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localIsPremCalFacotor);

                }

                xmlWriter.writeEndElement();
            } if (localMakeDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeDate", xmlWriter);


                if (localMakeDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeDate);

                }

                xmlWriter.writeEndElement();
            } if (localMakeTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "makeTime", xmlWriter);


                if (localMakeTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localMakeTime);

                }

                xmlWriter.writeEndElement();
            } if (localModifyDateTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyDate", xmlWriter);


                if (localModifyDate==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyDate);

                }

                xmlWriter.writeEndElement();
            } if (localModifyTimeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "modifyTime", xmlWriter);


                if (localModifyTime==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localModifyTime);

                }

                xmlWriter.writeEndElement();
            } if (localOperatorTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "operator", xmlWriter);


                if (localOperator==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localOperator);

                }

                xmlWriter.writeEndElement();
            } if (localRiskCodeTracker){
                namespace = "http://pojo.webService.ebusiness.sinosoft.com/xsd";
                writeStartElement(null, namespace, "riskCode", xmlWriter);


                if (localRiskCode==null){
                    // write the nil attribute

                    writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                }else{


                    xmlWriter.writeCharacters(localRiskCode);

                }

                xmlWriter.writeEndElement();
            }
            xmlWriter.writeEndElement();


        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://pojo.webService.ebusiness.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                         javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            java.lang.String attributeNamespace = qname.getNamespaceURI();
            java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
            if (attributePrefix == null) {
                attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
            }
            java.lang.String attributeValue;
            if (attributePrefix.trim().length() > 0) {
                attributeValue = attributePrefix + ":" + qname.getLocalPart();
            } else {
                attributeValue = qname.getLocalPart();
            }

            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName, attributeValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace, attName, attributeValue);
            }
        }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
         * databinding method to get an XML representation of this object
         *
         */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                throws org.apache.axis2.databinding.ADBException{



            java.util.ArrayList elementList = new java.util.ArrayList();
            java.util.ArrayList attribList = new java.util.ArrayList();

            if (localFEMRiskBrightSpotListTracker){
                if (localFEMRiskBrightSpotList!=null) {
                    for (int i = 0;i < localFEMRiskBrightSpotList.length;i++){

                        if (localFEMRiskBrightSpotList[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(localFEMRiskBrightSpotList[i]);
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "FEMRiskBrightSpotList"));
                            elementList.add(null);

                        }

                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "FEMRiskBrightSpotList"));
                    elementList.add(localFEMRiskBrightSpotList);

                }

            } if (localAppFactorCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "appFactorCode"));

                elementList.add(localAppFactorCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppFactorCode));
            } if (localDefaultValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "defaultValue"));

                elementList.add(localDefaultValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDefaultValue));
            } if (localDutySnAmntTracker){
                if (localDutySnAmnt!=null){
                    for (int i = 0;i < localDutySnAmnt.length;i++){

                        if (localDutySnAmnt[i] != null){
                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "dutySnAmnt"));
                            elementList.add(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDutySnAmnt[i]));
                        } else {

                            elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                                    "dutySnAmnt"));
                            elementList.add(null);

                        }


                    }
                } else {

                    elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                            "dutySnAmnt"));
                    elementList.add(null);

                }

            } if (localFactorDisplayValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorDisplayValue"));

                elementList.add(localFactorDisplayValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorDisplayValue));
            } if (localFactorERiskDescTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorERiskDesc"));

                elementList.add(localFactorERiskDesc==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorERiskDesc));
            } if (localFactorListIDTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorListID"));

                elementList.add(localFactorListID==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorListID));
            } if (localFactorTypeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorType"));

                elementList.add(localFactorType==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorType));
            } if (localFactorValueTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValue"));

                elementList.add(localFactorValue==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValue));
            } if (localFactorValueFlagTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValueFlag"));

                elementList.add(localFactorValueFlag==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValueFlag));
            } if (localFactorValueOrderTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "factorValueOrder"));

                elementList.add(
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFactorValueOrder));
            } if (localIsDisplayTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isDisplay"));

                elementList.add(localIsDisplay==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsDisplay));
            } if (localIsPremCalFacotorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "isPremCalFacotor"));

                elementList.add(localIsPremCalFacotor==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPremCalFacotor));
            } if (localMakeDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeDate"));

                elementList.add(localMakeDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeDate));
            } if (localMakeTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "makeTime"));

                elementList.add(localMakeTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeTime));
            } if (localModifyDateTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyDate"));

                elementList.add(localModifyDate==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyDate));
            } if (localModifyTimeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "modifyTime"));

                elementList.add(localModifyTime==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModifyTime));
            } if (localOperatorTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "operator"));

                elementList.add(localOperator==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
            } if (localRiskCodeTracker){
                elementList.add(new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd",
                        "riskCode"));

                elementList.add(localRiskCode==null?null:
                        org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
            }

            return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



        /**
         *  Factory class that keeps the parse method
         */
        public static class Factory{




            /**
             * static method to create the object
             * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
             *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
             * Postcondition: If this object is an element, the reader is positioned at its end element
             *                If this object is a complex type, the reader is positioned at the end element of its outer element
             */
            public static FEMRiskFactorList parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
                FEMRiskFactorList object =
                        new FEMRiskFactorList();

                int event;
                java.lang.String nillableValue = null;
                java.lang.String prefix ="";
                java.lang.String namespaceuri ="";
                try {

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();


                    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                        java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                                "type");
                        if (fullTypeName!=null){
                            java.lang.String nsPrefix = null;
                            if (fullTypeName.indexOf(":") > -1){
                                nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                            }
                            nsPrefix = nsPrefix==null?"":nsPrefix;

                            java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FEMRiskFactorList".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FEMRiskFactorList)ExtensionMapper.getTypeObject(
                                        nsUri,type,reader);
                            }


                        }


                    }




                    // Note all attributes that were handled. Used to differ normal attributes
                    // from anyAttributes.
                    java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                    java.util.ArrayList list1 = new java.util.ArrayList();

                    java.util.ArrayList list4 = new java.util.ArrayList();


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list1.add(null);
                            reader.next();
                        } else {
                            list1.add(FEMRiskBrightSpotList.Factory.parse(reader));
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone1 = false;
                        while(!loopDone1){
                            // We should be at the end element, but make sure
                            while (!reader.isEndElement())
                                reader.next();
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone1 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","FEMRiskBrightSpotList").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list1.add(null);
                                        reader.next();
                                    } else {
                                        list1.add(FEMRiskBrightSpotList.Factory.parse(reader));
                                    }
                                }else{
                                    loopDone1 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setFEMRiskBrightSpotList((FEMRiskBrightSpotList[])
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                        FEMRiskBrightSpotList.class,
                                        list1));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","appFactorCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setAppFactorCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","defaultValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setDefaultValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutySnAmnt").equals(reader.getName())){



                        // Process the array and step past its final element's end.

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                            list4.add(null);

                            reader.next();
                        } else {
                            list4.add(reader.getElementText());
                        }
                        //loop until we find a start element that is not part of this array
                        boolean loopDone4 = false;
                        while(!loopDone4){
                            // Ensure we are at the EndElement
                            while (!reader.isEndElement()){
                                reader.next();
                            }
                            // Step out of this element
                            reader.next();
                            // Step to next element event.
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            if (reader.isEndElement()){
                                //two continuous end elements means we are exiting the xml structure
                                loopDone4 = true;
                            } else {
                                if (new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","dutySnAmnt").equals(reader.getName())){

                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        list4.add(null);

                                        reader.next();
                                    } else {
                                        list4.add(reader.getElementText());
                                    }
                                }else{
                                    loopDone4 = true;
                                }
                            }
                        }
                        // call the converter utility  to convert and set the array

                        object.setDutySnAmnt((java.lang.String[])
                                list4.toArray(new java.lang.String[list4.size()]));

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorDisplayValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorDisplayValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorERiskDesc").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorERiskDesc(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorListID").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorListID(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorType").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorType(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValue").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorValue(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValueFlag").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setFactorValueFlag(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","factorValueOrder").equals(reader.getName())){

                        java.lang.String content = reader.getElementText();

                        object.setFactorValueOrder(
                                org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                        object.setFactorValueOrder(java.lang.Integer.MIN_VALUE);

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isDisplay").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsDisplay(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","isPremCalFacotor").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setIsPremCalFacotor(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","makeTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setMakeTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyDate").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyDate(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","modifyTime").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setModifyTime(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","operator").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setOperator(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }


                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://pojo.webService.ebusiness.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                        nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                        if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                            java.lang.String content = reader.getElementText();

                            object.setRiskCode(
                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                        } else {


                            reader.getElementText(); // throw away text nodes if any.
                        }

                        reader.next();

                    }  // End of if for expected property start element

                    else {

                    }

                    while (!reader.isStartElement() && !reader.isEndElement())
                        reader.next();

                    if (reader.isStartElement())
                        // A start element we are not expecting indicates a trailing invalid property
                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




                } catch (javax.xml.stream.XMLStreamException e) {
                    throw new java.lang.Exception(e);
                }

                return object;
            }

        }//end of factory class



    }


    private  org.apache.axiom.om.OMElement  toOM(com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {


        try{
            return param.getOMElement(com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch(org.apache.axis2.databinding.ADBException e){
            throw org.apache.axis2.AxisFault.makeFault(e);
        }


    }

    private  org.apache.axiom.om.OMElement  toOM(com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {


        try{
            return param.getOMElement(com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse.MY_QNAME,
                    org.apache.axiom.om.OMAbstractFactory.getOMFactory());
        } catch(org.apache.axis2.databinding.ADBException e){
            throw org.apache.axis2.AxisFault.makeFault(e);
        }


    }


    private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
            throws org.apache.axis2.AxisFault{


        try{

            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
            emptyEnvelope.getBody().addChild(param.getOMElement(com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo.MY_QNAME,factory));
            return emptyEnvelope;
        } catch(org.apache.axis2.databinding.ADBException e){
            throw org.apache.axis2.AxisFault.makeFault(e);
        }


    }


                             /* methods to provide back word compatibility */




    /**
     *  get the default envelope
     */
    private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
    }


    private  java.lang.Object fromOM(
            org.apache.axiom.om.OMElement param,
            java.lang.Class type,
            java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {

            if (com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo.class.equals(type)){

                return com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfo.Factory.parse(param.getXMLStreamReaderWithoutCaching());


            }

            if (com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse.class.equals(type)){

                return com.sinosoft.webservice.productInfo.ProductInfoWebServiceStub.GetProductInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());


            }

        } catch (java.lang.Exception e) {
            throw org.apache.axis2.AxisFault.makeFault(e);
        }
        return null;
    }




}
   